LOCK TABLES `question` WRITE;
/*!40000 ALTER TABLE `question` DISABLE KEYS */;
INSERT INTO `question` VALUES (1,0,1,'Question 0','Question 0',1,'Faites afficher «Bonjour le monde!».',0,NULL),(2,0,1,'Question 1','Question 1',2,'Faites afficher la somme des nombres alpha et beta.',0,NULL),(3,0,1,'Question 2','Question 2',3,'Faites afficher le double de la variable alpha.',0,NULL),(4,0,1,'Question 3','Question 3',4,'Faites afficher la phrase «La somme de $r et $s est $reponse ».',0,NULL),(5,0,1,'Question 4','Question 4',5,'Faites afficher l\'entrée saisie au clavier.',0,NULL),(6,0,1,'Question 5','Question 5',6,'Répétez sur trois lignes l\'entrée saisie au clavier.',0,NULL),(7,0,1,'Question 6','Question 6',7,'Faites afficher le double de la valeur numérique saisie au clavier.',0,NULL),(8,0,1,'Question 7','Question 7',8,'Faites afficher la somme du double de la première valeur numérique saisie au clavier et de trois fois la deuxième.',NULL,NULL),(9,0,1,'Question 8','Question 8',9,'Faites afficher le résultat de la somme des entrées sous la forme «entrée1 + entrée2 = résultat» (par exemple «7 + 3 = 10»).',NULL,NULL),(10,0,2,'Question 1','Question 1',1,'Faites un programme qui affiche les nombres de 0 à 100 inclusivement sur une ligne chacun.',0,NULL),(11,0,2,'Question 2','Question 2',2,'Faites un programme qui affiche les nombres <b>pairs</b> de 0 à 100 inclusivement sur une ligne chacun.',NULL,NULL),(12,0,2,'Question 3','Question 3',3,'Faites un programme qui affiche les multiples de 3 entre 0 à 100 inclusivement <em>en ordre décroissant</em> sur une ligne chacun.',0,NULL),(13,0,2,'Question 4','Question 4',4,'Faites un programme qui affiche les multiples <em>impairs</em> de 3 entre 0 à 100 inclusivement <em>en ordre croissant</em> sur une ligne chacun.',0,NULL),(14,0,2,'Question 5','Question 5',5,'Faites un programme qui affiche les 20 premières puissances de 2 (de 2<sup>1</sup> à 2<sup>20</sup>) sur une ligne chacun.',0,NULL),(15,0,2,'Question 6','Question 6',6,'Faites un programme qui affiche les 20 premières puissances de 2 (de 2<sup>1</sup> à 2<sup>20</sup>) avec tous ses multiples sur une ligne chacune, sous la forme «2x2x2x2x2x2x2x2x2x2x = 1024».',0,NULL),(16,0,3,'Question 1','Question 1',1,'Soit le tableau nommé <em>tableau</em> ci-dessous. Faites un programme qui calcule et affiche le nombre d\'éléments que contient le tableau <em>tableau</em>.',0,NULL),(17,0,3,'Question 2','Question 2',2,'Soit le tableau nommé <em>tableau</em> ci-dessous. Faites un programme qui calcule et affiche le nombre d\'éléments <em>pairs</em> que contient le tableau <em>tableau</em>.',0,NULL),(18,0,3,'Question 3','Question 3',3,'Soit le tableau nommé <em>tableau</em> ci-dessous. Faites un programme qui calcule et affiche la somme de tous les éléments que contient le tableau <em>tableau</em>.',0,NULL),(19,0,3,'Question 4','Question 4',4,'Soit le tableau nommé <em>tableau</em> ci-dessous. Faites un programme qui calcule et affiche pour chaque élément la différence d\'avec le précédent en commençant par le deuxième élément.<br><br>Ex:<br>[1]-[0] = 393<br>[2]-[1] = -282<br>etc.',0,NULL),(20,0,3,'Question 5','Question 5',5,'Faites afficher la valeur du  premier élément du tableau <em>numeros</em>',0,NULL),(21,0,3,'Question 6','Question 6',6,'Faites afficher sous forme de tableau les 3 premiers éléments de <em>numeros</em>',0,NULL),(22,0,3,'Question 7','Question 7',7,'Faites afficher sous forme de tableau les éléments 1 à 8 de <em>numeros</em>',0,NULL),(23,0,3,'Question 8','Question 8',8,'Faites afficher sous forme de tableau les 4 derniers éléments de <em>numeros</em>',0,NULL),(24,0,3,'Question 9','Question 9',9,'Faites afficher sous forme de tableau tous les éléments de <em>numeros</em> dans l\'ordre inverse.',0,NULL),(25,0,3,'Question 10','Question 10',10,'Insérez les nombres 17, 42 et 25 au milieu de <em>numeros</em> puis faites afficher tous ses éléments sous forme de tableau, sachant que le tableau <em>numeros</em> est le taille fixe.',0,NULL),(26,0,3,'Question 11','Question 11',11,'Insérez les nombres 17, 42 et 25 au milieu de <em>numeros</em> puis faites afficher tous ses éléments sous forme de tableau, sachant que le tableau <em>numeros</em> est le taille variable.',0,NULL),(27,0,4,'Question 1','Question 1',1,'Faites afficher la phrase «Lorem ipsum dolor sit amet, consectetur adipiscing elit.»',0,NULL),(28,0,4,'Question 2','Question 2',2,'Faites afficher la phrase donnée en majuscules.',0,NULL),(29,0,4,'Question 3','Question 3',3,'Faites afficher le premier et le dernier caractère de la phrase donnée.',0,NULL),(30,0,4,'Question 4','Question 4',4,'Faites afficher le premier et le dernier caractère de la phrase donnée.',0,NULL),(31,0,4,'Question 5','Question 5',5,'Faites afficher la phrase donnée avec le premier caractère en majuscules.',0,NULL),(32,0,4,'Question 6','Question 6',6,'Faites afficher le nombre de mots dans la phrase donnée.',0,NULL),(33,0,4,'Question 7','Question 7',7,'Faites afficher la phrase donnée à l\'envers.',0,NULL),(34,0,4,'Question 8','Question 8',8,'Faites afficher les mots de la phrase donnée dans l\'ordre inverse.',0,NULL),(35,0,5,'Question 1','Question 1',1,'Exécutez la fonction <code>test</code>.',0,NULL),(36,0,5,'Question 2','Question 2',2,'Utilisez la fonction <code>afficher_nb</code> pour faire afficher 10 fois le nombre <code>nombre</code>.',0,NULL),(37,0,5,'Question 3','Question 3',3,'Utilisez les fonctions <code>afficher_nb1</code> et <code>afficher_nb2</code> pour faire afficher les deux nombres dans l\'ordre le  nombre 2 puis le  nombre 1',0,NULL),(38,0,5,'Question 4','Question 4',4,'Utilisez les fonctions <code>afficher_nb1</code> et <code>afficher_nb2</code> pour faire afficher les deux nombres dans l\'ordre le nombre 2 puis le nombre 1',0,NULL),(39,0,5,'Question 5','Question 5',5,'Exécutez la fonction <code>multiplier</code> pour faire afficher le double de <code>nombre</code>.',0,NULL),(40,0,5,'Question 6','Question 6',6,'La fonction <code>multiplier</code> a été modifiée. Désormais, elle <em>retourne</em> un nombre entier. Utilisez la fonction <code>multiplier</code> pour faire afficher le double de <code>nombre</code>.',0,NULL),(41,0,5,'Question 7','Question 7',7,'Utilisez la fonction <code>entier_aléatoire</code> pour obtenir et afficher un entier choisi aléatoirement entre 0 et 1000 inclusivement, sachant que <code>random.random</code> retourne un nombre réel choisi entre 0,0 et 1,0 inclusivement.',0,NULL),(42,0,5,'Question 8','Question 8',8,'Utilisez la fonction <code>entier_aléatoire</code> pour obtenir et afficher un entier choisi aléatoirement entre <em>100 et 200</em> inclusivement, sachant que <code>random.random</code> retourne un nombre réel choisi entre 0,0 et 1,0 inclusivement.',0,NULL),(43,0,5,'Question 9','Question 9',9,'Cette fonction <code>entier_aléatoire</code> est vraiment une bonne idée. Il serait encore mieux de lui donner un nouveau paramètre <code>min</code> délimitant le nombre pseudo-aléatoire minimum pouvant être retourné. Modifiez la fonction <code>entier_aléatoire</code> afin qu\'elle retourne un nombre entier pseudo-aléatoire entre <code>min</code> et <code>max</code>.',0,NULL),(44,0,5,'Question 10','Question 10',10,'Faites une fonction appelée <code>factorielle</code> permettant de calculer la factorielle de n\'importe quel nombre entier selon la signature donnée.',0,NULL),(45,0,6,'Question 1','Question 1',1,'Les doctests de cette fonction doivent <em>passer</em>',0,NULL),(46,0,6,'Question 2','Question 2',2,'Les doctests de cette fonction doivent <em>passer</em>',0,NULL),(47,0,6,'Question 3','Question 3',3,'Les doctests de cette fonction doivent <em>passer</em>. Souvenez-vous que <img class=\\\"mwe-math-fallback-image-inline tex\\\" alt=\\\"sqrt[n]{x} ,=, x^{1/n}\\\" src=\\\"http://upload.wikimedia.org/math/f/6/e/f6e2875466bdf9e5eb4a7db071b8e812.png\\\" />',0,NULL),(48,0,6,'Question 4','Question 4',4,'Les doctests de cette fonction doivent <em>passer</em>. ',0,NULL),(49,0,7,'Question 1','Question 1',1,'Les doctests de cette fonction doivent <em>passer</em>',0,NULL),(50,0,7,'Question 2','Question 2',2,'Les doctests de cette fonction doivent <em>passer</em>. Évitez le copier-coller!',0,NULL),(51,0,7,'Question 3','Question 3',3,'Les doctests de cette fonction doivent <em>passer</em>',0,NULL),(52,0,10,'Question 1','Question 1',1,'Faites afficher la combinaison du CoffreFort mon_coffre sous forme de liste.',0,NULL),(53,0,10,'Question 2','Question 2',2,'L\'attribut combinaison est maintenant privé. Procurez-lui un accesseur <code>get_combinaison</code>.',0,NULL),(54,0,10,'Question 3','Question 3',3,'Ajoutez maitenant un mutateur <code>set_combinaison</code> qui prend en paramètre une liste d\'exactement 4 entiers entre 0 et 99 inclusivement. Assurez-vous que toutes ces conditions seront toujours respectées.',0,NULL),(55,0,10,'Question 4','Question 4',4,'Ajoutons une porte à notre coffre-fort et deux méthodes, <code>ouvrir</code> et <code>fermer</code>. <code>ouvrir</code> prend une combinaison en paramètre et n\'ouvre la porte que si celle-ci correspond à la combinaison du coffre. <code>fermer</code>, quant à elle, ferme la porte de façon inconditionnelle. Une troisième méthode, <code>est_ouvert</code> retourne Vrai si et seulement si la porte est ouverte. Vous aurez besoin d\'un attribut supplémentaire : <code>__état_porte</code>\n<br><br>\n<img src=\'uml.jpg\'>',0,NULL),(56,0,11,'Question 1','Question 1',1,'Complétez les tests de la classe Dé',0,NULL),(57,0,11,'Question 2','Question 2',2,'Complétez les tests de la classe Dé',0,NULL),(58,0,11,'Question 3','Question 3',3,'Complétez les tests de la classe Dé',0,NULL),(59,0,13,'Question 1','Question 1',1,'Encore une fois, vous tentez de reproduire un outils commun en Python (peut-être dans l\'optique de développer PythonOS). Cette fois, vous vous attaquez à ping. Cette commande permet de tester la connectivité d\'un hôte distant. Vous avez déjà terminé la fonction <code>envoyerICMP</code> qui envoit un paquet ICMP (un paquet de test) à l\'hôte et calcule le temps requis pour recevoir une réponse. Faites maintenant la fonction <code>ping</code> elle-même.',0,NULL),(60,0,13,'Question 2','Question 2',2,'Fantastique! Maintenant ajoutons la possibilité d\'envoyer une série de paquets et de faire des statistiques.',0,NULL),(61,0,13,'Question 3','Question 3',3,'Que faire si on ne reçoit jamais de réponse de l\'hôte? Dans ce cas, une <code>envoyerICMP</code> lance une exception. Comptez le nombre de paquets perdus.',0,NULL),(62,0,8,'Question 1','Question 1',1,'Instanciez un Mogwai et faites-le se présenter grâce à la methode <code>présenter</code>.',0,NULL),(63,0,8,'Question 2','Question 2',2,'Instanciez deux Mogwais et faites-les se présenter grâce à la methode <code>présenter</code>',0,NULL),(64,0,8,'Question 3','Question 3',3,'Instanciez 5 Mogwais, placez-les dans une liste puis faites-les se présenter en <em>ordre inverse</em> de leur creation',0,NULL),(65,0,8,'Question 4','Question 4',4,'Lorsque les Mogwais sont mouillés, ils se divisent et créent un nouveau clone d\'eux-même. La seule différence est que le nouveau Mogwai porte un numéro incrémenté de 1 par rapport à son parent. Implémentez la méthode <code>mouiller</code> qui permet de créer le nouvel objet. ',0,NULL),(66,0,8,'Question 5','Question 5',5,'Lorsqu\'on donne à manger à un Mogwai, il se transforme en bête féroce appelée un Gremlin. Implémentez la méthode manger qui retourne un nouvel objet Gremlin portant le même numéro que le Mogwai si l\'heure passée est entre minuit et 7h. Implémentez aussi la classe Gremlin qui se présente en affichant «Grrr! je suis le Gremlin no xxx» où xxx est son numéro de Gremlin.',0,NULL),(67,0,9,'Question 1','Question 1',1,' \n<br>\n\nVous désirez faire l\'implémentation d\'une classe Compteur. Cette classe simule une distributrice de billets. À chaque appel de la méthode <code>suivant</code>, le numéro retourné est incrémenté de 1. Terminez l\'implémentation des méthodes <code>suivant</code> et <code>__str__</code> qui permet de faire afficher le traditionnel «On sert le x»\n<br>\n<br>\nVous pourrez trouver l\'ébauche de la class <code>Compteur</code> ici : <a href=\'q1/compteur.py\'>compteur.py</a>',0,NULL),(68,0,9,'Question 2','Question 2',2,'\n<br>\nVotre classe Compteur pourrait être améliorée par l\'ajout d\'un constructeur paramétré. Ajoutez-lui un paramètre formel qui permette de choisir la valeur du premier numéro servi.\n<br>\n<br>\nVous pourrez trouver l\'ébauche de la class <code>Compteur</code> ici : <a href=\'q2-nhziafccgo/compteur.py\'>compteur.py</a>',0,NULL),(69,0,9,'Question 3','Question 3',3,'\n<br>\nPour être utile, le compteur doit aussi pouvoir distribuer des billets aux clients. Puisque les numéros servis et distribués avancent rarement à la même vitesse, on doit ajouter un attribut <code>numéro_distribué</code> ainsi qu\'une méthode <code>distribuer</code> retournant le numéro du billet distribué.\n<br>\n<br>\nVous pourrez trouver l\'ébauche de la class <code>Compteur</code> ici : <a href=\'q3-wmomqpeksj/compteur.py\'>compteur.py</a>',0,NULL),(70,1,14,'Création d\'un répertoire','Création d\'un répertoire',1,'Créez un répertoire nommé <em>burger</em> dans le répertoire personnel de <em>krusty</em>.  Lorsque vous avez terminé, cliquez sur le bouton «Valider» pour valider votre réponse.',NULL,NULL),(71,1,14,'Suppression d\'un répertoire','Suppression d\'un répertoire',2,'Supprimez le répertoire nommé <em>documents_volés</em> dans le répertoire personnel de <em>krusty</em> ainsi que tout son contenu.',NULL,NULL),(72,1,15,'Quitter VIM','Quitter VIM',1,'Ho non! Vous avez démarré VIM par accident. Sortez-en!!!',NULL,''),(73,1,15,'VIM édition 1','VIM édition 1',4,'Vous devez modifier le fichier nommé <em>réponse</em> avec le seul éditeur de texte disponible: VIM.',NULL,''),(74,0,16,'Affichage de base','Affichage de base',1,'Faites afficher «Bonjour le monde!» suivi d\'un retour de chariot.',NULL,NULL),(75,0,19,'Entrée d\'entiers Positif/Négatif','Entrée d\'entiers Positif/Négatif',1,'Faites un programme qui reçoit un nombre entier en entrée, détermine s\'il est positif ou négatif et affiche la réponse : «Positif» ou «Négatif».',NULL,NULL),(76,0,19,'Entrée d\'entiers pair/impair','Entrée d\'entiers pair/impair',2,'Faites un programme qui reçoit un nombre entier en entrée, détermine s\'il est pair ou impair et affiche la réponse : «Pair» ou «Impair».',NULL,NULL),(77,0,17,'Plus grand entier','Plus grand entier',4,'Faites un programme qui reçoit deux nombres entiers et affiche le plus grand des deux.',NULL,NULL),(78,0,17,'Plus grand réel','Plus grand réel',5,'Faites un programme qui reçoit trois nombres réels et affiche le plus grand des trois.',NULL,NULL),(79,0,17,'Moyenne de réels','Moyenne de réels',6,'Faites un programme qui reçoit trois nombres réels et affiche la moyenne des trois avec une précision de deux décimales.',NULL,NULL),(80,0,17,'Longueur du mois','Longueur du mois',7,'Faites un programme qui reçoit un nombre de 1 à 12 et affiche le nombre de jours du mois correspondant (1=janvier, 2=février, etc. Ne tenez pas compte des années bissextiles).',NULL,NULL),(81,0,17,'Les années bissextiles','Les années bissextiles',8,'Faites un programme qui reçoit une année entre 1582 et 2199 et détermine si oui ou non il s\'agit d\'une année bissextile. Pour le calcul exact, voir <a href=\\\"https://fr.wikipedia.org/wiki/Ann%C3%A9e_bissextile\\\" target=_blank>wikipédia</a>\r\n<br><br>\r\nTestez votre programme au minimum avec les années suivantes : \r\n<pre>\r\n<ul>\r\n<li>2000 (oui)\r\n<li>2003 (non)\r\n<li>2004 (oui)\r\n<li>2100 (non)\r\n</ul>\r\n</pre>',NULL,NULL),(82,0,18,'Petits entiers','Petits entiers',1,'Ajoutez la déclaration de variable permettant la saisie d\'un nombre entier entre 0 et 1000.',NULL,NULL),(83,0,18,'Dépassement de capacité','Dépassement de capacité',2,'Déclarez une variable «entree» en lui donnant le type approprié et utilisant l\'espace minimal pour saisir un nombre compris entre -32768 et 32767. Observez l\'effet d\'une entrée hors-limites.',NULL,NULL),(84,0,18,'Dépassement de capacité non signé','Dépassement de capacité non signé',3,'Déclarez une variable «entree» en lui donnant le type approprié et utilisant l\'espace minimal pour saisir un nombre compris entre 0 et 65535. Observez l\'effet d\'une entrée hors-limites.',NULL,NULL),(85,0,18,'Grands entiers','Grands entiers',4,'Ajoutez la déclaration appropriée de la variable «entree» pour qu\'il soit possible de saisir un nombre entier entre -2 milliards et +2 milliards.',NULL,NULL),(86,0,18,'Grands entiers non signés','Grands entiers non signés',5,'Ajoutez la déclaration appropriée de la variable «entree» pour qu\'il soit possible de saisir un nombre entier entre 0 et 4 milliards.',NULL,NULL),(87,0,18,'Réels','Réels',5,'Ajoutez la déclaration de la variable «entree» afin de permettre la saisie d\'un nombre réel (selon le format anglais, soit avec un point comme séparateur de décimales).',NULL,NULL),(88,0,18,'Les caractères','Les caractères',6,'Ajoutez la déclaration des variables «initiale_prenom» et «initiale_nom» afin de permettre l\'entrée d\'une seule lettre pour chacune des questions.',NULL,NULL),(90,0,16,'Affichage multiligne','Affichage multiligne',2,'Faites afficher les deux lignes «Bonjour à tous» et «Bienvenue au quiz C++!!!» sur deux lignes consécutives. N\'oubliez pas le retour de chariot final.',NULL,NULL),(91,0,16,'Lignes vides','Lignes vides',3,'Faites afficher le texte suivant :\r\n\r\n<pre>\r\nLa ligne suivante est vide :\r\n\r\nLes deux prochaines aussi.\r\n\r\n\r\nC\'est terminé.\r\n<pre>',NULL,NULL),(92,0,16,'Affichage des guillemets','Affichage des guillemets',4,'Faites afficher le texte suivant suivi d\'un retour de chariot :\r\n\r\n<pre>\r\nCes guillemets sont dits \\\"anglais\\\" et délimitent les chaînes de caractères.\r\n<pre>',NULL,NULL),(93,0,19,'Comparaison d\'entiers 1','Comparaison d\'entiers 1',3,'Complétez ce programme qui doit afficher «Plus grand» si le premier entier saisi au clavier est plus grand que le second et «Pas plus grand» sinon.',NULL,NULL),(94,0,19,'Comparaison d\'entiers 2','Comparaison d\'entiers 2',4,'Complétez ce programme qui doit afficher «Plus grand» si le premier entier saisi au clavier est plus grand que le second, «Plus petit» s\'il est plus petit et «Égaux» s\'ils sont strictement égaux.',NULL,NULL),(96,0,19,'Comparaison triple','Comparaison triple',5,'Complétez ce programme qui doit afficher «Uniques» si les trois nombres saisis au clavier sont différents ou «Non uniques» si au moins deux d\'entre eux sont identiques.',NULL,NULL),(97,0,20,'While 1','While 1',1,'Utilisez une boucle while pour compter le nombre d\'entiers entrés par l\'utilisateur avant qu\'il n\'entre un point.',NULL,NULL),(98,0,20,'While 2','While 2',2,'Utilisez une boucle while pour compter puis indiquer combien de nombres l\'utilisateur a entré avant d\'entrer un 0.',NULL,NULL),(99,0,20,'Boucles imbriquées 3','Calcul des nombres premiers',7,'Faites un algorithme qui compte combien de nombres premiers existent entre 2 et n, où n est un nombre saisi en entrée.',NULL,NULL),(100,0,20,'For 1','For 1',3,'Faites une boucle for qui affiche tous les nombres pairs entre 2 et n inclusivement, séparés par une espace.',NULL,NULL),(101,0,20,'For 2','For 2',4,'Utilisez une boucle for pour faire afficher l\'alphabet en majuscules de «A» jusqu\'à et incluant la lettre saisie en entrée.',NULL,NULL),(102,0,20,'Boucles imbriquées 1','Le rectangles',5,'Faites afficher un rectangle de nxm caractères c où n, m et c sont données entrée standard.',NULL,NULL),(103,0,20,'Boucles imbriquées 2','Le triangle',6,'Faites afficher un triangle en «art ascii» de hauteur h donnée sur l\'entrée standard en utilisant les caractères «|», «\\», «_» et espace uniquement.',NULL,NULL),(104,0,21,'Déclaration d\'un tableau statique','Déclaration d\'un tableau statique',1,'Ajoutez la déclaration du tableau nb_pairs et l\'initialisation nécessaire pour faire afficher les nombres pairs de 2 à 10 inclusivement.',NULL,NULL),(105,0,21,'Déclaration d\'un tableau de taille variable','Déclaration d\'un tableau de taille variable',2,'Ajoutez la déclaration du tableau nb_pairs et l\'initialisation nécessaire pour faire afficher les nombres pairs de 2 à n inclusivement où n est un nombre entier < 20.',NULL,NULL),(106,0,21,'Copie d\'un tableau','Copie d\'un tableau',3,'Copiez le contenu du tableau entiers1 vers le tableau entiers2 que vous aurez déclaré. ',NULL,NULL),(107,0,21,'Inversion d\'un tableau','Inversion d\'un tableau',4,'Inversez l\'ordre des éléments du tableau nombres.',NULL,NULL),(108,0,21,'Fusion de tableaux','Fusion de tableaux',5,'Générez le tableau nombres3 en fusionnant en alternance le contenu des tableaux nombres1 et nombres2.',NULL,NULL),(109,0,22,'Déclaration d\'un tableau 2D de multiples','Déclaration d\'un tableau 2D de multiples',2,'Déclarez le tableau 2D de int nommé multiples et contenant les 5 premiers multiples des 5 premiers entiers naturels (1 à 5)',NULL,NULL),(110,0,22,'Déclaration d\'un tableau 2D de zeros','Déclaration d\'un tableau 2D de zeros',1,'Déclarez en initialisez un tableau 2D de int de dimension 5x7 nommé zeros et assurez-vous qu\'il ne contienne que des 0.',NULL,NULL),(111,0,22,'Recherche dans un tableau 2D','Recherche dans un tableau 2D',3,'Comptez le nombre de multiples de 3 dans le tableau «entiers» donné.',NULL,NULL),(112,0,22,'Remplissage en diagonale','Remplissage en diagonale',4,'Générez un tableau nommé «diagonales», de dimensions n par m et contenant les entiers de 1 à n+m-1 disposés en diagonales. ',NULL,NULL),(113,0,22,'Inversion d\'un tableau 2D','Inversion d\'un tableau 2D',5,'Inversez selon la diagonale le tableau carré de int «entiers» donné.',NULL,NULL),(114,0,23,'Tri de 3 chaînes','Tri de 3 chaînes',1,'Faites un programme qui reçoit par l\'entrée standard 3 chaînes de caractères de 200 caractères maximum, les tri et les affiche en ordre croissant selon l\'ordre ASCII.',NULL,NULL),(115,0,23,'Tri de n chaînes','Tri de n chaînes',2,'Faites un programme qui reçoit par l\'entrée standard n chaînes de caractères de 200 caractères maximum, les tri et les affiche en ordre croissant selon l\'ordre ASCII. Un point entré seul sur la dernière ligne indique la fin des entrées. ( 3 < n < 15).',NULL,NULL),(116,0,23,'Tri de chaînes préfixées','Tri de chaînes préfixées',3,'Faites un programme qui reçoit par l\'entrée standard n chaînes de caractères de 200 caractères maximum, les tri et les affiche en ordre croissant selon l\'ordre ASCII en triant les chaînes à partir de leur 5ième caractère (comme si elles commençaient toutes par un préfixe de longueur 4). Un point entré seul sur la dernière ligne indique la fin des entrées. ( 3 < n < 15).\r\n<br><br>\r\nPar exemple, un résultat d\'exécution pourrait être :<pre>\r\n012-Allo\r\n007-Bond\r\n134-Bonzai\r\n075-Zzzzzz\r\n</pre>',NULL,NULL),(117,0,24,'Fonction bin2int','Fonction bin2int',2,'Faites une fonction bin2int qui prend en paramètre une chaîne de caractère composée uniquement de 0 et de 1 représentant en binaire un nombre entier non signé et retourne ce nombre.\r\n<br>\r\n<br>\r\n<pre>\r\nint bin2int(const char* binaire);\r\n</pre>',NULL,NULL),(118,0,24,'Fonction inverser','Fonction inverser',1,'Faites une fonction <em>inverser</em> qui prend deux pointeurs de char, place dans la première chaîne la seconde inversée puis retourne un pointeur vers la chaîne destination.\r\n<br><br>\r\n<pre>\r\nchar* inverser(char* destination, const char* source)\r\n</pre>',NULL,NULL),(119,0,24,'Fonction int2bin','Fonction int2bin',3,'Faites une fonction int2bin qui prend en paramètre un entier positif et un pointeur de chaîne destination et retourne la représentation binaire du nombre dans la destination. La fonction retourne le pointeur de destination.\r\n<br><br>\r\n<pre>\r\nchar* int2bin(char* destination, int nombre)\r\n</pre>',NULL,NULL),(120,0,24,'Fonction moyenne','Fonction moyenne',4,'Faites une fonction <em>moyenne</em> qui prend en paramètre un tableau de float et le nombre d\'éléments dans le tableau et retourne la moyenne de ses éléments aussi sous forme de float.',NULL,NULL),(121,0,25,'Instanciation automatique','Instanciation automatique',1,'Utilisez un objet de la classe <em>string</em> instancié automatiquement (sur la pile) pour faire afficher «Bonjour le monde!».',NULL,NULL),(122,0,25,'Instanciation dynamique','Instanciation dynamique',2,'Utilisez un objet de la classe <em>string</em> instancié dynamiquement (sur le tas) pour faire afficher \"Rebonjour le monde!\"',NULL,NULL),(123,0,25,'Référence à un objet','Référence à un objet',3,'Utilisez la fonction <em>affichage</em> qui reçoit une référence à un objet de la classe <em>string</em> pour faire afficher «Rebonjour le monde!»',NULL,NULL),(124,0,25,'Utilisation des méthodes','Utilisation des méthodes',4,'Utilisez la méthode <em>string::length</em> pour connaître la taille d\'une string.',NULL,NULL),(125,0,25,'Utilisation des méthodes 2','Utilisation des méthodes 2',5,'Faites une fonction <em>strmax</em> qui retourne une référence celle des deux chaînes de caractères passées en paramètres qui serait normalement classée après l\'autre dans l\'ordre alphabétique (Selon l\'ordre de la table ASCII). Les 4 premiers caractères doivent être ignorés. Si les deux chaînes sont identiques, la première des deux est retournée.\r\n<br><br>\r\nIndice : voyez la méthode <em>string::compare</em>',NULL,NULL),(126,0,26,'Déclaration d\'une classe','Déclaration d\'une classe',1,'Déclarez la classe «Date» qui contient les attributs publics «annee», «mois» et «jour».',NULL,NULL),(127,0,26,'Accesseurs','Accesseurs',2,'Implémentez les accesseurs de la classe «Date».',NULL,NULL),(128,0,26,'Mutateurs','Mutateurs',3,'Déclarez et implémentez les mutateurs de la classe «Date».',NULL,NULL),(129,0,26,'Constructeur paramétré','Constructeur paramétré',4,'Déclarez et implémentez un constructeur paramétré qui prend en paramètre l\'année, le mois et le jour d\'une Date.',NULL,NULL),(130,0,26,'Classe Date complète','Classe Date complète',5,'Terminez la classe Date en améliorant les mutateurs. Ils devraient maintenant reporter les jours excédantaires sur le mois et les mois excédentaires sur l\'année. Par exemple, en entrant la date 2017/10/32, la date devrait devenir 2017/11/01 et en entrant 2017/10/62, on devrait obtenir 2017/12/01.\r\n<br>\r\nN\'oubliez pas de tenir compte des années bissextiles!',NULL,NULL),(131,0,27,'Constructeur par recopie implicite','Constructeur par recopie implicite',1,'Utilisez le constructeur par recopie de la classe Contact pour faire une copie d\'un de vos contacts préférés.',NULL,NULL),(132,0,27,'Constructeur par recopie profonde','Constructeur par recopie profonde',2,'Corrigez le problème apparent en implémentant un constructeur par recopie profonde.',NULL,NULL),(133,0,27,'L\'opérateur d\'affectation','L\'opérateur d\'affectation',4,'Continuons la classe Contact. Cette fois, il faudrait être capable d\'affecter un contact à une variable sans nécessairemet passer par l\'instanciation d\'un nouvel objet grâce au constructeur.',NULL,NULL),(134,1,28,'Recherche de paquets','Recherche de paquets',1,'Quel est le nom du paquet permettant d\'obtenir le manuel GNU (la commande man)?',NULL,NULL),(137,1,28,'Installation d\'un paquet','Installation d\'un paquet',2,'Effectuez l\'installation des paquets «man-db» et «manpages-fr» afin d\'avoir accès au manuel GNU/Linux.',NULL,''),(138,1,28,'Désinstallation d\'un paquet','Désinstallation d\'un paquet',3,'Vous avez installé par erreur le paquet «manpages-de» qui fournit le manuel GNU/Linux en allemand. Puisque vous ne <em>sprache deutsche</em> pas pen toute, supprimez ce paquet.',NULL,NULL),(139,1,28,'Autosupression des paquets inutiles','Autosupression des paquets inutiles',4,'Supprimez les paquets man-db, manpages-fr, manpages-fr-extra ainsi que toutes leurs dépendances rendues inutiles.',NULL,''),(140,1,28,'Mise à jour','Mise à jour',5,'Utilisez le manuel GNU.Linux pour trouver la commande permettant d\'effectuer la mise à jour de tous les paquets déjà installés, puis effectuez cette mise à jour.',NULL,''),(141,0,27,'Le destructeur','Le destructeur',3,'Ne laissez pas s\'échapper la mémoire! Implémentez le destructeur nécessaire.',NULL,NULL),(142,0,29,'Héritage du constructeur','Héritage du constructeur',2,'La classe GenerateurAleatoire permet de faire des tirages de nombre aléatoire entre deux limites. Elle peut servir de base à d\'autres classes représentant des méthodes de tirage aléatoires variées (comme les pièces de monnaies, les dés, les cartes, etc.).\r\n<br><br>\r\nCréez une classe «De» représentant un dé générique de n\'importe quel nombre de faces. Donnez-lui un constructeur prenant un seul paramètre, le nombre de faces. \r\n<br><br>\r\nImplémentez la fonction tirage qui retourne le résultat d\'un tir sous forme de chaîne de caractères. Utilisez la fonction protégée «_tirage_numérique» pour effectuer le tirage.',NULL,NULL),(143,0,29,'Héritage simple','Héritage simple',2,'La classe GenerateurAleatoire permet de faire des tirages de nombre aléatoire entre deux limites. Elle peut servir de base à d\'autres classes représentant des méthodes de tirage aléatoires variées (comme les pièces de monnaies, les dés, les cartes, etc.).\r\n<br><br>\r\nCréez une classe «Piece» sous-classe de GenerateurAleatoire qui représente une pièce de monnaie utilisée pour jouer à «pile ou face».\r\n<br><br>\r\nDonnez-lui un constructeur recevant deux paramètres, les chaînes de caractères utilsées pour représenter chacune des deux faces.\r\n<br><br>\r\nImplémentez la méthode «tirage» qui retourne aléatoirement l\'une des deux faces, en utilisant la méthode protégée «_tirage_numérique».',NULL,NULL),(144,1,14,'Renommer un répertoire','Renommer un répertoire',3,'Sans en modifier le contenu, renommez le répertoire <em>documents_volés</em> en <em>mes_notes</em>.',NULL,NULL),(145,1,14,'Déplacer un répertoire','Déplacer un répertoire',4,'Créez un répertoire «Documents» et déplacez-y le répertoire «mes_notes».',NULL,NULL),(146,1,30,'Suppression de fichiers','Suppression de fichiers',1,'Les fichiers se terminant par un tilde (~) sont des sauvegardes automatiques générées par certains éditeurs de texte. Supprimez tous ceux que vous trouverez dans le répertoire personnel de krusty.',NULL,NULL),(147,1,30,'Déplacement de fichiers','Déplacement de fichiers',2,'Les fichiers contenant des images (ceux dont l\'extension est jpg, gif ou png) sembleraient plus à leur place dans un répertoire <em>Images</em>. Faites un peu de ménage ici.',NULL,NULL),(148,1,30,'Renommer des fichiers','Renommer des fichiers',3,'la «photo» nommée «moi.png» dans le répertoire Images pourrait être renommée de façon un peu plus précise en ajoutant la date où elle a été prise. Renommez-la «moi-20120421.png».',NULL,NULL),(149,1,30,'Utilisation des raccourcis 1','Utilisation des raccourcis 1',4,'Continuons le ménage! Certaines images sont restées dans le répertoire temporaire /tmp. Déplacez-les dans le répertoire Images/Marge de Krusty. Pensez à utiliser le raccourci ~ qui représente le répertoire personnel de l\'utilisateur courant.',NULL,NULL),(150,1,30,'Utilisation des raccourcis 2','Utilisation des raccourcis 2',5,'Krusty est définitivement désordonné. Déplacez ses fichiers .txt laissés dans le répertoire Images vers son répertoire Documents. Pensez à utiliser le raccourci ..',NULL,NULL),(151,1,0,'Question 1','Question 1',1,'',NULL,NULL),(152,1,31,'Question 0','Question 0',0,'Effacez les traces du petit poucet en supprimant le fichier «miettes» dans son répertoire personnel',NULL,'CeciEstLeCodeDeValidation'),(153,1,31,'Question 1','Question 1',1,'Renommez le répertoire «forêt» en «maison».',NULL,'Mais0nD0uceMa1s0N'),(154,1,31,'Question 2','Question 2',2,'Combien de fichiers contient le répertoire ~petitpoucet/maison/miettes?',NULL,'1lyadesM1ette5Part0ut'),(155,1,31,'Question 3','Question 3',3,'Déplacez tous les fichiers «miettesX» du répertoire ~petitpoucet/maison/miettes vers le répertoire temporaire /tmp.',NULL,'OnPeutToujoursCompterSurSlashTmp'),(156,1,31,'Question 4','Question 4',4,'Tout compte fait, vous auriez bien voulu garder au moins une miette. Rammenez le fichier miette6 dans un nouveau sous-répertoire «MyPrecious» dans le répertoire personnel du petit poucet et renommez le fichier «précieuse_miette».',NULL,'G0lumAm1P3t1tP0ucet'),(157,1,31,'Question 5','Question 5',5,'Cette fois la réponse est dans le texte du fichier précieuse_miettes, tout simplement.',NULL,'LeP3t1tP0ucetPréfèreB4sh!'),(158,1,32,'Affichage du contenu d\'un fichier','Affichage du contenu d\'un fichier',1,'Il paraît que certaines personnes utilisent le nom de leur animal domestique comme mot de passe... Quelle mauvaise idée. Sideshow Bob aurait trouvé celui de Krusty (le mot de passe, pas l\'animal). Trouvez comment il a fait et quel est le nom du chat de Krusty.',NULL,''),(159,1,32,'Parcourir un fichier','Parcourir un fichier',2,'Krusty a (encore!) perdu son mot de passe de son compte sur le réseau social de clowns, Facedeclown.com. Il se souvient l\'avoir caché quelque part dans un fichier qui semble ne contenir que du texte sans signification.<br><br>Aidez-le à le retrouver ',NULL,''),(160,1,32,'Recherche dans un fichier','Recherche dans un fichier',3,'Krusty pense avoir trouvé une bonne façon de cacher ses mots de passe dans un fichier texte... prouvez-lui que c\'est faux en trouvant son mot de passe de son compte gogleplex.com (ne cherchez pas à l\'œil, vous ne vous en sortirez pas!)',NULL,''),(161,1,32,'Ajout à un fichier','Ajout à un fichier',4,'Utilisez cat pour ajouter le contenu de à_faire2.txt à la suite de à_faire.txt puis supprimer à_faire2.txt',NULL,''),(162,1,33,'Consulter un fichier','',1,'Vous trouverez dans le fichier /etc/os-release des informations sur la version du système d\'exploitation. Donnez sa version complète incluant le nom de code.',NULL,'16.04.3 LTS (Xenial Xerus)'),(163,1,33,'Début de fichier','',2,'Le fichier /var/log/dpkg contient l\'historique de toutes les manipulations de paquets (installations, suppressions, etc.). Dites quel paquet a été installé en premier, le 6 octobre 2017.',NULL,''),(164,1,34,'Identification d\'un lien symbolique','Identification d\'un lien symbolique',1,'Parmi tous les fichiers se trouvant dans le répertoire de Krusty, dites lequel est un lien symbolique (donnez son chemin complet, commençant par /).',NULL,''),(165,1,34,'Créer un lien symbolique','Créer un lien symbolique',2,'Lorsque Krusty insère une clé usb dans son système, elle est montée automatiquement dans le répertoire /media/krusty/clé_usb. Ce chemin lui semble un peu trop long et il voudrait pouvoir accéder à sa clé usb directement de son répertoire personnel. Créez pour lui un lien symbolique directement dans son répertoire personnel nommé «usb» et pointant vers le répertoire /media/krusty/clé_usb.',NULL,''),(166,1,34,'Modifier un lien symbolique','Modifier un lien symbolique',3,'Le lien symbolique /var/backups/choses_à_faire ne semble pas fonctionner. Pouvez-vous régler le problème?',NULL,''),(167,1,34,'Créer un lien direct','Créer un lien direct',4,'Krusty est en train de télécharger un fichier dans le répertoire /tmp. Il voudrait que son fichier se trouve dans son répertoire Documents dès que le téléchargement sera terminé. Aidez-le en créant un lien direct nommé plans_étoile_noire.pdf dans son répertoire Documents.',NULL,''),(168,1,35,'Numéro d\'utilisateur','Numéro d\'utilisateur',1,'Quel est le numéro d\'utilisateur de Bart?',NULL,''),(169,1,35,'Groupe principal','Groupe principal',2,'Quel est le numéro du groupe principal de Maggie?',NULL,''),(170,1,35,'Numéro de groupe','Numéro de groupe',3,'Quel est le numéro du groupe «simpson»?',NULL,''),(171,1,35,'Membre d\'un groupe','Membre d\'un groupe',4,'Qui est le seul membre du groupe No1003?',NULL,''),(172,1,36,'Numéro d\'utilisateur','Numéro d\'utilisateur',1,'Quel est le numéro d\'identification de l\'utilisateur «krusty»?',NULL,''),(173,1,36,'Propriétaire de fichier','Propriétaire de fichier',2,'Quel est le propriétaire du fichier /tmp/devoir.docx',NULL,''),(174,1,37,'Création d\'un nouvel utilisateur','Création d\'un nouvel utilisateur',1,'Créez un nouvel utilisateur «sideshowbob» dont le nom réel est «Robert Underdunk Terwilliger Jr.», bureau No «Cellule 13» sans téléphone ni autres informations. Son mot de passe doit être «diebartdie».',NULL,''),(175,1,39,'groupes','groupes',1,'De quel groupe fait partie krusty, en plus de son groupe propre.',NULL,'AllY0uNeEdIsL0v3'),(176,1,39,'Vol de mot de passe','Vol de mot de passe',2,'Vous savez que Bobby cache un terrible secret... pouvez-vous le découvrir?',NULL,'48DnEY5a2vmaBP7'),(177,1,40,'Permission de lecture','Permission de lecture',1,'La réponse se trouve dans le fichier illisible.txt',NULL,''),(178,1,40,'Lecture d\'un répertoire','Lecture d\'un répertoire',2,'Krusty place ses fichiers privé dans un sous-répertoire de son répertoire personnel appelé «privé», justement. Il veut empêcher les autres utilisateurs de les voir ou de les utiliser (même d\'en voir la liste) sans les empêcher de consulter son home (entre autre pour permettre l\'accès à son répertoire public_html). Donnez-lui un coup de main avec ses permissions.\r\n<br><br>\r\nVous pouvez avoir le point de vue d\'un autre utilisateur en vous connectant en tant que sideshowbob dont le mot de passe est «diebartdie».\r\n<br><br>\r\n<pre>su -l sideshowbob</pre>\r\n',NULL,''),(179,1,40,'Écriture limitée','Écriture limitée',4,'Afin de faciliter la collaboration entre lui-même et ses collaborateurs «sideshows», Krusty a pensé leur permettre de déposer des fichiers dans un répertoire «collaborations» ou lui et ses acolytes ont les droits d\'écriture mais personne d\'autre. Aussi, il a créé un groupe «sideshows» et y a intégré Sideshow Bob et Sideshow Mel. Donnez-leur les permissions adéquates sur le répertoire «collaborations»\r\n<br><br>\r\nVous pouvez avoir le point de vue d\'un autre utilisateur en vous connectant en tant que sideshowbob dont le mot de passe est «diebartdie» ou en tant que sideshowmel dont le mot de passe est «barbara».\r\n<br><br>\r\n<pre>su -l sideshowbob</pre>',NULL,''),(180,1,40,'Écriture pour tous','Écriture pour tous',3,'Krusty est toujours à l\'affût des commentaires, surtout des positifs. Aussi, il voudrait permettre à tous les utilisateurs du système de lui laisser des mots sous forme de fichier dans un répertoire «commentaires». Ce répertoire doit donc permettre l\'écriture pour tous. Cependant, il veut être le seul à pouvoir le consulter et même à pouvoir consulter la liste des fichiers qui s\'y trouvent.\r\n<br><br>\r\nVous pouvez avoir le point de vue d\'un autre utilisateur en vous connectant en tant que sideshowbob dont le mot de passe est «diebartdie».\r\n<br><br>\r\n<pre>su -l sideshowbob</pre>',NULL,''),(181,1,40,'Combinaison de permission','Combinaison de permission',5,'Par erreur, Krusty a donné toutes les permissions à tout le monde sur les fichiers de son sous-répertoire Documents. Arrangez les choses en donnant les droits de lecture et écriture à krusty et lecture seulement à son groupe et aux autres. Vous pouvez utiliser les caractères génériques (*?) pour changer les permissions de plusieurs fichiers à la fois.',NULL,''),(182,1,15,'Défilement','Défilement',2,'La réponse se trouve dans le fichier réponse. Faites défiler quelques lignes pour la voir.',NULL,''),(183,1,15,'Fin de fichier','Fin de fichier',3,'Cette fois, la réponse est à la toute fin du fichier <em>réponse</em>. (Il est énorme, ne le faites pas défiler ligne par ligne!)',NULL,''),(184,0,41,'Recherche d\'un élément','Recherche d\'un élément',1,'Utilisez la fonction «find» pour déterminer si le nombre entré sur l\'entrée standard existe dans le vecteur.',NULL,''),(185,0,41,'Compte d\'éléments','Compte d\'éléments',2,'Utilisez la fonction «count» pour compter le nombre de fois où apparaît 42 dans le vecteur v.',NULL,''),(186,0,41,'Éléments adjacents','Éléments adjacents',3,'Utilisez la fonction «adjacent_find» pour trouver et compter le nombre de fois qu\'apparaissent de façon contiguë des éléments identiques (par exemple ...,42,42,...).',NULL,''),(187,0,41,'Élimination d\'éléments','Élimination d\'éléments',5,'Éliminez du vecteur v toutes les occurences du plus grand élément.',NULL,''),(188,0,41,'Plus grand élément','Plus grand élément',4,'Trouvez le plus grand élément du vecteur v.',NULL,''),(189,0,41,'Plus petit élément','Plus petit élément',6,'Trouvez le deuxième plus petit élément du vecteur v.',NULL,''),(190,1,42,'Bottin téléphonique','Bottin téléphonique',2,'Vous avez en votre possession le bottin téléphonique complet de l\'école Polytechnique. Malheureusement les entrées s\'y trouvent en désordre. <br><br>Combinez les commandes bash connues pour générer un fichier nommé «chimie.txt» et contenant tous les numéros de téléphones du département de génie chimique en ordre alphabétique de nom de famille.',NULL,'mUjGqtZIiaLn0Ig'),(191,1,42,'Compter les lignes','Compter les lignes',1,'Vous avez en votre possession le bottin téléphonique complet de l\'école Polytechnique. Malheureusement les entrées s\'y trouvent en désordre. <br><br>À partir de ce fichier, pouvez-vous dire combien de personnes font partie du «Groupe d\'études de recherche en analyse des décisions (GERAD)»?',NULL,'QUv7rfif8skyEEi'),(192,1,43,'Compte de fichiers','Compte de fichiers',1,'Utilisez wc pour compter le nombre total de fichiers et sous-répertoires directement dans le répertoire /bin sans compter les deux liens . et ..',NULL,''),(193,1,43,'Compte de fichiers 2','Compte de fichiers 2',2,'Combien de programmes dans /bin dont le nom termine par la lettre p?',NULL,''),(194,1,43,'Grep et compte 1','Grep et compte 1',3,'Combien de programme dans /bin comptent au moins un e dans leur nom?',NULL,''),(195,1,43,'Grep et compte 2','Grep et compte 2',4,'Combien de programme dans /bin comptent au moins un e et un a dans leur nom?',NULL,''),(196,1,43,'Octets aléatoires','Octets aléatoires',5,'Utilisée avec l\'option -n, la commande head permet d\'afficher sur la sortie standard un nombre précis de lignes tirées d\'un fichiers. Utilisez-la pour sélectionner les 5 première lignes de /etc/passwd classées en ordre alphabétique de nom d\'utilisateur et placez cette liste dans un fichier nommé «utilisateurs» dans /home/mario.',NULL,''),(197,1,43,'Head et Tail','Head et Tail',6,'Combinez les commandes head et tail pour placer dans un fichier nommé «/home/mario/utilisateurs» les lignes 5 à 10 inclusivement de /etc/passwd.',NULL,''),(198,1,43,'cut 1','cut 1',7,'La commande cut permet d\'extraire d\'une ligne un champ délimité par un caractère en particulier. L\'option -d permet de spécifier le caractère délimiteur et l\'option -f permet de choisir le champ désiré. Par exemple, en faisant «cut -d \' \' -f 3» on obtient le mot après la deuxième espace de la ligne placée sur l\'entrée standard.\r\n<br><br>\r\nUtilisez sort et cut pour placer dans le fichier /home/mario/utilisateurs une liste de tous les nom d\'utilisateurs (et seulement les noms d\'utilisateur) présents dans /etc/passwd en ordre alphabétique.',NULL,''),(199,1,43,'cut 2','cut 2',8,'Utilisez grep, sort et cut pour fournir dans /home/mario/utilisateurs une liste en ordre alphabétique de tous les utilisateurs dont l\'interpréteur de commande préféré n\'est pas bash (voyez l\'option -v de grep).',NULL,''),(200,1,43,'uniq','uniq',9,'la commande uniq (comme ça, sans «ue») affiche à la sortie standard une seule des  lignes consécutives identiques qu\'elle reçoit sur son entrée standard.<br><br>Utilisez cette commande pour fournir dans le fichier /home/mario/shells une liste en ordre alphabétique de tous les interpréteurs de commande préférés se trouvant dans /etc/passwd.',NULL,''),(201,1,44,'Exécution d\'un script 1','Exécution d\'un script 1',1,'Faites exécuter le script dans le répertoire personnel de Krusty.',NULL,''),(202,1,44,'Exécution d\'un script 2','Exécution d\'un script 2',2,'Encore une fois, faites exécuter le script dans le home de Krusty.',NULL,''),(2789,1,2789,'Variables d\'environnement','Variables d\'environnement',1,'Pour indiquer à bash quelle est la langue d\'usage préférée d\'un utilisateur, on utilise les variables d\'environnement LANGUAGE et LC_ALL. Eliot voudrait que son interpréteur de commande communique avec lui en français. Placez dans ses variables d\'environnement LANGUAGE et LC_ALL la valeur «fr_CA.utf8», indiquant le français canadien et l\'encodage de caractère UTF8. Ces variables doivent avoir la bonne valeur dès le démarrage de toutes les instances de bash (c\'est-à-dire que la modification aux variables d\'environnement doit être permanente).',NULL,'wuB2hBZ2ithCg8Y'),(2790,1,2789,'ménage','ménage',2,'Eliot est une personne désordonnée. Il laisse beaucoup trop de fichiers pêle-mêle dans son dossier personnel. Aidez-le à faire le ménage en déplaçant tous les fichiers d\'extension jpg dans le répertoire Images, tous les fichiers commençant par «devoir» dans le répertoire «Devoirs» et tout les autres dans Documents.',NULL,'vLV6dZ7LUxJf3yC');
/*!40000 ALTER TABLE `question` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `question_prog` WRITE;
/*!40000 ALTER TABLE `question_prog` DISABLE KEYS */;
INSERT INTO `question_prog` VALUES (1,NULL,'$r=rand(0,1000); ','','','print(42)','','\"Bonjour le monde!\n\"',NULL,NULL),(2,NULL,'$r=rand(0,1000); $s=rand(0,1000); $somme=$r+$s; ','','\"alpha=$r\nbeta=$s\"','print(42)','','\"$somme\n\"',NULL,NULL),(3,NULL,'$r=rand(0,1000); $reponse=2*$r; ','','\"alpha=$r\"','print(42)','','\"$reponse\n\"',NULL,NULL),(4,NULL,'$r=rand(0,1000); $s=rand(0,1000); $reponse=$r+$s; ','','\"alpha=$r\nbeta=$s\"','print(42)','','\"La somme de $r et $s est $reponse\n\"',NULL,NULL),(5,NULL,'$entree=explode(\"\r\n\",$_POST[\"stdin\"]); if($entree[0]==0){   $entree[0]=rand(0,999); } if($entree[1]==0){   $entree[1]=rand(0,999); }  if($_POST[\'stdin\']==\'\') $_POST[\'stdin\']=$entree[0]; ','','','print(42)','','\"$entree[0]\n\"',NULL,NULL),(6,NULL,'$entree=explode(\"\r\n\",$_POST[\"stdin\"]); if($entree[0]==\'\'){   $entree[0]=rand(0,999); }  if($_POST[\'stdin\']==\'\') $_POST[\'stdin\']=$entree[0];  ','','','print(42)','','\"$entree[0]\n$entree[0]\n$entree[0]\n\"',NULL,NULL),(7,NULL,'$entree=explode(\"\n\",$_POST[\"stdin\"]); if($entree[0]==\'\'){   $entree[0]=rand(0,999); }  if($_POST[\'stdin\']==\'\') $_POST[\'stdin\']=$entree[0];   ','','','print(42)','','intval($entree[0])*2 . \"\n\"',NULL,NULL),(8,1,'$entree=explode(\"\r\n\",$_POST[\"stdin\"]); if($entree[0]==0){   $entree[0]=rand(0,999); } if($entree[1]==0){   $entree[1]=rand(0,999); }  if($_POST[\'stdin\']==\'\') $_POST[\'stdin\']=\"$entree[0]\r\n$entree[1]\";  ','','','print(42)','','intval($entree[0])*2+intval($entree[1])*3 . \"\r\n\"','','\"$entree[0]\\n$entree[1]\\n\"'),(9,1,'$entree=explode(\"\r\n\",$_POST[\"stdin\"]); if($entree[0]==0){   $entree[0]=rand(0,999); } if($entree[1]==0){   $entree[1]=rand(0,999); } if($_POST[\'stdin\']==\'\') $_POST[\'stdin\']=\"$entree[0]\r\n$entree[1]\";  ','','','print(42)','','$entree[0]. \" + \" . $entree[1] . \" = \" . strval(intval($entree[0])+intval($entree[1])) . \"\r\n\"','','\"$entree[0]\\n$entree[1]\\n\"'),(10,NULL,'','','','print(0)','','\"0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n\"',NULL,NULL),(11,1,'','','','print(0)','','\"0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n14\r\n16\r\n18\r\n20\r\n22\r\n24\r\n26\r\n28\r\n30\r\n32\r\n34\r\n36\r\n38\r\n40\r\n42\r\n44\r\n46\r\n48\r\n50\r\n52\r\n54\r\n56\r\n58\r\n60\r\n62\r\n64\r\n66\r\n68\r\n70\r\n72\r\n74\r\n76\r\n78\r\n80\r\n82\r\n84\r\n86\r\n88\r\n90\r\n92\r\n94\r\n96\r\n98\r\n100\r\n\"','',''),(12,NULL,'','','','print(0)','','\"99\n96\n93\n90\n87\n84\n81\n78\n75\n72\n69\n66\n63\n60\n57\n54\n51\n48\n45\n42\n39\n36\n33\n30\n27\n24\n21\n18\n15\n12\n9\n6\n3\n0\"',NULL,NULL),(13,NULL,'','','','print(0)','','\"3\n9\n15\n21\n27\n33\n39\n45\n51\n57\n63\n69\n75\n81\n87\n93\n99\"',NULL,NULL),(14,NULL,'','','','print(0)','','\"2\n4\n8\n16\n32\n64\n128\n256\n512\n1024\n2048\n4096\n8192\n16384\n32768\n65536\n131072\n262144\n524288\n1048576\n\"',NULL,NULL),(15,NULL,'','','','print(0)','','\"2x = 2\n2x2x = 4\n2x2x2x = 8\n2x2x2x2x = 16\n2x2x2x2x2x = 32\n2x2x2x2x2x2x = 64\n2x2x2x2x2x2x2x = 128\n2x2x2x2x2x2x2x2x = 256\n2x2x2x2x2x2x2x2x2x = 512\n2x2x2x2x2x2x2x2x2x2x = 1024\n2x2x2x2x2x2x2x2x2x2x2x = 2048\n2x2x2x2x2x2x2x2x2x2x2x2x = 4096\n2x2x2x2x2x2x2x2x2x2x2x2x2x = 8192\n2x2x2x2x2x2x2x2x2x2x2x2x2x2x = 16384\n2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x = 32768\n2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x = 65536\n2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x = 131072\n2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x = 262144\n2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x = 524288\n2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x2x = 1048576\n\"',NULL,NULL),(16,NULL,'$nb_i=rand(500,1000); $t=\"[\"; for($i=0;$i<$nb_i;$i++){     $t=$t . strval(rand(0,999)) . \", \"; } $t=$t . strval(rand(0,999)) . \"]\"; ','','\"tableau=$t\"','print(0)','','$nb_i+1 . \"\n\"',NULL,NULL),(17,NULL,'$nb_i=rand(500,1000); $nb_pair=0; $t=\"[\"; for($i=0;$i<$nb_i;$i++){     $nb_r=strval(rand(0,999));     if($nb_r%2==0) $nb_pair++;     $t=$t . $nb_r . \", \"; } chop($t, \", \"); $t=$t . \"]\";  ','','\"tableau=$t\"','print(0)','','$nb_pair . \"\n\"',NULL,NULL),(18,NULL,'$nb_i=rand(500,1000); $nb_somme=0; $t=\"[\"; for($i=0;$i<$nb_i;$i++){     $nb_r=strval(rand(0,999));     $nb_somme+=$nb_r;     $t=$t . $nb_r . \", \"; } chop($t,\", \"); $t=$t . \"]\";  ','','\"tableau=$t\"','print(0)','','$nb_somme . \"\n\"',NULL,NULL),(19,NULL,'','','\"tableau=[286, 679, 397, 494, 150, 23, 252, 277, 639, 62, 563, 430, 19, 934, 848, 117, 926, 753, 317, 94,\n 229, 371, 227, 639, 176, 481, 14, 668, 119, 842, 876, 897, 889, 909, 835, 194, 263, 629, 898, 650,\n 987, 464, 803, 802, 831, 585, 798, 418, 668, 1, 656, 560, 796, 944, 277, 330, 461, 113, 862, 731,\n 644, 471, 829, 535, 852, 131, 669, 761, 631, 595, 49, 352, 438, 367, 837, 454, 933, 52, 416, 578,\n 327, 182, 942, 50, 503, 948, 263, 821, 608, 41, 237, 182, 672, 219, 828, 813, 989, 281, 671, 895,\n 180, 895, 989, 226, 573, 450, 69, 449, 287, 499, 511, 743, 193, 62, 892, 98, 175, 706, 245, 294,\n 345, 8, 524, 827, 508, 171, 25, 441, 495, 161, 779, 800, 979, 527, 788, 691, 7, 858, 607, 586,\n 742, 296, 890, 199, 493, 523, 540, 636, 652, 17, 114, 720, 552, 539, 946, 243, 619, 139, 763, 789,\n 861, 397, 138, 706, 652, 79, 197, 979, 618, 779, 375, 157, 421, 671, 590, 999, 95, 506, 599, 965,\n 261, 113, 361, 86, 286, 347, 232, 926, 529, 9, 908, 936, 625, 87, 614, 969, 659, 147, 880, 170,\n 715, 84, 517, 374, 142, 259, 14, 873, 456, 387, 27, 794, 548, 764, 436, 294, 812, 536, 76, 828,\n 459, 727, 498, 953, 304, 547, 762, 24, 392, 622, 264, 513, 936, 644, 132, 777, 166, 106, 277, 57,\n 872, 838, 102, 730, 233, 468, 764, 310, 638, 891, 525, 570, 601, 569, 617, 933, 219, 241, 338, 158,\n 112, 202, 334, 419, 444, 217, 614, 820, 31, 254, 949, 248, 935, 941, 360, 272, 249, 842, 15, 596,\n 805, 457, 712, 626, 152, 570, 264, 76, 1, 453, 985, 333, 787, 510, 34, 912, 60, 634, 401, 289,\n 574, 742, 547, 822, 118, 456, 523, 137, 514, 531, 0, 311, 142, 796, 434, 85, 375, 435, 824, 370,\n 584, 761, 942, 988, 164, 816, 440, 95, 957, 69, 85, 464, 480, 728, 866, 782, 617, 347, 527, 600,\n 344, 711, 374, 592, 128, 595, 359, 877, 674, 392, 67, 683, 336, 205, 65, 579, 805, 807, 531, 731,\n 51, 975, 695, 141, 162, 963, 888, 824, 235, 802, 330, 891, 145, 979, 315, 865, 41, 756, 739, 547,\n 474, 394, 56, 596, 964, 270, 437, 0, 296, 401, 226, 794, 878, 977, 547, 479, 663, 4, 752, 179,\n 542, 464, 706, 946, 661, 242, 67, 560, 939, 264, 927, 450, 420, 277, 767, 134, 861, 55, 770, 621,\n 269, 98, 288, 636, 388, 84, 668, 295, 90, 61, 437, 357, 317, 910, 303, 306, 248, 68, 374, 780,\n 984, 548, 333, 920, 965, 819, 50, 562, 311, 722, 261, 36, 628, 27, 528, 649, 933, 598, 313, 872,\n 49, 992, 891, 165, 129, 841, 584, 868, 47, 265, 901, 715, 116, 763, 980, 758, 223, 171, 794, 750,\n 527, 747, 468, 656, 289, 6, 541, 409, 147, 220, 760, 420, 69, 833, 202, 324, 941, 976, 167, 914,\n 676, 833, 253, 523, 170, 457, 753, 165, 872, 147, 585, 999, 617, 990, 782, 117, 502, 91, 392, 731,\n 813, 671, 348, 694, 191, 893, 946, 548, 804, 347, 464, 662, 353, 399, 930, 350, 634, 504, 725, 333,\n 348, 88, 938, 189, 173, 815, 14, 197, 823, 770, 592, 184, 684, 576, 783, 87, 225, 315, 387, 769,\n 312, 359, 293, 414, 150, 776, 180, 924, 160, 847, 780, 34, 705, 87, 403, 570, 242, 206, 147, 26,\n 325, 964, 699, 458, 958, 815, 857, 436, 874, 276, 876, 953, 456, 622, 877, 566, 601, 237, 815, 683,\n 73, 216, 138, 46, 187, 122, 934, 693, 894, 816, 317, 644, 279, 830, 552, 937, 94, 263, 642, 13,\n 467, 33, 408, 498, 524, 775, 1, 978, 720, 793, 749, 579, 631, 496, 38, 604, 391, 183, 717, 722,\n 506, 527, 918, 91, 379, 566, 6, 588, 481, 597, 594, 399, 122, 403, 918, 422, 899, 870, 939, 342,\n 607, 544, 487, 430, 17, 684, 898, 765, 304, 203, 483, 561, 790, 462, 939, 921, 179, 482, 747, 986,\n 865, 750, 299, 331, 305, 286, 683, 225, 691, 316, 633, 808, 692, 747, 114, 826, 1, 903, 453, 146,\n 694, 665, 788, 397, 99, 395, 435, 795, 795, 842, 124, 260, 90, 418, 76, 864, 385, 543, 750, 355,\n 108, 963, 770, 93, 821, 321, 89, 651, 328, 180, 849, 578, 265, 296, 166, 815, 255, 747, 309, 303,\n 945, 635, 202, 77, 310, 810, 922, 219, 204, 555, 513, 251, 393, 280, 521, 174, 715, 107, 175, 741,\n 328, 531, 801, 766, 734, 40, 634, 568, 354, 782, 571, 223, 329, 685, 458, 791, 774, 789, 327, 571,\n 393, 95, 486, 354, 241, 524, 257, 139, 317, 693, 342, 436, 864, 800, 517, 904, 298, 470, 31, 289,\n 994, 720, 777, 51, 464, 266, 518, 350, 256, 671, 897, 493, 237, 617, 449, 370, 938, 246, 164, 916,\n 382, 584, 572, 550, 581, 356, 957, 264, 882, 571, 745, 397, 436, 812, 108, 620, 793, 610, 986, 597,\n 9, 609, 92, 981, 663, 151, 84, 352, 154, 454, 959, 572, 128, 4, 403, 211, 176, 56, 429, 74,\n 247, 232, 754, 582, 260, 919, 911, 283, 198, 805, 73, 507, 556, 208, 315, 582, 724, 549, 9, 334,\n 718, 184, 384, 620, 345, 288, 621, 270, 283, 490, 386, 850, 517, 568, 409, 559, 235, 548, 419, 411,\n 492, 900, 731, 144, 827, 645, 14, 131, 639, 80, 225, 3, 601, 388, 850, 175, 383, 187, 662, 882,\n 623, 991, 138, 766, 549, 43, 602, 807, 130, 86, 393, 452, 313, 695, 105, 479, 606, 712, 274, 543,\n 14, 412, 787, 294, 445, 265, 512, 624, 25, 136, 536, 769, 50, 60, 832, 346, 599, 90, 729, 173,\n 646, 424, 31, 353, 250, 497, 57, 277, 744, 374, 45, 157, 58, 205, 69, 701, 802, 860, 575, 637,\n 746, 438, 603, 300, 332, 564, 133, 384, 52, 184, 103, 184, 5, 951, 405, 803, 614, 967, 816, 229,\n 4]\"','print(0)','','\"[1]-[0] = 393\n[2]-[1] = -282\n[3]-[2] = 97\n[4]-[3] = -344\n[5]-[4] = -127\n[6]-[5] = 229\n[7]-[6] = 25\n[8]-[7] = 362\n[9]-[8] = -577\n[10]-[9] = 501\n[11]-[10] = -133\n[12]-[11] = -411\n[13]-[12] = 915\n[14]-[13] = -86\n[15]-[14] = -731\n[16]-[15] = 809\n[17]-[16] = -173\n[18]-[17] = -436\n[19]-[18] = -223\n[20]-[19] = 135\n[21]-[20] = 142\n[22]-[21] = -144\n[23]-[22] = 412\n[24]-[23] = -463\n[25]-[24] = 305\n[26]-[25] = -467\n[27]-[26] = 654\n[28]-[27] = -549\n[29]-[28] = 723\n[30]-[29] = 34\n[31]-[30] = 21\n[32]-[31] = -8\n[33]-[32] = 20\n[34]-[33] = -74\n[35]-[34] = -641\n[36]-[35] = 69\n[37]-[36] = 366\n[38]-[37] = 269\n[39]-[38] = -248\n[40]-[39] = 337\n[41]-[40] = -523\n[42]-[41] = 339\n[43]-[42] = -1\n[44]-[43] = 29\n[45]-[44] = -246\n[46]-[45] = 213\n[47]-[46] = -380\n[48]-[47] = 250\n[49]-[48] = -667\n[50]-[49] = 655\n[51]-[50] = -96\n[52]-[51] = 236\n[53]-[52] = 148\n[54]-[53] = -667\n[55]-[54] = 53\n[56]-[55] = 131\n[57]-[56] = -348\n[58]-[57] = 749\n[59]-[58] = -131\n[60]-[59] = -87\n[61]-[60] = -173\n[62]-[61] = 358\n[63]-[62] = -294\n[64]-[63] = 317\n[65]-[64] = -721\n[66]-[65] = 538\n[67]-[66] = 92\n[68]-[67] = -130\n[69]-[68] = -36\n[70]-[69] = -546\n[71]-[70] = 303\n[72]-[71] = 86\n[73]-[72] = -71\n[74]-[73] = 470\n[75]-[74] = -383\n[76]-[75] = 479\n[77]-[76] = -881\n[78]-[77] = 364\n[79]-[78] = 162\n[80]-[79] = -251\n[81]-[80] = -145\n[82]-[81] = 760\n[83]-[82] = -892\n[84]-[83] = 453\n[85]-[84] = 445\n[86]-[85] = -685\n[87]-[86] = 558\n[88]-[87] = -213\n[89]-[88] = -567\n[90]-[89] = 196\n[91]-[90] = -55\n[92]-[91] = 490\n[93]-[92] = -453\n[94]-[93] = 609\n[95]-[94] = -15\n[96]-[95] = 176\n[97]-[96] = -708\n[98]-[97] = 390\n[99]-[98] = 224\n[100]-[99] = -715\n[101]-[100] = 715\n[102]-[101] = 94\n[103]-[102] = -763\n[104]-[103] = 347\n[105]-[104] = -123\n[106]-[105] = -381\n[107]-[106] = 380\n[108]-[107] = -162\n[109]-[108] = 212\n[110]-[109] = 12\n[111]-[110] = 232\n[112]-[111] = -550\n[113]-[112] = -131\n[114]-[113] = 830\n[115]-[114] = -794\n[116]-[115] = 77\n[117]-[116] = 531\n[118]-[117] = -461\n[119]-[118] = 49\n[120]-[119] = 51\n[121]-[120] = -337\n[122]-[121] = 516\n[123]-[122] = 303\n[124]-[123] = -319\n[125]-[124] = -337\n[126]-[125] = -146\n[127]-[126] = 416\n[128]-[127] = 54\n[129]-[128] = -334\n[130]-[129] = 618\n[131]-[130] = 21\n[132]-[131] = 179\n[133]-[132] = -452\n[134]-[133] = 261\n[135]-[134] = -97\n[136]-[135] = -684\n[137]-[136] = 851\n[138]-[137] = -251\n[139]-[138] = -21\n[140]-[139] = 156\n[141]-[140] = -446\n[142]-[141] = 594\n[143]-[142] = -691\n[144]-[143] = 294\n[145]-[144] = 30\n[146]-[145] = 17\n[147]-[146] = 96\n[148]-[147] = 16\n[149]-[148] = -635\n[150]-[149] = 97\n[151]-[150] = 606\n[152]-[151] = -168\n[153]-[152] = -13\n[154]-[153] = 407\n[155]-[154] = -703\n[156]-[155] = 376\n[157]-[156] = -480\n[158]-[157] = 624\n[159]-[158] = 26\n[160]-[159] = 72\n[161]-[160] = -464\n[162]-[161] = -259\n[163]-[162] = 568\n[164]-[163] = -54\n[165]-[164] = -573\n[166]-[165] = 118\n[167]-[166] = 782\n[168]-[167] = -361\n[169]-[168] = 161\n[170]-[169] = -404\n[171]-[170] = -218\n[172]-[171] = 264\n[173]-[172] = 250\n[174]-[173] = -81\n[175]-[174] = 409\n[176]-[175] = -904\n[177]-[176] = 411\n[178]-[177] = 93\n[179]-[178] = 366\n[180]-[179] = -704\n[181]-[180] = -148\n[182]-[181] = 248\n[183]-[182] = -275\n[184]-[183] = 200\n[185]-[184] = 61\n[186]-[185] = -115\n[187]-[186] = 694\n[188]-[187] = -397\n[189]-[188] = -520\n[190]-[189] = 899\n[191]-[190] = 28\n[192]-[191] = -311\n[193]-[192] = -538\n[194]-[193] = 527\n[195]-[194] = 355\n[196]-[195] = -310\n[197]-[196] = -512\n[198]-[197] = 733\n[199]-[198] = -710\n[200]-[199] = 545\n[201]-[200] = -631\n[202]-[201] = 433\n[203]-[202] = -143\n[204]-[203] = -232\n[205]-[204] = 117\n[206]-[205] = -245\n[207]-[206] = 859\n[208]-[207] = -417\n[209]-[208] = -69\n[210]-[209] = -360\n[211]-[210] = 767\n[212]-[211] = -246\n[213]-[212] = 216\n[214]-[213] = -328\n[215]-[214] = -142\n[216]-[215] = 518\n[217]-[216] = -276\n[218]-[217] = -460\n[219]-[218] = 752\n[220]-[219] = -369\n[221]-[220] = 268\n[222]-[221] = -229\n[223]-[222] = 455\n[224]-[223] = -649\n[225]-[224] = 243\n[226]-[225] = 215\n[227]-[226] = -738\n[228]-[227] = 368\n[229]-[228] = 230\n[230]-[229] = -358\n[231]-[230] = 249\n[232]-[231] = 423\n[233]-[232] = -292\n[234]-[233] = -512\n[235]-[234] = 645\n[236]-[235] = -611\n[237]-[236] = -60\n[238]-[237] = 171\n[239]-[238] = -220\n[240]-[239] = 815\n[241]-[240] = -34\n[242]-[241] = -736\n[243]-[242] = 628\n[244]-[243] = -497\n[245]-[244] = 235\n[246]-[245] = 296\n[247]-[246] = -454\n[248]-[247] = 328\n[249]-[248] = 253\n[250]-[249] = -366\n[251]-[250] = 45\n[252]-[251] = 31\n[253]-[252] = -32\n[254]-[253] = 48\n[255]-[254] = 316\n[256]-[255] = -714\n[257]-[256] = 22\n[258]-[257] = 97\n[259]-[258] = -180\n[260]-[259] = -46\n[261]-[260] = 90\n[262]-[261] = 132\n[263]-[262] = 85\n[264]-[263] = 25\n[265]-[264] = -227\n[266]-[265] = 397\n[267]-[266] = 206\n[268]-[267] = -789\n[269]-[268] = 223\n[270]-[269] = 695\n[271]-[270] = -701\n[272]-[271] = 687\n[273]-[272] = 6\n[274]-[273] = -581\n[275]-[274] = -88\n[276]-[275] = -23\n[277]-[276] = 593\n[278]-[277] = -827\n[279]-[278] = 581\n[280]-[279] = 209\n[281]-[280] = -348\n[282]-[281] = 255\n[283]-[282] = -86\n[284]-[283] = -474\n[285]-[284] = 418\n[286]-[285] = -306\n[287]-[286] = -188\n[288]-[287] = -75\n[289]-[288] = 452\n[290]-[289] = 532\n[291]-[290] = -652\n[292]-[291] = 454\n[293]-[292] = -277\n[294]-[293] = -476\n[295]-[294] = 878\n[296]-[295] = -852\n[297]-[296] = 574\n[298]-[297] = -233\n[299]-[298] = -112\n[300]-[299] = 285\n[301]-[300] = 168\n[302]-[301] = -195\n[303]-[302] = 275\n[304]-[303] = -704\n[305]-[304] = 338\n[306]-[305] = 67\n[307]-[306] = -386\n[308]-[307] = 377\n[309]-[308] = 17\n[310]-[309] = -531\n[311]-[310] = 311\n[312]-[311] = -169\n[313]-[312] = 654\n[314]-[313] = -362\n[315]-[314] = -349\n[316]-[315] = 290\n[317]-[316] = 60\n[318]-[317] = 389\n[319]-[318] = -454\n[320]-[319] = 214\n[321]-[320] = 177\n[322]-[321] = 181\n[323]-[322] = 46\n[324]-[323] = -824\n[325]-[324] = 652\n[326]-[325] = -376\n[327]-[326] = -345\n[328]-[327] = 862\n[329]-[328] = -888\n[330]-[329] = 16\n[331]-[330] = 379\n[332]-[331] = 16\n[333]-[332] = 248\n[334]-[333] = 138\n[335]-[334] = -84\n[336]-[335] = -165\n[337]-[336] = -270\n[338]-[337] = 180\n[339]-[338] = 73\n[340]-[339] = -256\n[341]-[340] = 367\n[342]-[341] = -337\n[343]-[342] = 218\n[344]-[343] = -464\n[345]-[344] = 467\n[346]-[345] = -236\n[347]-[346] = 518\n[348]-[347] = -203\n[349]-[348] = -282\n[350]-[349] = -325\n[351]-[350] = 616\n[352]-[351] = -347\n[353]-[352] = -131\n[354]-[353] = -140\n[355]-[354] = 514\n[356]-[355] = 226\n[357]-[356] = 2\n[358]-[357] = -276\n[359]-[358] = 200\n[360]-[359] = -680\n[361]-[360] = 924\n[362]-[361] = -280\n[363]-[362] = -554\n[364]-[363] = 21\n[365]-[364] = 801\n[366]-[365] = -75\n[367]-[366] = -64\n[368]-[367] = -589\n[369]-[368] = 567\n[370]-[369] = -472\n[371]-[370] = 561\n[372]-[371] = -746\n[373]-[372] = 834\n[374]-[373] = -664\n[375]-[374] = 550\n[376]-[375] = -824\n[377]-[376] = 715\n[378]-[377] = -17\n[379]-[378] = -192\n[380]-[379] = -73\n[381]-[380] = -80\n[382]-[381] = -338\n[383]-[382] = 540\n[384]-[383] = 368\n[385]-[384] = -694\n[386]-[385] = 167\n[387]-[386] = -437\n[388]-[387] = 296\n[389]-[388] = 105\n[390]-[389] = -175\n[391]-[390] = 568\n[392]-[391] = 84\n[393]-[392] = 99\n[394]-[393] = -430\n[395]-[394] = -68\n[396]-[395] = 184\n[397]-[396] = -659\n[398]-[397] = 748\n[399]-[398] = -573\n[400]-[399] = 363\n[401]-[400] = -78\n[402]-[401] = 242\n[403]-[402] = 240\n[404]-[403] = -285\n[405]-[404] = -419\n[406]-[405] = -175\n[407]-[406] = 493\n[408]-[407] = 379\n[409]-[408] = -675\n[410]-[409] = 663\n[411]-[410] = -477\n[412]-[411] = -30\n[413]-[412] = -143\n[414]-[413] = 490\n[415]-[414] = -633\n[416]-[415] = 727\n[417]-[416] = -806\n[418]-[417] = 715\n[419]-[418] = -149\n[420]-[419] = -352\n[421]-[420] = -171\n[422]-[421] = 190\n[423]-[422] = 348\n[424]-[423] = -248\n[425]-[424] = -304\n[426]-[425] = 584\n[427]-[426] = -373\n[428]-[427] = -205\n[429]-[428] = -29\n[430]-[429] = 376\n[431]-[430] = -80\n[432]-[431] = -40\n[433]-[432] = 593\n[434]-[433] = -607\n[435]-[434] = 3\n[436]-[435] = -58\n[437]-[436] = -180\n[438]-[437] = 306\n[439]-[438] = 406\n[440]-[439] = 204\n[441]-[440] = -436\n[442]-[441] = -215\n[443]-[442] = 587\n[444]-[443] = 45\n[445]-[444] = -146\n[446]-[445] = -769\n[447]-[446] = 512\n[448]-[447] = -251\n[449]-[448] = 411\n[450]-[449] = -461\n[451]-[450] = -225\n[452]-[451] = 592\n[453]-[452] = -601\n[454]-[453] = 501\n[455]-[454] = 121\n[456]-[455] = 284\n[457]-[456] = -335\n[458]-[457] = -285\n[459]-[458] = 559\n[460]-[459] = -823\n[461]-[460] = 943\n[462]-[461] = -101\n[463]-[462] = -726\n[464]-[463] = -36\n[465]-[464] = 712\n[466]-[465] = -257\n[467]-[466] = 284\n[468]-[467] = -821\n[469]-[468] = 218\n[470]-[469] = 636\n[471]-[470] = -186\n[472]-[471] = -599\n[473]-[472] = 647\n[474]-[473] = 217\n[475]-[474] = -222\n[476]-[475] = -535\n[477]-[476] = -52\n[478]-[477] = 623\n[479]-[478] = -44\n[480]-[479] = -223\n[481]-[480] = 220\n[482]-[481] = -279\n[483]-[482] = 188\n[484]-[483] = -367\n[485]-[484] = -283\n[486]-[485] = 535\n[487]-[486] = -132\n[488]-[487] = -262\n[489]-[488] = 73\n[490]-[489] = 540\n[491]-[490] = -340\n[492]-[491] = -351\n[493]-[492] = 764\n[494]-[493] = -631\n[495]-[494] = 122\n[496]-[495] = 617\n[497]-[496] = 35\n[498]-[497] = -809\n[499]-[498] = 747\n[500]-[499] = -238\n[501]-[500] = 157\n[502]-[501] = -580\n[503]-[502] = 270\n[504]-[503] = -353\n[505]-[504] = 287\n[506]-[505] = 296\n[507]-[506] = -588\n[508]-[507] = 707\n[509]-[508] = -725\n[510]-[509] = 438\n[511]-[510] = 414\n[512]-[511] = -382\n[513]-[512] = 373\n[514]-[513] = -208\n[515]-[514] = -665\n[516]-[515] = 385\n[517]-[516] = -411\n[518]-[517] = 301\n[519]-[518] = 339\n[520]-[519] = 82\n[521]-[520] = -142\n[522]-[521] = -323\n[523]-[522] = 346\n[524]-[523] = -503\n[525]-[524] = 702\n[526]-[525] = 53\n[527]-[526] = -398\n[528]-[527] = 256\n[529]-[528] = -457\n[530]-[529] = 117\n[531]-[530] = 198\n[532]-[531] = -309\n[533]-[532] = 46\n[534]-[533] = 531\n[535]-[534] = -580\n[536]-[535] = 284\n[537]-[536] = -130\n[538]-[537] = 221\n[539]-[538] = -392\n[540]-[539] = 15\n[541]-[540] = -260\n[542]-[541] = 850\n[543]-[542] = -749\n[544]-[543] = -16\n[545]-[544] = 642\n[546]-[545] = -801\n[547]-[546] = 183\n[548]-[547] = 626\n[549]-[548] = -53\n[550]-[549] = -178\n[551]-[550] = -408\n[552]-[551] = 500\n[553]-[552] = -108\n[554]-[553] = 207\n[555]-[554] = -696\n[556]-[555] = 138\n[557]-[556] = 90\n[558]-[557] = 72\n[559]-[558] = 382\n[560]-[559] = -457\n[561]-[560] = 47\n[562]-[561] = -66\n[563]-[562] = 121\n[564]-[563] = -264\n[565]-[564] = 626\n[566]-[565] = -596\n[567]-[566] = 744\n[568]-[567] = -764\n[569]-[568] = 687\n[570]-[569] = -67\n[571]-[570] = -746\n[572]-[571] = 671\n[573]-[572] = -618\n[574]-[573] = 316\n[575]-[574] = 167\n[576]-[575] = -328\n[577]-[576] = -36\n[578]-[577] = -59\n[579]-[578] = -121\n[580]-[579] = 299\n[581]-[580] = 639\n[582]-[581] = -265\n[583]-[582] = -241\n[584]-[583] = 500\n[585]-[584] = -143\n[586]-[585] = 42\n[587]-[586] = -421\n[588]-[587] = 438\n[589]-[588] = -598\n[590]-[589] = 600\n[591]-[590] = 77\n[592]-[591] = -497\n[593]-[592] = 166\n[594]-[593] = 255\n[595]-[594] = -311\n[596]-[595] = 35\n[597]-[596] = -364\n[598]-[597] = 578\n[599]-[598] = -132\n[600]-[599] = -610\n[601]-[600] = 143\n[602]-[601] = -78\n[603]-[602] = -92\n[604]-[603] = 141\n[605]-[604] = -65\n[606]-[605] = 812\n[607]-[606] = -241\n[608]-[607] = 201\n[609]-[608] = -78\n[610]-[609] = -499\n[611]-[610] = 327\n[612]-[611] = -365\n[613]-[612] = 551\n[614]-[613] = -278\n[615]-[614] = 385\n[616]-[615] = -843\n[617]-[616] = 169\n[618]-[617] = 379\n[619]-[618] = -629\n[620]-[619] = 454\n[621]-[620] = -434\n[622]-[621] = 375\n[623]-[622] = 90\n[624]-[623] = 26\n[625]-[624] = 251\n[626]-[625] = -774\n[627]-[626] = 977\n[628]-[627] = -258\n[629]-[628] = 73\n[630]-[629] = -44\n[631]-[630] = -170\n[632]-[631] = 52\n[633]-[632] = -135\n[634]-[633] = -458\n[635]-[634] = 566\n[636]-[635] = -213\n[637]-[636] = -208\n[638]-[637] = 534\n[639]-[638] = 5\n[640]-[639] = -216\n[641]-[640] = 21\n[642]-[641] = 391\n[643]-[642] = -827\n[644]-[643] = 288\n[645]-[644] = 187\n[646]-[645] = -560\n[647]-[646] = 582\n[648]-[647] = -107\n[649]-[648] = 116\n[650]-[649] = -3\n[651]-[650] = -195\n[652]-[651] = -277\n[653]-[652] = 281\n[654]-[653] = 515\n[655]-[654] = -496\n[656]-[655] = 477\n[657]-[656] = -29\n[658]-[657] = 69\n[659]-[658] = -597\n[660]-[659] = 265\n[661]-[660] = -63\n[662]-[661] = -57\n[663]-[662] = -57\n[664]-[663] = -413\n[665]-[664] = 667\n[666]-[665] = 214\n[667]-[666] = -133\n[668]-[667] = -461\n[669]-[668] = -101\n[670]-[669] = 280\n[671]-[670] = 78\n[672]-[671] = 229\n[673]-[672] = -328\n[674]-[673] = 477\n[675]-[674] = -18\n[676]-[675] = -742\n[677]-[676] = 303\n[678]-[677] = 265\n[679]-[678] = 239\n[680]-[679] = -121\n[681]-[680] = -115\n[682]-[681] = -451\n[683]-[682] = 32\n[684]-[683] = -26\n[685]-[684] = -19\n[686]-[685] = 397\n[687]-[686] = -458\n[688]-[687] = 466\n[689]-[688] = -375\n[690]-[689] = 317\n[691]-[690] = 175\n[692]-[691] = -116\n[693]-[692] = 55\n[694]-[693] = -633\n[695]-[694] = 712\n[696]-[695] = -825\n[697]-[696] = 902\n[698]-[697] = -450\n[699]-[698] = -307\n[700]-[699] = 548\n[701]-[700] = -29\n[702]-[701] = 123\n[703]-[702] = -391\n[704]-[703] = -298\n[705]-[704] = 296\n[706]-[705] = 40\n[707]-[706] = 360\n[708]-[707] = 0\n[709]-[708] = 47\n[710]-[709] = -718\n[711]-[710] = 136\n[712]-[711] = -170\n[713]-[712] = 328\n[714]-[713] = -342\n[715]-[714] = 788\n[716]-[715] = -479\n[717]-[716] = 158\n[718]-[717] = 207\n[719]-[718] = -395\n[720]-[719] = -247\n[721]-[720] = 855\n[722]-[721] = -193\n[723]-[722] = -677\n[724]-[723] = 728\n[725]-[724] = -500\n[726]-[725] = -232\n[727]-[726] = 562\n[728]-[727] = -323\n[729]-[728] = -148\n[730]-[729] = 669\n[731]-[730] = -271\n[732]-[731] = -313\n[733]-[732] = 31\n[734]-[733] = -130\n[735]-[734] = 649\n[736]-[735] = -560\n[737]-[736] = 492\n[738]-[737] = -438\n[739]-[738] = -6\n[740]-[739] = 642\n[741]-[740] = -310\n[742]-[741] = -433\n[743]-[742] = -125\n[744]-[743] = 233\n[745]-[744] = 500\n[746]-[745] = 112\n[747]-[746] = -703\n[748]-[747] = -15\n[749]-[748] = 351\n[750]-[749] = -42\n[751]-[750] = -262\n[752]-[751] = 142\n[753]-[752] = -113\n[754]-[753] = 241\n[755]-[754] = -347\n[756]-[755] = 541\n[757]-[756] = -608\n[758]-[757] = 68\n[759]-[758] = 566\n[760]-[759] = -413\n[761]-[760] = 203\n[762]-[761] = 270\n[763]-[762] = -35\n[764]-[763] = -32\n[765]-[764] = -694\n[766]-[765] = 594\n[767]-[766] = -66\n[768]-[767] = -214\n[769]-[768] = 428\n[770]-[769] = -211\n[771]-[770] = -348\n[772]-[771] = 106\n[773]-[772] = 356\n[774]-[773] = -227\n[775]-[774] = 333\n[776]-[775] = -17\n[777]-[776] = 15\n[778]-[777] = -462\n[779]-[778] = 244\n[780]-[779] = -178\n[781]-[780] = -298\n[782]-[781] = 391\n[783]-[782] = -132\n[784]-[783] = -113\n[785]-[784] = 283\n[786]-[785] = -267\n[787]-[786] = -118\n[788]-[787] = 178\n[789]-[788] = 376\n[790]-[789] = -351\n[791]-[790] = 94\n[792]-[791] = 428\n[793]-[792] = -64\n[794]-[793] = -283\n[795]-[794] = 387\n[796]-[795] = -606\n[797]-[796] = 172\n[798]-[797] = -439\n[799]-[798] = 258\n[800]-[799] = 705\n[801]-[800] = -274\n[802]-[801] = 57\n[803]-[802] = -726\n[804]-[803] = 413\n[805]-[804] = -198\n[806]-[805] = 252\n[807]-[806] = -168\n[808]-[807] = -94\n[809]-[808] = 415\n[810]-[809] = 226\n[811]-[810] = -404\n[812]-[811] = -256\n[813]-[812] = 380\n[814]-[813] = -168\n[815]-[814] = -79\n[816]-[815] = 568\n[817]-[816] = -692\n[818]-[817] = -82\n[819]-[818] = 752\n[820]-[819] = -534\n[821]-[820] = 202\n[822]-[821] = -12\n[823]-[822] = -22\n[824]-[823] = 31\n[825]-[824] = -225\n[826]-[825] = 601\n[827]-[826] = -693\n[828]-[827] = 618\n[829]-[828] = -311\n[830]-[829] = 174\n[831]-[830] = -348\n[832]-[831] = 39\n[833]-[832] = 376\n[834]-[833] = -704\n[835]-[834] = 512\n[836]-[835] = 173\n[837]-[836] = -183\n[838]-[837] = 376\n[839]-[838] = -389\n[840]-[839] = -588\n[841]-[840] = 600\n[842]-[841] = -517\n[843]-[842] = 889\n[844]-[843] = -318\n[845]-[844] = -512\n[846]-[845] = -67\n[847]-[846] = 268\n[848]-[847] = -198\n[849]-[848] = 300\n[850]-[849] = 505\n[851]-[850] = -387\n[852]-[851] = -444\n[853]-[852] = -124\n[854]-[853] = 399\n[855]-[854] = -192\n[856]-[855] = -35\n[857]-[856] = -120\n[858]-[857] = 373\n[859]-[858] = -355\n[860]-[859] = 173\n[861]-[860] = -15\n[862]-[861] = 522\n[863]-[862] = -172\n[864]-[863] = -322\n[865]-[864] = 659\n[866]-[865] = -8\n[867]-[866] = -628\n[868]-[867] = -85\n[869]-[868] = 607\n[870]-[869] = -732\n[871]-[870] = 434\n[872]-[871] = 49\n[873]-[872] = -348\n[874]-[873] = 107\n[875]-[874] = 267\n[876]-[875] = 142\n[877]-[876] = -175\n[878]-[877] = -540\n[879]-[878] = 325\n[880]-[879] = 384\n[881]-[880] = -534\n[882]-[881] = 200\n[883]-[882] = 236\n[884]-[883] = -275\n[885]-[884] = -57\n[886]-[885] = 333\n[887]-[886] = -351\n[888]-[887] = 13\n[889]-[888] = 207\n[890]-[889] = -104\n[891]-[890] = 464\n[892]-[891] = -333\n[893]-[892] = 51\n[894]-[893] = -159\n[895]-[894] = 150\n[896]-[895] = -324\n[897]-[896] = 313\n[898]-[897] = -129\n[899]-[898] = -8\n[900]-[899] = 81\n[901]-[900] = 408\n[902]-[901] = -169\n[903]-[902] = -587\n[904]-[903] = 683\n[905]-[904] = -182\n[906]-[905] = -631\n[907]-[906] = 117\n[908]-[907] = 508\n[909]-[908] = -559\n[910]-[909] = 145\n[911]-[910] = -222\n[912]-[911] = 598\n[913]-[912] = -213\n[914]-[913] = 462\n[915]-[914] = -675\n[916]-[915] = 208\n[917]-[916] = -196\n[918]-[917] = 475\n[919]-[918] = 220\n[920]-[919] = -259\n[921]-[920] = 368\n[922]-[921] = -853\n[923]-[922] = 628\n[924]-[923] = -217\n[925]-[924] = -506\n[926]-[925] = 559\n[927]-[926] = 205\n[928]-[927] = -677\n[929]-[928] = -44\n[930]-[929] = 307\n[931]-[930] = 59\n[932]-[931] = -139\n[933]-[932] = 382\n[934]-[933] = -590\n[935]-[934] = 374\n[936]-[935] = 127\n[937]-[936] = 106\n[938]-[937] = -438\n[939]-[938] = 269\n[940]-[939] = -529\n[941]-[940] = 398\n[942]-[941] = 375\n[943]-[942] = -493\n[944]-[943] = 151\n[945]-[944] = -180\n[946]-[945] = 247\n[947]-[946] = 112\n[948]-[947] = -599\n[949]-[948] = 111\n[950]-[949] = 400\n[951]-[950] = 233\n[952]-[951] = -719\n[953]-[952] = 10\n[954]-[953] = 772\n[955]-[954] = -486\n[956]-[955] = 253\n[957]-[956] = -509\n[958]-[957] = 639\n[959]-[958] = -556\n[960]-[959] = 473\n[961]-[960] = -222\n[962]-[961] = -393\n[963]-[962] = 322\n[964]-[963] = -103\n[965]-[964] = 247\n[966]-[965] = -440\n[967]-[966] = 220\n[968]-[967] = 467\n[969]-[968] = -370\n[970]-[969] = -329\n[971]-[970] = 112\n[972]-[971] = -99\n[973]-[972] = 147\n[974]-[973] = -136\n[975]-[974] = 632\n[976]-[975] = 101\n[977]-[976] = 58\n[978]-[977] = -285\n[979]-[978] = 62\n[980]-[979] = 109\n[981]-[980] = -308\n[982]-[981] = 165\n[983]-[982] = -303\n[984]-[983] = 32\n[985]-[984] = 232\n[986]-[985] = -431\n[987]-[986] = 251\n[988]-[987] = -332\n[989]-[988] = 132\n[990]-[989] = -81\n[991]-[990] = 81\n[992]-[991] = -179\n[993]-[992] = 946\n[994]-[993] = -546\n[995]-[994] = 398\n[996]-[995] = -189\n[997]-[996] = 353\n[998]-[997] = -151\n[999]-[998] = -587\n[1000]-[999] = -225\n\"',NULL,NULL),(20,NULL,'$tab=rand(0,100); $rep=$tab; for ($i=0;$i<10;$i++){   $tab=$tab . \", \" . rand(0,100); } ','','\"numeros=[$tab]\"','','','$rep . \"\n\"',NULL,NULL),(21,NULL,'$tab=rand(0,100); for ($i=0;$i<2;$i++){   $tab=$tab . \", \" . rand(0,100); } $rep=\"[$tab]\"; for ($i=0;$i<10;$i++){   $tab=$tab . \", \" . rand(0,100); }  ','','\"numeros=[$tab]\"','','','$rep . \"\n\"',NULL,NULL),(22,NULL,'$tab=rand(0,100); $tab1=\"\"; for ($i=0;$i<8;$i++){   $tab1=$tab1 . \", \" . rand(0,100); }  $rep=\"[\" . substr(\"$tab1]\",2); $tab=$tab . $tab1; for ($i=0;$i<10;$i++){   $tab=$tab . \", \" . rand(0,100); } ','','\"numeros=[$tab]\"','','','$rep . \"\n\"',NULL,NULL),(23,NULL,'$tab=rand(0,100); for ($i=0;$i<rand(3,10);$i++){   $tab=$tab . \", \" . rand(0,100); }  $tab1=rand(0,100); for ($i=0;$i<3;$i++){   $tab1=$tab1 . \", \" . rand(0,100); }  $rep=\"[$tab1]\"; ','','\"numeros=[$tab,  $tab1]\"','','','$rep . \"\n\"',NULL,NULL),(24,NULL,'$tab=rand(0,100); $rep=$tab; for ($i=0;$i<rand(3,10);$i++){   $num=rand(0,100);   $tab=$tab . \", \" . $num;   $rep=$num . \", \" . $rep; }  $rep=\"[$rep]\"; ','','\"numeros=[$tab]\"','','','$rep . \"\n\"',NULL,NULL),(25,NULL,'$tab=rand(0,100); for ($i=0;$i<4;$i++){   $num=rand(0,100);   $tab=$tab . \", \" . $num; } $rep=$tab . \", 17, 42, 25, \"; $tab1=rand(0,100); for ($i=0;$i<4;$i++){   $num=rand(0,100);   $tab1=$tab1 . \", \" . $num; } $rep=$rep . $tab1;  $rep=\"[$rep]\"; ','','\"numeros=[$tab, $tab1]\"','','','$rep . \"\n\"',NULL,NULL),(26,NULL,'echo   $n=rand(4,8); $tab=rand(0,100); for ($i=0;$i<$n;$i++){   $num=rand(0,100);   $tab=$tab . \", \" . $num; } $rep=$tab . \", 17, 42, 25, \"; $tab1=rand(0,100); for ($i=0;$i<$n;$i++){   $num=rand(0,100);   $tab1=$tab1 . \", \" . $num; } $rep=$rep . $tab1;  $rep=\"[$rep]\"; ','','\"numeros=[$tab, $tab1]\"','','','$rep . \"\n\"',NULL,NULL),(27,NULL,'','','','','','\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\"',NULL,NULL),(28,NULL,'$phrase=\'suspendisse eleifend tempor mi non vestibulum sem viverra in mauris placerat facilisis faucibus sed gravida tempus malesuada.\';  ','','\"phrase=\\\"$phrase\\\"\"','','','strtoupper($phrase) . \"\n\"',NULL,NULL),(29,NULL,'$lorem=explode(\" \",\'suspendisse eleifend tempor mi non vestibulum sem viverra in mauris placerat facilisis faucibus sed gravida tempus malesuada.\'); $mots=array_slice($lorem, rand(0,5), rand(7,12)); $phrase=implode(\" \",$mots);  ','','\"phrase=\\\"$phrase\\\"\"','','','$phrase[0] . substr($phrase,-1) . \"\n\"',NULL,NULL),(30,NULL,'$lorem=explode(\" \",\'suspendisse eleifend tempor mi non vestibulum sem viverra in mauris placerat facilisis faucibus sed gravida tempus malesuada.\'); $mots=array_slice($lorem, rand(0,5), rand(7,12)); $phrase=implode(\" \",$mots);  ','','\"phrase=\\\"$phrase\\\"\"','','','$phrase[0] . substr($phrase,-1) . \"\n\"',NULL,NULL),(31,NULL,'$lorem=explode(\" \",\'suspendisse eleifend tempor mi non vestibulum sem viverra in mauris placerat facilisis faucibus sed gravida tempus malesuada.\'); $phrase=implode(\" \",array_slice($lorem, rand(0,5), rand(7,12)));  ','','\"phrase=\\\"$phrase\\\"\"','','','ucfirst($phrase) . \"\n\"',NULL,NULL),(32,NULL,'$lorem=explode(\" \",\'suspendisse eleifend tempor mi non vestibulum sem viverra in mauris placerat facilisis faucibus sed gravida tempus malesuada.\'); $mots=array_slice($lorem, rand(0,5), rand(7,12)); $phrase=implode(\" \",$mots);  ','','\"phrase=\\\"$phrase\\\"\"','','','sizeof($mots) . \"\n\"',NULL,NULL),(33,NULL,'$lorem=explode(\" \",\'suspendisse eleifend tempor mi non vestibulum sem viverra in mauris placerat facilisis faucibus sed gravida tempus malesuada.\'); $mots=array_slice($lorem, rand(0,5), rand(7,12)); $phrase=implode(\" \",$mots);  ','','\"phrase=\\\"$phrase\\\"\"','','','strrev($phrase) . \"\n\"',NULL,NULL),(34,NULL,'$lorem=explode(\" \",\'suspendisse eleifend tempor mi non vestibulum sem viverra in mauris placerat facilisis faucibus sed gravida tempus malesuada.\'); $mots=array_slice($lorem, rand(0,5), rand(7,12)); $phrase=implode(\" \",$mots); $reponse=implode(\" \",array_reverse($mots));  ','','\"phrase=\\\"$phrase\\\"\"','','','$phrase . \"\n\"',NULL,NULL),(35,NULL,'','','\"\ndef test():\n    \\\"\\\"\\\"\n    Fonction de test.\n\n    Affiche systématiquement les mots «Test réussi.»\n\n    \\\"\\\"\\\"\n    print(\\\"Test réussi.\\\")\n\n\"','','','\"Test réussi.\n\"',NULL,NULL),(36,NULL,'$r1=rand(0,1000); ','','\"\ndef afficher_nb():\n    \\\"\\\"\\\"\n    Affiche un nombre entier «magique».\n\n    Affiche un nombre entier «magique», c\'est à dire un nombre codé en dur\n    dans le code source et sans signification évidente.\n\n    \\\"\\\"\\\"\n    nombre = $r1\n\n    print(nombre)\n\n\"','','','\"$r1\n$r1\n$r1\n$r1\n$r1\n$r1\n$r1\n$r1\n$r1\n$r1\n\"',NULL,NULL),(37,NULL,'$r1=rand(0,1000); $r2=rand(0,1000); ','','\"\ndef afficher_nb1():\n    \\\"\\\"\\\"\n    Affiche un nombre entier «magique».\n\n    Affiche un nombre entier «magique», c\'est à dire un nombre codé en dur\n    dans le code source et sans signification évidente.\n\n    \\\"\\\"\\\"\n    nombre = $r1\n    print(nombre)\n\ndef afficher_nb2():\n    \\\"\\\"\\\"\n    Affiche un nombre entier «magique».\n\n    Affiche un nombre entier «magique», c\'est à dire un nombre codé en dur\n    dans le code source et sans signification évidente.\n\n    \\\"\\\"\\\"\n    nombre = $r2\n    print(nombre)\n\n\"','','','\"$r2\n$r1\n\"',NULL,NULL),(38,NULL,'$r1=rand(0,1000); $r2=rand(0,1000); ','','\"\ndef afficher_nb1():\n    \\\"\\\"\\\"\n    Affiche deux nombres entiers «magiques».\n\n    Affiche deux nombres entiers «magiques», c\'est à dire codés en dur\n    dans le code source et sans signification évidente.\n\n    \\\"\\\"\\\"\n    nombre = $r1\n    afficher_nb2()\n    print(nombre)\n\ndef afficher_nb2():\n    \\\"\\\"\\\"\n    Affiche un nombre entier «magique».\n\n    Affiche un nombre entier «magique», c\'est à dire un nombre codé en dur\n    dans le code source et sans signification évidente.\n\n    \\\"\\\"\\\"\n    nombre = $r2\n    print(nombre)\n\n\"','','','\"$r2\n$r1\n\"',NULL,NULL),(39,NULL,'$r=rand(0,1000); $s=2*$r; ','','\"\ndef multiplier(multiplicateur):\n    \\\"\\\"\\\"\n    Affiche un multiple d\'un nombre entier «magique».\n    \n    Affiche un nombre entier «magique» multiplié par un multiplicateur fourni en paramètre.\n\n    Paramètres:\n    multiplicateur : nombre entier multiplicateur du nombre magique.\n\n    \\\"\\\"\\\"\n    nombre = $r\n    print(multiplicateur * nombre)\n\n\"','','','\"$s\n\"',NULL,NULL),(40,NULL,'$r=rand(0,1000); $s=2*$r; ','','\"\ndef multiplier(multiplicateur):\n    \\\"\\\"\\\"\n    Affiche un multiple d\'un nombre entier «magique».\n    \n    Affiche un nombre entier «magique» multiplié par un multiplicateur fourni en paramètre.\n\n    Paramètres:\n    multiplicateur : nombre entier multiplicateur du nombre magique.\n\n    Retourne: un entier multiple du nombre magique.\n\n    \\\"\\\"\\\"\n    nombre = $r\n    return multiplicateur * nombre\n\n\"','','','\"$s\n\"',NULL,NULL),(41,NULL,'$r=rand(0,1000); $s=$r/1000;  ','\"\nimport random;random.random=lambda:\".number_format($s,3).\"\n\"','\"\nimport random\n\ndef entier_aléatoire(max):\n    \\\"\\\"\\\"\n    Fournit un nombre entier pseudo-aléatoire sélectionné entre 0 et <em>max</em>.\n\n    Paramètre :\n    max : un nombre entier limite supérieure inclusive du tirage pseudo-aléatoire.\n\n    Retourne : un nombre entier pseudo-aléatoire sélectionné entre 0 et <em>max</em>.\n\n    \\\"\\\"\\\"\n    nb_aléatoire = random.random()\n    return int(max * nb_aléatoire)\n\n\"','','','\"$r\n\"',NULL,NULL),(42,NULL,'$r=rand(100,200); $s=($r-100)/100;  ','\"\nimport random;random.random=lambda:\".number_format($s,3).\"\n\"','\"\nimport random\n\ndef entier_aléatoire(max):\n    \\\"\\\"\\\"\n    Fournit un nombre entier pseudo-aléatoire sélectionné entre 0 et <em>max</em>.\n\n    Paramètre :\n    max : un nombre entier limite supérieure inclusive du tirage pseudo-aléatoire.\n\n    Retourne : un nombre entier pseudo-aléatoire sélectionné entre 0 et <em>max</em>.\n\n    \\\"\\\"\\\"\n    nb_aléatoire = random.random()\n    return round(max * nb_aléatoire)\n\n\"','','','\"$r\n\"',NULL,NULL),(43,NULL,'$min=rand(10,100); $max=rand(100,300);  $r=rand($min,$max); $s=($r-$min)/($max-$min);  ','\" random=lambda:\".number_format($s,3).\" \"','\"from random import random  \"','\ndef entier_aléatoire(min, max):\n    \"\"\"\n    Fournit un nombre entier pseudo-aléatoire sélectionné entre min et max\n\n    Paramètre :\n    min : un nombre entier limite inférieure inclusive du tirage pseudo-aléatoire\n    max : un nombre entier limite supérieure inclusive du tirage pseudo-aléatoire\n\n    Retourne : un nombre entier pseudo-aléatoire sélectionné entre min et max\n\n    \"\"\"\n    nb_aléatoire = random()\n\n','\"#Affiche un nombre pseudo-aléatoire choisi entre $min et $max. print(entier_aléatoire($min,$max))\"','\"$r\n\"',NULL,NULL),(44,NULL,'$r=rand(10,50);  ','','','\ndef factorielle(x):\n    \"\"\"\n    Calcule la factorielle de x\n\n    Calcule et retourne la factorielle de x, c\'est-à-dire x * x-1 * x-2 * … * 1\n\n    Paramètre :\n    x : un nombre entier\n\n    Retourne : a factorielle du nombre x\n\n    \"\"\"\n\n','\"#Affiche la factorielle du nombre $r\nprint(factorielle($r))\"','gmp_strval(gmp_fact($r)) . \"\n\"',NULL,NULL),(45,NULL,'','','\"def allo_le_monde():\n    \\\"\\\"\\\"\n    Affiche un mot de bienvenue au monde «Allo le monde!»\n\n    Exemples :\n    >>> allo_le_monde()\n    Allo le monde!\n\n    \\\"\\\"\\\"\n\"','    pass','\"#Exécute les tests\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\"','null',NULL,NULL),(46,NULL,'','','\"def additionner(nombre1, nombre2):\n    \\\"\\\"\\\"\n    Additionne deux nombres.\n\n    Paramètres :\n    nombre1 : nombre réel à additionner\n    nombre2 : nombre réel à additionner\n\n    Retour : La somme de nombre1 et nombre2.\n\n    Exemples :\n    >>> additionner(2, 3) \n    5\n    >>> additionner(-2.1, 1)\n    -1.1\n    >>> additionner(-1, -3.0)\n    -4.0\n\n    \\\"\\\"\\\"\"','    pass','\"#Exécute les tests\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\"','null',NULL,NULL),(47,NULL,'','','\"def racine_nième( opérande, racine ):\n    \\\"\\\"\\\"\n    Calcule la racine nième d\'un nombre.\n\n    Paramètres :\n    opérande : le nombre réel duquel il faut extraire la racine nième.\n    racine : un nombre réel, la racine à extraire (ex. 2 pour la \n             racine carrée, 3 pour la racine cubique, etc.)\n\n    Retour : un nombre réel, la racine nième de l\'opérande.\n\n    >>> racine_nième( 81, 2 )\n    9.0\n    >>> (racine_nième( 1000, 3)-10)<0.00001\n    True\n    >>> racine_nième( 1024, 10)\n    2.0\n\n    \\\"\\\"\\\"\n\"','    pass','\"#Exécute les tests\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\"','null',NULL,NULL),(48,NULL,'','','\"def chaméliser( phrase ): \n    \\\"\\\"\\\"\n    Donne la version en «casse de chameau» (<em>camel case</em>) d\'une phrase.\n\n    Retourne une copie de la phrase originale dont chaque espace a été\n    supprimée et dont chaque mot commence par une majuscule sauf le\n    premier.\n\n    Paramètres :\n    phrase : une chaîne de caractères à «chaméliser».\n\n    Retour : une copie de la phrase originale «chamélisée».\n\n    >>> chaméliser(\\\"\\\")\n    \'\'\n    >>> print(chaméliser(\\\"salut\\\"))\n    salut\n    >>> print(chaméliser(\\\"salut tout le monde\\\"))\n    salutToutLeMonde\n    >>> print(chaméliser(\\\"Salut Tout le Monde\\\"))\n    salutToutLeMonde\n    >>> print(chaméliser(\\\"Salut Tout le Monde \\\"))\n    salutToutLeMonde\n\n    \\\"\\\"\\\"\"','    pass','\"#Exécute les tests\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\"','null',NULL,NULL),(49,NULL,'$r=rand(0,9999);  ','','\"def numéro_magique(): \n    \\\"\\\"\\\" \n    Retourne un numéro magique entre 0 et 9999. \n\n    Exemples :\n    >>> numéro_magique() \n    $r\n\n    \\\"\\\"\\\" \n    numéro_magique=$r\"','    return 0','\"#Exécute les tests\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\"','null',NULL,NULL),(50,NULL,'$r=rand(1000,9999);  ','','\"def trier_liste( une_liste ):\n    \\\"\\\"\\\"\n    Tri une liste d\'éléments comparables.\n\n    Paramètres : \n    une_liste : une liste à trier d\'éléments comparables entre eux (du même type ou de types comparables)\n\n    Retour : une liste contenant les mêmes éléments que <em>une_liste</em> en ordre croissant.\n\n    Exemples :\n    >>> trier_liste([ 42, 2, 0, 21 ])\n    [0, 2, 21, 42]\n    >>> trier_liste([7])\n    [7]\n    >>> trier_liste([])\n    []\n    \\\"\\\"\\\"\n    items = list(une_liste)\n    for i in range(len(items)):\n        for j in range(len(items)-1-i):\n            if items[j] > items[j+1]:\n                items[j], items[j+1] = items[j+1], items[j]     \n    return items\n    \ndef trier_liste_décroissant( une_liste ):\n    \\\"\\\"\\\"\n    Tri une liste d\'éléments comparables en ordre décroissant.\n\n    Paramètres : \n    une_liste : une liste à trier d\'éléments comparables entre eux (du même type ou de types comparables)\n\n    Retour : une liste contenant les mêmes éléments que <em>une_liste</em> en ordre décroissant.\n    \n    Exemples :\n    >>> trier_liste_décroissant([ 42, 2, 0, 21 ])\n    [42, 21, 2, 0]\n    >>> trier_liste_décroissant([7])\n    [7]\n    >>> trier_liste_décroissant([])\n    []\n    \\\"\\\"\\\"\"','    pass','\"#Exécute les tests\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\"','null',NULL,NULL),(51,NULL,'$r=rand(1000,9999);  ','','\"from math import sqrt\nfrom random import randrange \n\ndef est_premier(nombre): \n    \\\"\\\"\\\" \n    Détermine si un nombre est premier.\n\n    Paramètres : \n    nombre : un nombre entier potentiellement premier.\n\n    Retour : Vrai si et seulement si <em>nombre</em> est premier.\n\n    Exemples :\n    >>> est_premier(7918) \n    False\n    >>> est_premier(7919)\n    True\n    >>> est_premier(0)\n    False\n\n    \\\"\\\"\\\" \n    if nombre<2 : return False\n    for i in range(2, int(sqrt(nombre))+1): \n        if nombre%i==0 : return False\n    return True\n\ndef trouver_nb_premier(min, max):\n    \\\"\\\"\\\"\n    Fournit un nombre premier entre les limites [min, max[.\n\n    Paramètres:\n    min : un nombre entier limite inférieure inclusive de l\'intevalle des nombres premiers possibles  \n    max : un nombre entier limite supérieure exclusive de l\'intevalle des nombres premiers possibles  \n\n    Retour : un nombre premier sélectionné au hasard n tel que min <= n < max. Retourne None si max<=min. \n\n    >>> trouver_nb_premier(8, 13)\n    11\n    >>> trouver_nb_premier(5, 1) is None\n    True\n    >>> trouver_nb_premier(5, 5) is None\n    True\n    >>> est_premier(trouver_nb_premier(1000000, 2000000))\n    True\n    >>> n = trouver_nb_premier(1000000, 2000000)\n    >>> n >= 1000000 and n < 2000000\n    True\n    >>> trouver_nb_premier(1000000, 2000000) != trouver_nb_premier( 1000000, 2000000 )\n    True\n\n    \\\"\\\"\\\"\"','    return 0','\"#Exécute les tests\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\"','null',NULL,NULL),(52,NULL,'$r=rand(0,99); $s=rand(0,99); $t=rand(0,99); $u=rand(0,99);  ','\"\nimport random\nnum_aléatoire=0\ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\"','\"\nimport random\n\nclass CoffreFort:\n    \\\"\\\"\\\"\n    Un coffre-fort très peu sécuritaire.\n\n    Attributs : combinaison, une liste de 4 chiffres entre 0 et 99.\n\n    \\\"\\\"\\\"\n    def __init__(self, une_combinaison):\n        \\\"\\\"\\\"\n        Initialise le Coffre-fort avec une combinaison choisie.\n\n        Paramètre :\n            - une_combinaison, une liste de 4 entiers entre 0 et 99.\n\n        \\\"\\\"\\\"\n        self.combinaison = une_combinaison\n\n\nmon_coffre = CoffreFort( [ $r, $s, $t, $u ] )\"','#Votre code ici:\nprint(42)','','\"[$r, $s, $t, $u]\n\"',NULL,NULL),(53,NULL,'$r=rand(0,99); $s=rand(0,99); $t=rand(0,99); $u=rand(0,99);  ','\"\nimport random\nnum_aléatoire=0\ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\"','\"\nimport random\n\nclass CoffreFort:\n    \\\"\\\"\\\"\n    Un coffre-fort très peu sécuritaire.\n\n    \\\"\\\"\\\"\n    def __init__(self, une_combinaison):\n        \\\"\\\"\\\"\n        Initialise le Coffre-fort avec une combinaison choisie.\n\n        Paramètre :\n            - une_combinaison, une liste de 4 entiers entre 0 et 99.\n\n        \\\"\\\"\\\"\n        self.__combinaison = une_combinaison\"','    #Votre code ici:\n\n','\"\nmon_coffre = CoffreFort( [ $r, $s, $t, $u ] )\nprint(mon_coffre.get_combinaison())\n\n\"','\"[$r, $s, $t, $u]\n\"',NULL,NULL),(54,NULL,'$r=rand(0,99); $s=rand(0,99); $t=rand(0,99); $u=rand(0,99);  ','\"\nimport random\nnum_aléatoire=0\ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\"','\"\nimport random\n\nclass CoffreFort:\n    \\\"\\\"\\\"\n    Un coffre-fort très peu sécuritaire.\n\n    \\\"\\\"\\\"\n    def __init__(self, une_combinaison):\n        \\\"\\\"\\\"\n        Initialise le Coffre-fort avec une combinaison choisie.\n\n        Paramètre :\n            - une_combinaison, une liste de 4 entiers entre 0 et 99.\n\n        Exemples :\n        >>> #Test des cas invalides\n        >>> coffre_test = CoffreFort( [ 0, 1, 2 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test = CoffreFort( [ 0, 1, 2, 100 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test = CoffreFort( [ -1, 1, 2, 3 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n\n        \\\"\\\"\\\"\n        self.set_combinaison( une_combinaison )\n\n    def get_combinaison(self):\n        \\\"\\\"\\\"\n        Accesseur de la combinaison.\n\n        Retour : une liste de 4 entiers entre 0 et 99 inclusivement.\n\n        Exemples :\n        >>> coffre_test = CoffreFort( [ 0, 1, 2, 3 ] )\n        >>> coffre_test.get_combinaison()\n        [0, 1, 2, 3]\n        \\\"\\\"\\\"\n        return self.__combinaison\n\n    def set_combinaison(self, une_combinaison):\n        \\\"\\\"\\\"\n        Mutateur de la combinaison\n\n        Paramètre :\n            - une_combinaison, une liste de 4 entiers entre 0 et 99.\n\n        Exemples:\n        >>> #Test un cas invalide\n        >>> coffre_test = CoffreFort( [ 0, 1, 2, 3 ] )\n        >>> coffre_test.set_combinaison( [ 7, 11, 13, 17 ])\n        >>> coffre_test.get_combinaison()\n        [7, 11, 13, 17]\n        >>> #Test des cas invalides\n        >>> coffre_test.set_combinaison( [ 0, 1, 2 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test.set_combinaison( [ 0, 1, 2, 100 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test.set_combinaison( [ 0, -1, 2, 3] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n\n        \\\"\\\"\\\"\"','        #Votre code ici:\n\n','\"\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','null',NULL,NULL),(55,NULL,'$r=rand(0,99); $s=rand(0,99); $t=rand(0,99); $u=rand(0,99);  ','\"\nimport random\nnum_aléatoire=0\ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u, $v ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\n\"','\"\nimport random\n\nclass CoffreFort:\n    \\\"\\\"\\\"\n    Un coffre-fort très peu sécuritaire.\n\n    \\\"\\\"\\\"\n    def __init__(self, une_combinaison):\n        \\\"\\\"\\\"\n        Initialise le Coffre-fort avec une combinaison choisie.\n\n        Paramètre :\n            - une_combinaison, une liste de 4 entiers entre 0 et 99.\n\n        Exemples :\n        >>> #Test des cas invalides\n        >>> coffre_test = CoffreFort( [ 0, 1, 2 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test = CoffreFort( [ 0, 1, 2, 100 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test = CoffreFort( [ -1, 1, 2, 3 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n\n        \\\"\\\"\\\"\n        self.__état_porte = True\n        self.set_combinaison( une_combinaison )\n\n    def get_combinaison(self):\n        \\\"\\\"\\\"\n        Accesseur de la combinaison.\n\n        Retour : une liste de 4 entiers entre 0 et 99 inclusivement.\n\n        Exemples :\n        >>> coffre_test = CoffreFort( [ 0, 1, 2, 3 ] )\n        >>> coffre_test.get_combinaison()\n        [0, 1, 2, 3]\n        \\\"\\\"\\\"\n        return self.__combinaison\n\n    def set_combinaison(self, une_combinaison):\n        \\\"\\\"\\\"\n        Mutateur de la combinaison\n\n        Paramètre :\n            - une_combinaison, une liste de 4 entiers entre 0 et 99.\n\n        Exemples:\n        >>> #Test un cas invalide\n        >>> coffre_test = CoffreFort( [ 0, 1, 2, 3 ] )\n        >>> coffre_test.set_combinaison( [ 7, 11, 13, 17 ])\n        >>> coffre_test.get_combinaison()\n        [7, 11, 13, 17]\n        >>> #Test des cas invalides\n        >>> coffre_test.set_combinaison( [ 0, 1, 2 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test.set_combinaison( [ 0, 1, 2, 100 ] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n        >>> coffre_test.set_combinaison( [ 0, -1, 2, 3] )\n        Traceback (most recent call last):\n        AssertionError: Paramètre combinaison invalide.\n\n        \\\"\\\"\\\"\n        #Vérifie le nombre de chiffres dans la combinaison\n        assert len(une_combinaison) == 4, \\\"Paramètre combinaison invalide.\\\"\n        #Vérifie que chaque chiffre est entre 0 et 99 inclusivement.\n        for i in range(4):\n            assert une_combinaison[i] in range(100), \\\"Paramètre combinaison invalide.\\\"\n\n        self.__combinaison = une_combinaison\"','    #Votre code ici:\n\n','\"\ndef vérifier_porte():\n    if mon_coffre.est_ouvert():\n        print(\\\"Le coffre-fort est ouvert\\\")\n    else:\n        print(\\\"Le coffre-fort est inviolable!\\\")\n\n\n#Programme principal\nmon_coffre = CoffreFort( [ $r, $s, $t, $u ] )\nvérifier_porte()\nmon_coffre.fermer()\nvérifier_porte()\nmon_coffre.ouvrir( [0, 1, 2, 3] )\nvérifier_porte()\nmon_coffre.ouvrir( [ $r, $s, $t, $u ] )\nvérifier_porte()\nmon_coffre.ouvrir( [0, 1, 2, 3] )\nvérifier_porte()\n\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','\"Le coffre-fort est ouvert\nLe coffre-fort est inviolable!\nLe coffre-fort est inviolable!\nLe coffre-fort est ouvert\nLe coffre-fort est ouvert\n\"',NULL,NULL),(56,NULL,'','','\"\nimport random\n\nclass  Dé:\n    \\\"\\\"\\\"\n    Un dé à jouer d\'un nombre variable de faces.\n    \n    \\\"\\\"\\\"\n    def __init__(self, faces):\n        \\\"\\\"\\\"\n        Initialise le dé.\n\n        Paramètre:\n        - faces : entier, le nombre de faces du dé.\n\n        Exemples :\"','        >>> ','\"\n        >>> dé_test.face\n        1\n\n        \\\"\\\"\\\"\n        assert faces > 1, \\\"Le nombre de faces doit être > 1\\\"\n\n        #Le nombre de faces du dé\n        self.__faces = faces\n\n        #Le nombre de points sur la face supérieure\n        self.__face = 1\n\n    @property\n    def face(self):\n        \\\"\\\"\\\"\n        Propriété en lecture seule de la face supérieure du dé.\n\n        Retour : un entier représentant le nombre de points sur la face supérieure du dé.\n\n        \\\"\\\"\\\"\n        return self.__face\n\n# --- Exécute les tests ---\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','null',NULL,NULL),(57,NULL,'','','\"\nimport random\n\nclass  Dé:\n    \\\"\\\"\\\"\n    Un dé à jouer d\'un nombre variable de faces.\n    \n    \\\"\\\"\\\"\n    def __init__(self, faces):\n        \\\"\\\"\\\"\n        Initialise le dé.\n\n        Paramètre:\n        - faces : entier, le nombre de faces du dé. Doit être >1.\n\n        \\\"\\\"\\\"\n        assert faces > 1, \\\"Le nombre de faces doit être > 1\\\"\n        self.__faces = faces\n        self.__face = 1\n            \n    def lancer(self):\n        \\\"\\\"\\\"\n        Simule un lancer de dé\n        \n        retour: le nombre aléatoire sur le dé.\n        \n        Exemple:\n        >>> nb_faces = 6\n        >>> dé_test = Dé( nb_faces )\"','','\"\n        >>> résultat > 0 and résultat <= nb_faces\n        True\n\n        \\\"\\\"\\\"\n        self.__face = random.randrange(self.__faces) + 1\n        return self.__face\n\n    @property\n    def face(self):\n        \\\"\\\"\\\"\n        Propriété en lecture seule de la face supérieure du dé.\n\n        Retour : un entier représentant le nombre de points sur la face supérieure du dé.\n\n        \\\"\\\"\\\"\n        return self.__face\n\n# --- Exécute les tests ---\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','null',NULL,NULL),(58,NULL,'','','\"\nimport random\n\nclass  Dé:\n    \\\"\\\"\\\"\n    Un dé à jouer d\'un nombre variable de faces.\n    \n    \\\"\\\"\\\"\n    def __init__(self, faces):\n        \\\"\\\"\\\"\n        Initialise le dé.\n\n        Paramètre:\n        - faces : entier, le nombre de faces du dé.\n\n        \\\"\\\"\\\"\n        assert faces > 1, \\\"Le nombre de faces doit être > 1\\\"\n        self.__faces = faces\n        self.__face = 1\n            \n    def lancer(self):\n        \\\"\\\"\\\"\n        Simule un lancer de dé\n        \n        retour: le nombre aléatoire sur le dé.\n        \n        Exemple:\n        >>> nb_faces = 6\n        >>> dé_test = Dé( nb_faces )\n        >>> résultat = dé_test.lancer()\n        >>> résultat > 0 and résultat <= nb_faces\n        True\n\n        \\\"\\\"\\\"\n        self.__face = random.randrange(self.__faces) + 1\n        return self.__face\n\n    @property\n    def face(self):\n        \\\"\\\"\\\"\n        Propriété en lecture seule de la face supérieure du dé.\n\n        Retour : un entier représentant le nombre de points sur la face supérieure du dé.\n\n        Exemples :\n        >>> dé_test = Dé(12)\n        >>> dé_test.face\"','','\"\n\n        \\\"\\\"\\\"\n        return self.__face\n\n# --- Exécute les tests ---\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','null',NULL,NULL),(59,NULL,'$r=rand(10,100);  ','\"\nfrom time import sleep\n\nclass ICMP:\n def __init__(self,n):\n  pass\n\nclass Socket:\n def send_packet(self,x):\n  sleep(\".$r.\"/1000)\n def receive_packet(self):\n  sleep(\".$r.\"/1000)\n  \ndef open_socket( x ):\n return Socket()\n \n\"','\"\nimport time\n\ndef envoyerICMP( destination ):\n    \\\"\\\"\\\"\n    Envoie un paquet ICMP à un hôte distant et calcule le temps écoulé avant de recevoir la réponse.\n\n    Paramètre :\n    - destination : str, l\'adresse IP d\'un hôte distant.\n\n    Retour : le temps écoulé entre l\'envoi et la réception de la réponse en millisecondes.\n\n    \\\"\\\"\\\"\n    #Instancie le paquet ICMP\n    paquet_envoyé = ICMP( destination )\n\n    #Ouvre un socket vers la destination\n    socket = open_socket( destination )\n\n    #Chronomètre le temps de l\'aller-retour\n    heure_envoi = time.time()\n\n    #Envoi le paquet et attend la réponse\n    socket.send_packet( paquet_envoyé )\n    paquet_reçu = socket.receive_packet()\n\n    #Retourne le temps écoulé en ms.\n    return time.time()-heure_envoi\n\ndef ping( destination ):\n    \\\"\\\"\\\"\n    Teste l\'accessibilité d\'un hôte distant.\n \n    ping envoie un paquet ICMP et affiche le nombre de millisecondes nécessaires pour l\'aller-retour du paquet\n    sous la forme : \n    64 octets reçus de [destination] : temps écoulé=[x] ms\n\n    où destination est l\'adresse IP de l\'hôte distant\n       x est le nombre de millisecondes écoulées (arrondi à la ms près).\n \n    Paramètre :\n    - destination : str, l\'adresse IP d\'un hôte distant.\n \n    \\\"\\\"\\\"\n\"','','\"\n#Ping google.com\nping( \\\"8.8.8.8\\\" )\n\"','\"64 octets recus de 8.8.8.8 : temps ecoule=\".(2*$r).\" ms\n\"',NULL,NULL),(60,NULL,'$r=array(rand(10,100),rand(10,100),rand(10,100),rand(10,100),rand(10,100));  ','\"\nfrom time import sleep\n\nclass ICMP:\n def __init__(self,n):\n  pass\n\nclass Socket:\n\n no=0\n nbs=[ \".$r[0].\", \".$r[1].\", \".$r[2].\", \".$r[3].\", \".$r[4].\" ]\n def send_packet(self,x):\n  sleep(Socket.nbs[Socket.no]/1000)\n def receive_packet(self):\n  sleep(Socket.nbs[Socket.no]/1000)\n  Socket.no+=1\n  \ndef open_socket( x ):\n return Socket()\n \n\"','\"\nimport time\n\ndef envoyerICMP( destination ):\n    \\\"\\\"\\\"\n    Envoie un paquet ICMP à un hôte distant et calcule le temps écoulé avant de recevoir la réponse.\n\n    Paramètre :\n    - destination : str, l\'adresse IP d\'un hôte distant.\n\n    Retour : le temps écoulé entre l\'envoi et la réception de la réponse en millisecondes.\n\n    \\\"\\\"\\\"\n    #Instancie le paquet ICMP\n    paquet_envoyé = ICMP( destination )\n\n    #Ouvre un socket vers la destination\n    socket = open_socket( destination )\n\n    #Chronomètre le temps de l\'aller-retour\n    heure_envoi = time.time()\n\n    #Envoi le paquet et attend la réponse\n    socket.send_packet( paquet_envoyé )\n    paquet_reçu = socket.receive_packet()\n\n    #Retourne le temps écoulé en ms.\n    return time.time()-heure_envoi\n\ndef ping( destination, nb_paquets ):\n    \\\"\\\"\\\"\n    Teste l\'accessibilité d\'un hôte distant.\n \n    ping envoie un ou plusieurs paquets ICMP et affiche le nombre de millisecondes nécessaires pour l\'aller-retour de chaque paquet\n    ainsi que le temps minimal, moyen et maximal sous la forme : \n    64 octets reçus de [destination] : temps écoulé=[x] ms\n\n    rtt min/moy/max = [min]/[moy]/[max] ms\n\n    où destination est l\'adresse IP de l\'hôte distant\n       x est le nombre de millisecondes écoulées (arrondi à la ms près).\n       min est le nombre minimal de millisecondes écoulées (arrondi à la ms près).\n       moy est le nombre moyen de millisecondes écoulées (arrondi à la ms près).\n       max est le nombre maximal de millisecondes écoulées (arrondi à la ms près).\n \n    Paramètre :\n    - destination : str, l\'adresse IP d\'un hôte distant.\n    - nb_paquets : entier, le nombre de paquets ICMP à envoyer.\n \n    \\\"\\\"\\\"\"','','\"\n#Ping google.com\nping( \\\"8.8.8.8\\\", 5 )\n\"','\"\n64 octets recus de 8.8.8.8 : temps ecoule=\".(2*$r[0]).\" ms\n64 octets recus de 8.8.8.8 : temps ecoule=\".(2*$r[1]).\" ms\n64 octets recus de 8.8.8.8 : temps ecoule=\".(2*$r[2]).\" ms\n64 octets recus de 8.8.8.8 : temps ecoule=\".(2*$r[3]).\" ms\n64 octets recus de 8.8.8.8 : temps ecoule=\".(2*$r[4]).\" ms\nrtt min/moy/max = \".strval(min($r)*2).\"/\".strval(round(array_sum($r)*2/count($r))).\"/\".strval(max($r)*2).\"ms\n\"',NULL,NULL),(61,NULL,'$nb_perdus=0; while ($nb_perdus==0 or $nb_perdus==count($r)){     $r=array(rand(10,100),rand(10,100),rand(10,100),rand(10,100),rand(10,100));     $min=100;     $max=0;     $somme=0;     $nb_perdus=0;     for ($i=0;$i<count($r);$i++){       if ($r[$i]>70){         $nb_perdus++;       }       else{         $min=min($min,$r[$i]);         $max=max($max,$r[$i]);         $somme+=$r[$i];       }     } }  ','\"\nfrom time import sleep\n\nclass ICMP:\n def __init__(self,n):\n  pass\n\nclass Socket:\n\n no=0\n nbs=[ $r[0], $r[1], $r[2], $r[3], $r[4] ]\n def send_packet(self,x):\n  sleep(Socket.nbs[Socket.no]/1000)\n def receive_packet(self):\n  Socket.no+=1\n  if Socket.nbs[Socket.no-1]>70 :\n      raise TimeoutError(\\\"Ping timed out after \\\"+str(Socket.nbs[Socket.no-1]*2)+\\\" ms\\\")\n\n  sleep(Socket.nbs[Socket.no-1]/1000)\n  \ndef open_socket( x ):\n return Socket()\n \n\"','\"\nimport time\n\ndef envoyerICMP( destination ):\n    \\\"\\\"\\\"\n    Envoie un paquet ICMP à un hôte distant et calcule le temps écoulé avant de recevoir la réponse.\n\n    Paramètre :\n    - destination : str, l\'adresse IP d\'un hôte distant.\n\n    Retour : le temps écoulé entre l\'envoi et la réception de la réponse en millisecondes.\n\n    Exceptions : lance l\'exception TimeoutError si un paquet envoyé n\'est jamais reçu.\n\n    \\\"\\\"\\\"\n    #Instancie le paquet ICMP\n    paquet_envoyé = ICMP( destination )\n\n    #Ouvre un socket vers la destination\n    socket = open_socket( destination )\n\n    #Chronomètre le temps de l\'aller-retour\n    heure_envoi = time.time()\n\n    #Envoi le paquet et attend la réponse\n    socket.send_packet( paquet_envoyé )\n    paquet_reçu = socket.receive_packet()\n\n    #Retourne le temps écoulé en ms.\n    return time.time()-heure_envoi\n\ndef ping( destination, nb_paquets ):\n    \\\"\\\"\\\"\n    Teste l\'accessibilité d\'un hôte distant.\n \n    ping envoie un ou plusieurs paquets ICMP et affiche le nombre de millisecondes nécessaires pour l\'aller-retour de chaque paquet\n    ainsi qu\'un résumé de l\'activité incluant le pourcentage de paquets perdus, le temps minimal, moyen et maximal sous la forme : \n\n    64 octets reçus de [destination] : temps écoulé=[x] ms\n\n    [nb_paquets] paquets transmis, [n] recus, [p]% perdus\n    rtt min/moy/max = [min]/[moy]/[max] ms\n\n    où destination est l\'adresse IP de l\'hôte distant\n       x est le nombre de millisecondes écoulées (arrondi à la ms près).\n       min est le nombre minimal de millisecondes écoulées (arrondi à la ms près).\n       moy est le nombre moyen de millisecondes écoulées (arrondi à la ms près).\n       max est le nombre maximal de millisecondes écoulées (arrondi à la ms près).\n       n est le nombre de paquets reçus.\n       p est le pourcentage de paquets perdus (envoyés mais non reçus).\n \n    Paramètre :\n    - destination : str, l\'adresse IP d\'un hôte distant.\n    - nb_paquets : entier, le nombre de paquets ICMP à envoyer.\n \n    \\\"\\\"\\\"\"','','\"\n#Ping google.com\nping( \\\"8.8.8.8\\\", 5 )\n\"','\"\n64 octets recus de 8.8.8.8 : \".($r[0]>70?\"perdu.\":\"temps ecoule=\".(2*$r[0]).\" ms\").\"\n64 octets recus de 8.8.8.8 : \".($r[1]>70?\"perdu.\":\"temps ecoule=\".(2*$r[1]).\" ms\").\"\n64 octets recus de 8.8.8.8 : \".($r[2]>70?\"perdu.\":\"temps ecoule=\".(2*$r[2]).\" ms\").\"\n64 octets recus de 8.8.8.8 : \".($r[3]>70?\"perdu.\":\"temps ecoule=\".(2*$r[3]).\" ms\").\"\n64 octets recus de 8.8.8.8 : \".($r[4]>70?\"perdu.\":\"temps ecoule=\".(2*$r[4]).\" ms\").\"\n5 paquets transmis, \".(5-$nb_perdus).\" recus, \".($nb_perdus/5*100).\"% perdus\nrtt min/moy/max = \".strval($min*2).\"/\".strval(round($somme*2/(count($r)-$nb_perdus))).\"/\".strval($max*2).\"ms\n\"',NULL,NULL),(62,NULL,'$r=rand(0,999);  ','\"import random; random.randrange = lambda x: $r\n\"','\"import random\n\nclass Mogwai:\n    \\\"\\\"\\\"\n    Un Mogwai, être attachant et sans malice.\n\n    Attributs : numéro, un entier entre 0 et 999 identifiant chaque mogwai.\n\n    \\\"\\\"\\\"\n    def présenter(self):\n        \\\"\\\"\\\"\n        Presente un Mogwai\n    \n        \\\"\\\"\\\"\n        print(\\\"Bonjour, je suis le Mogwai no \\\" + str(self.numéro))\n\n    def __init__(self):\n        \\\"\\\"\\\"\n        Initialise le Mogwai.\n\n        \\\"\\\"\\\"\n        self.numéro = random.randrange(1000)\n        \n\"','','','\"Bonjour, je suis le Mogwai no $r\n\"',NULL,NULL),(63,NULL,'$r=rand(0,999); $s=rand(0,999); $t=rand(0,999); $u=rand(0,999); $v=rand(0,999);  ','\"import random\nnum_aléatoire=0; \ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u, $v ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\n\"','\"class Mogwai:\n    \\\"\\\"\\\"\n    Un Mogwai, être attachant et sans malice.\n\n    Attributs : numéro, un entier entre 0 et 999 identifiant chaque mogwai.\n\n    \\\"\\\"\\\"\n    def présenter(self):\n        \\\"\\\"\\\"\n        Presente un Mogwai\n    \n        \\\"\\\"\\\"\n        print(\\\"Bonjour, je suis le Mogwai no \\\" + str(self.numéro))\n\n    def __init__(self):\n        \\\"\\\"\\\"\n        Initialise le Mogwai.\n\n        \\\"\\\"\\\"\n        self.numéro = random.randrange(1000)\n        \n\"','','','\"Bonjour, je suis le Mogwai no $r\nBonjour, je suis le Mogwai no $s\n\"',NULL,NULL),(64,NULL,'$r=rand(0,999); $s=rand(0,999); $t=rand(0,999); $u=rand(0,999); $v=rand(0,999);  ','\"import random\nnum_aléatoire=0; \ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u, $v ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\n\"','\"class Mogwai:\n    \\\"\\\"\\\"\n    Un Mogwai, être attachant et sans malice.\n\n    Attributs : numéro, un entier entre 0 et 999 identifiant chaque mogwai.\n\n    \\\"\\\"\\\"\n    def présenter(self):\n        \\\"\\\"\\\"\n        Presente un Mogwai\n    \n        \\\"\\\"\\\"\n        print(\\\"Bonjour, je suis le Mogwai no \\\" + str(self.numéro))\n\n    def __init__(self):\n        \\\"\\\"\\\"\n        Initialise le Mogwai.\n\n        \\\"\\\"\\\"\n        self.numéro = random.randrange(1000)\n\n\"','','','\"Bonjour, je suis le Mogwai no $v\nBonjour, je suis le Mogwai no $u\nBonjour, je suis le Mogwai no $t\nBonjour, je suis le Mogwai no $s\nBonjour, je suis le Mogwai no $r\n\"',NULL,NULL),(65,NULL,'$r=rand(0,999); $rp=$r+1; $s=rand(0,999); $t=rand(0,999); $u=rand(0,999); $v=rand(0,999);  ','\"\nimport random\nnum_aléatoire=0; \ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u, $v ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\n\"','\"\n\nimport random\n\nclass Mogwai:\n    \\\"\\\"\\\"\n    Un Mogwai, être attachant et sans malice.\n\n    Attributs : numéro, un entier entre 0 et 999 identifiant chaque mogwai.\n\n    \\\"\\\"\\\"\n    def présenter(self):\n        \\\"\\\"\\\"\n        Presente un Mogwai\n    \n        \\\"\\\"\\\"\n        print(\\\"Bonjour, je suis le Mogwai no \\\" + str(self.numéro))\n\n    def __init__(self):\n        \\\"\\\"\\\"\n        Initialise le Mogwai.\n\n        \\\"\\\"\\\"\n        self.numéro = random.randrange(1000)\n\n    def mouiller(self):\n        \\\"\\\"\\\"\n        Retourne un nouveau Mogwai clone du premier.\n\n        Instancie un nouveau Mogwai avec un numéro incrémenté de 1 par rapport à son parent.\n\n        Retour : Un nouvel objet Mogwai.\n\n        \\\"\\\"\\\"\n\"','        return None','\"\n\nguizmo = Mogwai()\nclone = guizmo.mouiller()\n\nguizmo.présenter()\nclone.présenter()\n\n\"','\"Bonjour, je suis le Mogwai no $r\nBonjour, je suis le Mogwai no $rp\n\"',NULL,NULL),(66,NULL,'$r=rand(0,999); $s=rand(0,999); $t=rand(0,999); $u=rand(0,999); $v=rand(0,999);  ','\"import random\nnum_aléatoire=0; \ndef numéroter(n):\n    global num_aléatoire \n    numéros = [ $r, $s, $t, $u, $v ]\n    resultat = numéros[num_aléatoire]\n    num_aléatoire+=1\n    return resultat\n\nrandom.randrange = numéroter\n\"','\"import random\n\nclass Mogwai:\n    \\\"\\\"\\\"\n    Un Mogwai, être attachant et sans malice.\n\n    Attributs : numéro, un entier entre 0 et 999 identifiant chaque mogwai.\n\n    \\\"\\\"\\\"\n    def présenter(self):\n        \\\"\\\"\\\"\n        Presente un Mogwai\n    \n        \\\"\\\"\\\"\n        print(\\\"Bonjour, je suis le Mogwai no \\\" + str(self.numéro))\n\n    def __init__(self):\n        \\\"\\\"\\\"\n        Initialise le Mogwai.\n\n        \\\"\\\"\\\"\n        self.numéro = random.randrange(1000)\n\n    def manger(self, heure, minutes):\n        \\\"\\\"\\\"\n        Fait manger le Mogwai à une certaine heure.\n\n        Paramètres : heure, un entier représentant l\'heure à laquelle le Mogwai doit manger.\n                     minutes, un entier représentant les minutes de l\'heure à laquelle le Mogwai doit manger.\n\n        Retour : Un nouvel objet Gremlin si le Mogwai mange entre 00:00 et 07:00 ou None sinon. \n\n        \\\"\\\"\\\"\n        if heure>0 and heure<7:\n            clone = Gremlin()\n            clone.numéro = self.numéro\n            return clone\n        else :\n            return None\n\nclass Gremlin:\n    \\\"\\\"\\\"\n    Un Gremlin, monstre affamé mais divertissant.\n   \n    Attributs :\n    numéro : un entier identifiant le Gremlin.\n\n    \\\"\\\"\\\"\n    #À compléter\n \n\"','','\"\n\n#Crée un nouveau Mogwai\nguizmo = Mogwai()\n\n#Donne à manger au Mogwai à 9h15 (pas de problème).\ngremo = guizmo.manger( 9, 15 )\nprint(gremo)\n\n#Donne à manger au Mogwai à 4h15 (ho ho...).\ngremo = guizmo.manger( 4, 15 )\n\n#Si gremo est un objet Gremlin, on le fait se présenter.\nif isinstance(gremo, Gremlin):\n    gremo.présenter()\n\n\"','\"None\nGrrr! je suis le Gremlin no $r\n\"',NULL,NULL),(67,NULL,NULL,'','\"class Compteur:\n    \\\"\\\"\\\"\n    Un compteur du genre \\\"distributeur de billets\\\"\n\n    Attributs : numéro_servi, un entier représentant le numéro présentement servi.\n\n    \\\"\\\"\\\"\n\n    def __init__(self):\n        \\\"\\\"\\\"\n        Initialise le premier numéro servi à 1.\n\n        \\\"\\\"\\\"\n        #Pour que le premier numéro servi soit 1, on initialise à 0.\n        self.numéro_servi=0\n\n\n\"','    def __str__(self):\n        \"\"\"\n        Converti le Compteur en une chaîne de la forme «On sert le x» \n        où x est le numéro présentement servi.\n\n        Retour : une chaîne de la forme «On sert le x»\n\n        Exemples:\n        >>> compteur_test = Compteur()\n        >>> print(compteur_test)\n        On sert le 0\n\n        \"\"\"\n        pass\n\n    def suivant(self):\n        \"\"\"\n        Incrémente le numéro servi courant.\n\n        Retour : le nouveau numéro servi.\n\n        Exemples:\n        >>> compteur_test = Compteur()\n        >>> compteur_test.suivant()\n        1\n        >>> print(compteur_test)\n        On sert le 1\n        >>> compteur_test.suivant()\n        2\n        >>> print(compteur_test)\n        On sert le 2\n\n        \"\"\"\n        pass\n\n','\"if __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','null',NULL,NULL),(68,NULL,NULL,'','\n\"class Compteur:\n    \\\"\\\"\\\"\n    Un compteur du genre \\\"distributeur de billets\\\" \n\n    Attributs : numéro_servi, un entier représentant le numéro présentement servi.\n\n    \\\"\\\"\\\"\n \n    def __init__(self, un_numéro):\n        \\\"\\\"\\\"\n        Initialise le premier numéro servi à <em>un_numéro</em>.\n\n        Paramètre :\n           - un_numéro : un entier positif ou nul réprésentant le premier numéro\n                         devant être distribué par le Compteur.\n\n        Exemples :\n        #On essaie le cas erroné d\'un numéro initial négatif\n        >>> Compteur(-1)\n        Traceback (most recent call last):\n        AssertionError: Paramètre un_numéro invalide.\n\n\n        \\\"\\\"\\\"\n\"','        pass','\"\n    def __str__(self):\n        \\\"\\\"\\\"\n        Converti le Compteur en une chaîne de la forme «On sert le x» \n        où x est le numéro présentement servi.\n\n        Retour : une chaîne de la forme «On sert le x»\n\n        Exemples:\n        >>> compteur_test = Compteur(1)\n        >>> compteur_test.suivant()\n        1\n        >>> print(compteur_test)\n        On sert le 1\n        >>> compteur_test = Compteur(5)\n        >>> compteur_test.suivant()\n        5\n        >>> print(compteur_test)\n        On sert le 5\n\n        \\\"\\\"\\\"\n        return \\\"On sert le \\\" + str(self.numéro_servi)\n\n    def suivant(self):\n        \\\"\\\"\\\"\n        Incrémente le numéro servi courant.\n\n        Exemples:\n        >>> compteur_test = Compteur(1)\n        >>> print(compteur_test)\n        On sert le 0\n        >>> compteur_test.suivant()\n        1\n        >>> print(compteur_test)\n        On sert le 1\n        >>> print(compteur_test)\n        On sert le 1\n        >>> compteur_test.suivant()\n        2\n        >>> print(compteur_test)\n        On sert le 2\n\n        \\\"\\\"\\\"\n        self.numéro_servi+=1\n        return self.numéro_servi\n\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','null',NULL,NULL),(69,NULL,NULL,'','\n\"class Compteur:\n    \\\"\\\"\\\"\n    Un compteur du genre \\\"distributeur de billets\\\" \n\n    Attributs : \n        - numéro_servi, un entier représentant le numéro présentement servi.\n        - numéro_distribué, un entier tenant le compte du dernier \\\"billet\\\" distribué.\n\n    \\\"\\\"\\\"\n \n    def __init__(self, un_numéro):\n        \\\"\\\"\\\"\n        Initialise le compte à <em>un_numéro</em>.\n\n        Paramètre :\n           - un_numéro : un entier réprésentant le premier numéro \n                         distribué par le Compteur.\n\n        Exemples :\n        #On essaie le cas erroné d\'un numéro initial négatif\n        >>> Compteur(-1)\n        Traceback (most recent call last):\n        AssertionError: Paramètre un_numéro invalide.\n\n        \\\"\\\"\\\"\n\"','\n        #On s\'assure que le paramètre est non négatif.\n        assert un_numéro >=0, \"Paramètre un_numéro invalide.\"\n        \n        #Pour que le premier numéro servi soit 1, on initialise à un de moins.\n        self.numéro_servi = un_numéro-1\n        \n    def __str__(self):\n        \"\"\"\n        Converti le Compteur en une chaîne de la forme «On sert le x» \n        où x est le dernier numéro distribué.\n\n        Retour : une chaîne de la forme «On sert le x»\n        Exemples:\n        >>> compteur_test = Compteur(1)\n        >>> compteur_test.distribuer()\n        1\n        >>> compteur_test.suivant()\n        1\n        >>> print(compteur_test)\n        On sert le 1\n        >>> compteur_test = Compteur(5)\n        >>> compteur_test.distribuer()\n        5\n        >>> compteur_test.suivant()\n        5\n        >>> print(compteur_test)\n        On sert le 5\n\n        \"\"\"\n        return \"On sert le \" + str(self.numéro_servi)\n\n    def suivant(self):\n        \"\"\"\n        Incrémente le numéro servi courant.\n\n        Le numéro servi ne peut jamais être plus grand que le dernier billet distribué.\n\n        Exemples:\n        >>> compteur_test = Compteur(1)\n        >>> print(compteur_test)\n        On sert le 0\n\n        #Aucun billet n\'a encore été distribué.\n        >>> compteur_test.suivant()\n        0\n        >>> print(compteur_test)\n        On sert le 0\n        >>> compteur_test.distribuer()\n        1\n        >>> print(compteur_test)\n        On sert le 0\n        >>> compteur_test.suivant()\n        1\n        >>> print(compteur_test)\n        On sert le 1\n\n        \"\"\"\n        self.numéro_servi+=1\n        return self.numéro_servi\n        \n    def distribuer(self):\n        \"\"\"\n        Distribue un billet.\n\n        Le billet distribué est un numéro entier incrémenté de 1 à chaque appel.\n\n        Retour : un nombre entier, numéro de billet distribué.\n\n        Exemples:\n        >>> compteur_test = Compteur(1)\n        >>> compteur_test.distribuer()\n        1\n        >>> compteur_test.distribuer()\n        2\n        >>> compteur_test.suivant()\n        1\n        >>> print(compteur_test)\n        On sert le 1\n        >>> compteur_test.suivant()\n        2\n        >>> print(compteur_test)\n        On sert le 2\n\n        \"\"\"\n        pass\n','\"\nif __name__ == \\\"__main__\\\":\n    import doctest\n    doctest.testmod()\n\"','null',NULL,NULL),(74,NULL,'','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\"','','','\"Bonjour le monde!\r\n\"','',''),(75,8,'$r=rand(-100,100);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\"','','','($r<0?\"Négatif\":\"Positif\") . \"\r\n\"','','\"$r\\n\"'),(76,8,'$r=rand(0,1000);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\"','','','($r%2==0?\"Pair\":\"Impair\") . \"\\n\"','','\"$r\\n\"'),(77,NULL,'$r=rand(0,1000);\r\n$s=rand(0,1000);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\"','','','($r>$s?$r:$s) . \"\\n\"','','\"$r\\n$s\\n\"'),(78,NULL,'$r1=rand(0,10000)/100;\r\n$r2=rand(0,10000)/100;\r\n$r3=rand(0,10000)/100;\r\nsetlocale(\"LC_ALL\", \"C\");\r\n$a=array($r1,$r2,$r3);\r\nrsort($a);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\"','','','$a[0] . \"\\n\"','','\"$r1\\n$r2\\n$r3\\n\"'),(79,8,'$r1=rand(0,10000)/100;\r\n$r2=rand(0,10000)/100;\r\n$r3=rand(0,10000)/100;\r\nsetlocale(\"LC_ALL\", \"C\");\r\n$a=array($r1,$r2,$r3);\r\n$s=array_sum($a);','','\"#include <iostream>\r\n\r\nusing namespace std;\"','','','$s/3 . \"\\n\"','','\"$r1\\n$r2\\n$r3\\n\"'),(80,NULL,'$m=rand(1,12);\r\n\r\nif($m==2){\r\n  $r=28;\r\n}\r\nelseif(in_array($m, array(1,3,5,7,8,10,12))){\r\n  $r=31;\r\n}\r\nelse{\r\n  $r=30;\r\n}','','\"#include <iostream>\r\n\r\nusing namespace std;\"','','','\"$r\\n\"','','\"$m\\n\"'),(81,NULL,'$a=rand(1582,2199);\r\n\r\n$b=($a%4>0?0:($a%100>0?1:($a%400>0?0:1)));','','\"#include <iostream>\r\n\r\nusing namespace std;\"','','','($b==1?\"oui\\n\":\"non\\n\")','','\"$a\\n\"'),(82,8,'$r=rand(0,1000);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\"','    //Ajoutez la déclaration ici.\r\n\r\n    cin >> entree;','\'\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n}\'','\"Vous avez entré $r.\r\nMerci.\r\n\"','','\"$r\\n\"'),(83,8,'$r=rand(-32768, 32767);\r\n$s=rand(32768,65535);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','    //Ajoutez la déclaration ici','\'\r\n    //Première saisie, entre -32768 et 32767.\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n    //Seconde saisie, > 32767.\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n}\'','\"Vous avez entré $r.\\nMerci.\\nVous avez entré 32767.\\nMerci.\\n\"','','\"$r\\n$s\\n\"'),(84,-1,'$r=rand(0, 65535);\r\n$s=rand(65536, 99999);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','    //Ajoutez la déclaration ici','\'\r\n    //Première saisie, entre 0 et 65535.\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n    //Seconde saisie, > 65535.\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n}\'','\"Vous avez entré $r.\\nMerci.\\nVous avez entré 65535.\\nMerci.\\n\"','','\"$r\\n$s\\n\"'),(85,8,'$r=rand(-2000000000, -32769);\r\n$s=rand(32768, 2000000000);\r\n','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','    //Ajoutez la déclaration ici','\'\r\n    //Première saisie, entre -2 milliards et 0.\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n    //Seconde saisie, entre 0 et 2 milliards\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n}\'','\"Vous avez entré $r.\\nMerci.\\nVous avez entré $s.\\nMerci.\\n\"','','\"$r\\n$s\\n\"'),(86,8,'$r=rand(2147483648, 4000000000);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','    //Ajoutez la déclaration ici','\'\r\n    //Saisie d\\\'un entier entre 0 et 4 milliards.\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n}\'','\"Vous avez entré $r.\\nMerci.\\n\"','','\"$r\\n$s\\n\"'),(87,8,'$r=rand(10000, 1000000)/100;','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','    //Ajoutez la déclaration ici','\'\r\n    //Saisie d\\\'un réel entre 1000 et 10000.\r\n    cin >> entree;\r\n\r\n    cout << \"Vous avez entré \" << entree << \".\" << endl << \"Merci.\" << endl;\r\n\r\n}\'','\"Vous avez entré \" . sprintf(\"%.2F\",$r) .\".\\nMerci.\\n\"','','sprintf(\"%.2F\", $r) . \"\\n\"'),(88,8,'$n=chr(rand(0,25)+65);\r\n$p=chr(rand(0,25)+65);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','    //Ajoutez les déclarations ici','\'\r\n    //Saisie de l\\\'initiale du prénom\r\n    cin >> initiale_prenom;\r\n\r\n    //Saisie de l\\\'initiale du nom\r\n    cin >> initiale_nom;\r\n\r\n    cout << \"Bonjour M. ou Mme \" << initiale_prenom << \".\" << initiale_nom << \".\" << endl;\r\n\r\n}\'','\"Bonjour M. ou Mme $p.$n.\\n\"','','\"$p$n\\n\"'),(90,-1,'','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"}\r\n\"','\"Bonjour à tous\r\nBienvenue au quiz C++!!!\r\n\"','',''),(91,8,'','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"}\r\n\"','\"La ligne suivante est vide :\r\n\r\nLes deux prochaines aussi.\r\n\r\n\r\nC\'est terminé.\r\n\"','',''),(92,8,'','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"}\r\n\"','\'Ces guillemets sont dits \"anglais\" et délimitent les chaînes de caractères.\r\n\'','',''),(93,8,'$r=rand(-1000,1000);\r\n$s=rand(-1000,1000);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int nb1, nb2;\r\n\r\n    //Saisie des deux nombres\r\n    cin >> nb1 >> nb2;\r\n\r\n\"','','\"\r\n}\"','($r>$s)?\"Plus grand\":\"Pas plus grand\" . \"\\n\"','','\"$r\\n$s\\n\"'),(94,8,'$r=rand(-1000,1000);\r\n$s=rand(-1000,1000);\r\nif(rand(0,2)==0)$s=$r;','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int nb1, nb2;\r\n\r\n    //Saisie des deux nombres\r\n    cin >> nb1 >> nb2;\r\n\r\n\"','','\"\r\n}\"','($r>$s)?\"Plus grand\":(($r==$s)?\"Égaux\":\"Plus petit\") . \"\\n\"','','\"$r\\n$s\\n\"'),(96,8,'$r=rand(0,3);\r\n$s=rand(0,3);\r\n$t=rand(0,3);','','\"#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int nb1, nb2, nb3;\r\n\r\n    //Saisie des deux nombres\r\n    cin >> nb1 >> nb2 >> nb3;\r\n\r\n\"','','\"\r\n}\"','($r!=$s&&$r!=$t&&$s!=$t?\"Uniques\\n\":\"Non uniques\\n\")','','\"$r\\n$s\\n$t\\n\"'),(97,8,'$r=rand(10,100);\r\n$s=\"\";\r\nfor($i=0;$i<$r;$i++){\r\n  $s=$s . strval(rand(0,100)) . \"\\n\";\r\n}\r\n$s=$s . \".\\n\";','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"\r\n}\"','\"$r nombres entrés.\\n\"','','\"$s\"'),(98,8,'$r=rand(10,50);\r\n$s=\"\";\r\n$n=0;\r\nfor($i=0;$i<$r;$i++){\r\n  $v=rand(1,100);\r\n  $s=$s . strval($v) . \"\\n\";\r\n}\r\n$s=$s . \"0\\n\";\r\n\r\n$p=rand(10,50);\r\nfor($i=0;$i<$p;$i++){\r\n  $v=rand(0,100);\r\n  $s=$s . strval($v) . \"\\n\";\r\n}\r\n$s=$s . \".\\n\";','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"\r\n}\"','\"$r nombres entrés avant le 0.\\n\"','','\"$s\"'),(99,8,'$r=rand(100,10000);\r\n\r\n$primes = array();\r\n$n=0;\r\nfor ($x = 2; $x <= $r; $x++) {\r\n    $xIsPrime = TRUE;\r\n    $sqrtX = sqrt($x);\r\n    foreach ($primes as $prime) if ($prime > $sqrtX || ((!($x % $prime)) && (!$xIsPrime = FALSE))) break;\r\n    if ($xIsPrime){\r\n      $primes[] = $x;\r\n      $n++;\r\n    }\r\n}\r\n\r\n','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"\r\n}\"','\"$n\\n\"','','\"$r\\n\"'),(100,-1,'$n=rand(10, 100);\r\n$s=\"2\";\r\nfor($i=4;$i<=$n;$i+=2) $s=\"$s $i\";','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"\r\n}\"','\"$s\\n\"','','\"$n\\n\"'),(101,8,'$r=rand(6,26);\r\n$a=\"\";\r\n$rep=chr($r+65);\r\nfor($i=65;$i<=65+$r;$i++) $a=$a . chr($i);','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"\r\n}\"','\"$a\\n\"','','\"$rep\\n\"'),(102,8,'$n=rand(3,10);\r\n$m=rand(3,10);\r\n$c=chr(rand(33,126));\r\n$rep=\"\";\r\nfor($i=0;$i<$n;$i++){\r\n  for($j=0;$j<$m;$j++) $rep=\"$rep$c\";\r\n  $rep=\"$rep\\n\";\r\n}','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"}\r\n\"','\"$rep\\n\"','','\"$m $n $c\\n\"'),(103,8,'$h=rand(2,15);\r\n$t=\"\";\r\nfor($i=0;$i<$h-1;$i++) $t=$t.\"|\".str_repeat(\" \",$i).\"\\\\\\n\";\r\n$t=$t.\"|\".str_repeat(\"_\",$h-1).\"\\\\\\n\";','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"\r\n}\"','\"$t\"','','\"$h\\n\"'),(104,8,'','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"    for( int i=0; i<5; ++i){\r\n        cout << nb_pairs[i] << endl;\r\n    }\r\n}\"','\"2\\n4\\n6\\n8\\n10\\n\"','',''),(105,8,'$r=rand(3, 19);\r\n$rep=\"\";\r\nfor($i=1;$i<$r+1;$i++) $rep=$rep . strval($i*2) . \"\\n\";','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n=$r;\r\n\"','','\"    for( int i=0; i<n; ++i){\r\n        cout << nb_pairs[i] << endl;\r\n    }\r\n}\"','\"$rep\"','',''),(106,8,'$r=rand(5,20);\r\n$tab=\"\";\r\n$rep=\"\";\r\nfor($i=0;$i<$r;$i++){\r\n  $s=rand(-1000, 1000);\r\n  $tab=\"$s, $tab\";\r\n  $rep=\"$s\\n$rep\";\r\n}','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n=$r;\r\n    int entiers1[] = { \" . substr($tab,0,strlen($tab)-2) . \" };\r\n\"','','\"    for( int i=0; i<n; ++i){\r\n        cout << entiers2[i] << endl;\r\n    }\r\n}\"','$rep','',''),(107,8,'$r=rand(5,20);\r\n$tab=\"\";\r\n$rep=\"\";\r\nfor($i=0;$i<$r;$i++){\r\n  $s=rand(-1000, 1000);\r\n  $tab=\"$s, $tab\";\r\n  $rep=\"$rep\\n$s\";\r\n}\r\n$rep=substr($rep,1);','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n=$r;\r\n    int nombres[] = { \" . substr($tab,0,strlen($tab)-2) . \" };\r\n\"','','\"    for( int i=0; i<n; ++i){\r\n        cout << nombres[i] << endl;\r\n    }\r\n}\"','\"$rep\\n\"','',''),(108,8,'$r=rand(5,20);\r\n$tab=[];\r\n$tab1=[];\r\n$tab2=[];\r\n$rep=\"\";\r\n$rep1=\"\";\r\n$rep2=\"\";\r\nfor($i=0;$i<$r*2;$i++){\r\n  $s=rand(-1000, 1000);\r\n  $tab[]=$s;\r\n  if($i%2==0){\r\n     $tab1[i/2]=$s;\r\n     $rep1=\"$rep1, $s\";\r\n  }\r\n  else{\r\n     $tab2[i/2]=$s;\r\n     $rep2=\"$rep2, $s\";\r\n  }\r\n  $rep=\"$rep\\n$s\";\r\n}\r\n$rep=substr($rep,1);\r\n$rep1=substr($rep1,1);\r\n$rep2=substr($rep2,1);','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n=$r;\r\n    int nombres1[]={ $rep1 };\r\n    int nombres2[]={ $rep2 };\r\n\"','','\"    for( int i=0; i<n*2; ++i){\r\n        cout << nombres3[i] << endl;\r\n    }\r\n}\"','\"$rep\\n\"','',''),(109,8,'','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"    for( int i=0; i<5; ++i){\r\n        for( int j=0; j<5; ++j){\r\n            cout.width(3);\r\n            cout << multiples[i][j];\r\n        }\r\n        cout << endl;\r\n    }\r\n}\"','\"  1  2  3  4  5\r\n  2  4  6  8 10\r\n  3  6  9 12 15\r\n  4  8 12 16 20\r\n  5 10 15 20 25\r\n\"','',''),(110,8,'','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\"','','\"    for( int i=0; i<7; ++i){\r\n        for( int j=0; j<5; ++j){\r\n            cout.width(3);\r\n            cout << zeros[i][j];\r\n        }\r\n        cout << endl;\r\n    }\r\n}\"','\"  0  0  0  0  0\r\n  0  0  0  0  0\r\n  0  0  0  0  0\r\n  0  0  0  0  0\r\n  0  0  0  0  0\r\n  0  0  0  0  0\r\n  0  0  0  0  0\r\n\"','',''),(111,8,'$r=rand(0,1000);\r\n$n=rand(0,100);\r\n$m=rand(0,100);\r\nsrand($r);\r\n\r\n$c=0;\r\nfor($i=0;$i<$n*$m;$i++){\r\n    if(rand(0,getrandmax())%3==0){\r\n        $c++;\r\n    }\r\n}','','\"#include<iostream>\r\n#include<cstdlib>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    //initialise le générateur de nombres pseudoaléatoires\r\n    srand($r);\r\n\r\n    int n=$n;\r\n    int m=$m;\r\n    int entiers[n][m];\r\n    int compte=0;\r\n\r\n    for(int i=0;i<n;++i){\r\n        for(int j=0;j<m;++j){\r\n            entiers[i][j]=rand();\r\n        }\r\n    }\r\n\"','','\"\r\n    cout << compte << endl;\r\n}\"','\"$c\\n\"','',''),(112,8,'$n=rand(5,12);\r\n$m=rand(5,12);\r\n\r\n$t=\"\";\r\nfor($i=1;$i<$m+1;$i++){\r\n    for($j=0;$j<$n;$j++){\r\n        $t=$t . sprintf(\"% 3d\",$i+$j);\r\n    }\r\n    $t=\"$t\\n\";\r\n}','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n=$n;\r\n    int m=$m;\r\n\"','','\"    for( int i=0; i<m; ++i){\r\n        for( int j=0; j<n; ++j){\r\n            cout.width(3);\r\n            cout << diagonales[i][j];\r\n        }\r\n        cout << endl;\r\n    }\r\n}\"','$t','',''),(113,8,'$n=rand(5,12);\r\n$m=$n;\r\n\r\n$t=[];\r\n$tab=\"{\";\r\nfor($i=0;$i<$m;$i++){\r\n    for($j=0;$j<$n;$j++){\r\n        $r=rand(0,99);\r\n        $t[]=$r;\r\n        $tab=\"$tab$r, \";\r\n    }\r\n    $tab=substr($tab, 0, -2) . \"},\\n                     {\";\r\n}\r\n$tab=substr($tab, 0, -3);\r\n$rep=\"\";\r\nfor($i=0;$i<$m;$i++){\r\n    for($j=0;$j<$n;$j++){\r\n        $rep=$rep . sprintf(\"% 3d\",$t[$j*$n+$i]);\r\n    }\r\n    $rep=\"$rep\\n\";\r\n}\r\n','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    int n=$n;\r\n    int m=$m;\r\n\r\n    int entiers[$m][$n]={ $tab };\r\n\"','','\"    for( int i=0; i<m; ++i){\r\n        for( int j=0; j<n; ++j){\r\n            cout.width(3);\r\n            cout << entiers[i][j];\r\n        }\r\n        cout << endl;\r\n    }\r\n}\"','$rep','',''),(114,8,'$phrases=[\"Lorem ipsum dolor sit, amet consectetur adipiscing, elit vivamus.\",\"Cras erat ad pellentesque consequat, eleifend integer dapibus.\",\"Massa aliquet volutpat nisi congue, dictumst risus.\",\"Vestibulum arcu enim urna eu, elementum posuere phasellus.\",\"Mollis eu etiam curabitur tortor turpis, nascetur facilisi ornare.\",\"Penatibus magnis in nascetur, nibh aliquet.\",\"Semper orci pretium arcu morbi, convallis tempor.\",\"Pretium sem mi iaculis magnis, ullamcorper lacus.\",\"Suspendisse suscipit cum sociosqu purus, iaculis habitasse etiam.\",\"Ultrices dictum quisque urna diam, sem condimentum.\",\"Arcu sapien congue erat sagittis ultricies, aliquet etiam litora mi.\",\"Pulvinar quis arcu pharetra penatibus, at turpis aenean.\",\"Cubilia nunc egestas ultrices in, commodo porttitor feugiat.\",\"Cum turpis sapien id duis, metus at per, ligula leo dictumst.\",\"Duis vivamus mattis nisi metus, hac condimentum torquent.\",\"Auctor urna nunc lobortis varius vivamus, ac eros aptent.\",\"Varius potenti feugiat est auctor taciti mus, vehicula ornare libero ac.\",\"Tincidunt sed vestibulum habitasse sociosqu, litora massa.\",\"Et platea ante odio integer, magna torquent tellus.\",\"Venenatis arcu netus massa eu suscipit, non phasellus donec risus.\",\"Parturient varius lobortis vulputate ullamcorper, venenatis arcu dignissim.\",\"Tincidunt ante id ultricies sagittis eros, ullamcorper erat feugiat.\",\"Porttitor viverra rutrum fames nascetur, augue lectus.\",\"Inceptos vitae mi primis laoreet sapien, ultrices cubilia feugiat.\",\"In nulla facilisis duis per, penatibus ligula feugiat.\",\"Orci velit congue tempor augue, aenean praesent mauris.\",\"Inceptos tempus himenaeos nam est, rutrum augue.\",\"Tincidunt consequat natoque ullamcorper, porttitor ante nullam imperdiet, potenti ut.\",\"Morbi conubia praesent augue pellentesque, tincidunt condimentum.\",\"Himenaeos mattis consequat torquent urna, lobortis pretium.\",\"Quam quisque tempus hac facilisi est, ad habitant varius.\",\"Cras sapien nisi elementum nascetur mattis, egestas euismod porttitor.\",\"Sociosqu lectus quisque gravida vivamus, sed nec.\",\"Mi molestie dui quam penatibus commodo, magnis nibh sodales.\",\"Auctor nascetur magna rhoncus maecenas lacus, tincidunt orci sollicitudin.\",\"Non ridiculus taciti nulla blandit tempus, orci proin aenean penatibus.\",\"Diam dictum curae aliquet, ut blandit erat, vivamus eget.\",\"Libero torquent sollicitudin dictumst lacinia ullamcorper, tempus laoreet sapien.\",\"Mi nostra class fermentum urna ridiculus, sollicitudin euismod vel.\",\"Enim id sem leo inceptos volutpat, senectus mus hendrerit conubia.\",\"Rhoncus habitant inceptos taciti non augue, felis ultrices est.\",\"Mattis nam ornare viverra, nunc libero tristique enim, ac fames.\",\"Interdum etiam laoreet lacinia fames mollis, neque per nisl.\",\"Scelerisque metus porttitor fermentum platea, cras nulla duis.\",\"Dictumst lacinia velit maecenas viverra feugiat, ornare hac malesuada.\",\"Lacus potenti at lectus, ad odio.\",\"Dapibus quam mauris posuere, semper donec auctor, dis enim.\",\"Euismod in class, vehicula cubilia pellentesque, orci.\",\"Commodo habitant vel faucibus integer nascetur, vivamus praesent eget.\",\"Ullamcorper torquent purus cubilia aptent habitasse, fusce euismod mi.\",\"Viverra venenatis lacus fusce auctor, parturient suscipit vehicula.\",\"Nibh vivamus morbi natoque commodo vulputate, vehicula taciti magna.\",\"Rutrum faucibus habitasse pretium, sagittis conubia.\",\"Cursus ut dictumst placerat rhoncus, pellentesque nunc curabitur.\",\"Urna faucibus odio conubia eu, ut enim platea.\",\"Erat sem facilisis quisque malesuada quis, nunc egestas porttitor feugiat.\",\"Hendrerit penatibus aliquam morbi, nunc primis rutrum himenaeos, semper interdum.\",\"Sed penatibus fames augue auctor vitae, pretium magna ullamcorper molestie.\",\"Fusce euismod eu sem purus hac, lobortis metus quis.\",\"Congue nam magna risus, ornare senectus.\",\"Luctus inceptos proin turpis aenean sapien, rutrum fames accumsan.\",\"Vehicula vulputate ut tristique nec semper, gravida magna mus.\",\"Quam elementum vitae aenean sollicitudin, tristique arcu montes.\",\"Ridiculus convallis donec eros hendrerit, sed libero.\",\"Eleifend lectus laoreet bibendum in, fringilla inceptos.\",\"Habitasse scelerisque sagittis molestie magna neque, parturient commodo malesuada.\",\"Rutrum senectus nascetur faucibus integer, aptent aenean.\",\"Penatibus nam lobortis ac montes himenaeos, euismod sed habitasse.\",\"Sollicitudin fusce facilisi cras in condimentum, suscipit fames montes.\",\"Dictum litora ridiculus auctor dapibus mus, accumsan per augue.\",\"Imperdiet elementum primis fringilla orci posuere vel, nibh condimentum donec dignissim.\",\"Magna viverra neque malesuada lacinia fames, cum pulvinar erat.\",\"Ultrices mattis convallis nam quis, faucibus nascetur.\",\"Phasellus justo augue quam suscipit curae, parturient fusce commodo.\",\"Suscipit pulvinar ridiculus molestie est purus, pellentesque proin mattis laoreet.\",\"Class tellus ultricies litora vel, parturient feugiat.\",\"Tellus venenatis tempus massa curabitur feugiat, enim cursus arcu.\",\"Senectus nisl consequat enim, tortor bibendum.\",\"Suscipit curabitur maecenas senectus curae, gravida rutrum.\",\"Nascetur aenean venenatis orci duis, platea commodo.\",\"Consequat condimentum rutrum duis ad, donec cum turpis.\",\"Proin nullam fringilla malesuada vitae in, parturient montes nec.\",\"Posuere sodales facilisis leo tellus tempor commodo, sociosqu habitant feugiat erat.\",\"Quis habitant facilisi nisi hac turpis, magnis odio rhoncus rutrum.\",\"Quis est potenti suscipit pellentesque, non dis senectus.\",\"Gravida potenti sapien ullamcorper est luctus, commodo vehicula sem.\",\"Magna diam nibh congue ut, lacus feugiat.\",\"Ullamcorper nam tellus curabitur massa porta, ultrices quam vivamus.\",\"Phasellus fringilla auctor sociosqu cubilia ornare dapibus, himenaeos egestas vehicula metus.\",\"Purus facilisi torquent tristique mus, habitasse mollis libero.\",\"Aliquam eleifend dis ullamcorper tortor, eros placerat accumsan.\",\"Phasellus dapibus enim felis tortor inceptos, neque in ac nullam.\",\"Pharetra blandit et etiam lacinia nisi, nec felis vel vivamus.\",\"Elementum dis porttitor scelerisque phasellus lobortis, quis congue risus.\",\"Leo auctor eu odio ut, feugiat nulla.\",\"Eros eget cursus dignissim blandit, taciti velit.\",\"Penatibus montes quisque odio, habitant himenaeos.\",\"Rhoncus nisl egestas et curabitur, conubia interdum curae.\",\"Libero tortor fusce nec cubilia, tellus scelerisque condimentum.\"];\r\n\r\n$r=rand(0,98);\r\n$s=rand(0,98);\r\n$t=rand(0,98);\r\n\r\n$phr=[$phrases[$r],$phrases[$s],$phrases[$t]];\r\n$ent=\"$phr[0]\\n$phr[1]\\n$phr[2]\\n\";\r\nsort($phr);','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    char entrees[3][200];\r\n\r\n    for(int i=0;i<3;i++){\r\n        cin.getline(entrees[i], 200);\r\n    }\r\n\r\n\"','','\"\r\n    for(int i=0;i<3;i++){\r\n        cout << entrees[i] << endl;\r\n    }\r\n}\"','\"$phr[0]\\n$phr[1]\\n$phr[2]\\n\"','','$ent'),(115,8,'$phrases=[\"Lorem ipsum dolor sit, amet consectetur adipiscing, elit vivamus.\",\"Cras erat ad pellentesque consequat, eleifend integer dapibus.\",\"Massa aliquet volutpat nisi congue, dictumst risus.\",\"Vestibulum arcu enim urna eu, elementum posuere phasellus.\",\"Mollis eu etiam curabitur tortor turpis, nascetur facilisi ornare.\",\"Penatibus magnis in nascetur, nibh aliquet.\",\"Semper orci pretium arcu morbi, convallis tempor.\",\"Pretium sem mi iaculis magnis, ullamcorper lacus.\",\"Suspendisse suscipit cum sociosqu purus, iaculis habitasse etiam.\",\"Ultrices dictum quisque urna diam, sem condimentum.\",\"Arcu sapien congue erat sagittis ultricies, aliquet etiam litora mi.\",\"Pulvinar quis arcu pharetra penatibus, at turpis aenean.\",\"Cubilia nunc egestas ultrices in, commodo porttitor feugiat.\",\"Cum turpis sapien id duis, metus at per, ligula leo dictumst.\",\"Duis vivamus mattis nisi metus, hac condimentum torquent.\",\"Auctor urna nunc lobortis varius vivamus, ac eros aptent.\",\"Varius potenti feugiat est auctor taciti mus, vehicula ornare libero ac.\",\"Tincidunt sed vestibulum habitasse sociosqu, litora massa.\",\"Et platea ante odio integer, magna torquent tellus.\",\"Venenatis arcu netus massa eu suscipit, non phasellus donec risus.\",\"Parturient varius lobortis vulputate ullamcorper, venenatis arcu dignissim.\",\"Tincidunt ante id ultricies sagittis eros, ullamcorper erat feugiat.\",\"Porttitor viverra rutrum fames nascetur, augue lectus.\",\"Inceptos vitae mi primis laoreet sapien, ultrices cubilia feugiat.\",\"In nulla facilisis duis per, penatibus ligula feugiat.\",\"Orci velit congue tempor augue, aenean praesent mauris.\",\"Inceptos tempus himenaeos nam est, rutrum augue.\",\"Tincidunt consequat natoque ullamcorper, porttitor ante nullam imperdiet, potenti ut.\",\"Morbi conubia praesent augue pellentesque, tincidunt condimentum.\",\"Himenaeos mattis consequat torquent urna, lobortis pretium.\",\"Quam quisque tempus hac facilisi est, ad habitant varius.\",\"Cras sapien nisi elementum nascetur mattis, egestas euismod porttitor.\",\"Sociosqu lectus quisque gravida vivamus, sed nec.\",\"Mi molestie dui quam penatibus commodo, magnis nibh sodales.\",\"Auctor nascetur magna rhoncus maecenas lacus, tincidunt orci sollicitudin.\",\"Non ridiculus taciti nulla blandit tempus, orci proin aenean penatibus.\",\"Diam dictum curae aliquet, ut blandit erat, vivamus eget.\",\"Libero torquent sollicitudin dictumst lacinia ullamcorper, tempus laoreet sapien.\",\"Mi nostra class fermentum urna ridiculus, sollicitudin euismod vel.\",\"Enim id sem leo inceptos volutpat, senectus mus hendrerit conubia.\",\"Rhoncus habitant inceptos taciti non augue, felis ultrices est.\",\"Mattis nam ornare viverra, nunc libero tristique enim, ac fames.\",\"Interdum etiam laoreet lacinia fames mollis, neque per nisl.\",\"Scelerisque metus porttitor fermentum platea, cras nulla duis.\",\"Dictumst lacinia velit maecenas viverra feugiat, ornare hac malesuada.\",\"Lacus potenti at lectus, ad odio.\",\"Dapibus quam mauris posuere, semper donec auctor, dis enim.\",\"Euismod in class, vehicula cubilia pellentesque, orci.\",\"Commodo habitant vel faucibus integer nascetur, vivamus praesent eget.\",\"Ullamcorper torquent purus cubilia aptent habitasse, fusce euismod mi.\",\"Viverra venenatis lacus fusce auctor, parturient suscipit vehicula.\",\"Nibh vivamus morbi natoque commodo vulputate, vehicula taciti magna.\",\"Rutrum faucibus habitasse pretium, sagittis conubia.\",\"Cursus ut dictumst placerat rhoncus, pellentesque nunc curabitur.\",\"Urna faucibus odio conubia eu, ut enim platea.\",\"Erat sem facilisis quisque malesuada quis, nunc egestas porttitor feugiat.\",\"Hendrerit penatibus aliquam morbi, nunc primis rutrum himenaeos, semper interdum.\",\"Sed penatibus fames augue auctor vitae, pretium magna ullamcorper molestie.\",\"Fusce euismod eu sem purus hac, lobortis metus quis.\",\"Congue nam magna risus, ornare senectus.\",\"Luctus inceptos proin turpis aenean sapien, rutrum fames accumsan.\",\"Vehicula vulputate ut tristique nec semper, gravida magna mus.\",\"Quam elementum vitae aenean sollicitudin, tristique arcu montes.\",\"Ridiculus convallis donec eros hendrerit, sed libero.\",\"Eleifend lectus laoreet bibendum in, fringilla inceptos.\",\"Habitasse scelerisque sagittis molestie magna neque, parturient commodo malesuada.\",\"Rutrum senectus nascetur faucibus integer, aptent aenean.\",\"Penatibus nam lobortis ac montes himenaeos, euismod sed habitasse.\",\"Sollicitudin fusce facilisi cras in condimentum, suscipit fames montes.\",\"Dictum litora ridiculus auctor dapibus mus, accumsan per augue.\",\"Imperdiet elementum primis fringilla orci posuere vel, nibh condimentum donec dignissim.\",\"Magna viverra neque malesuada lacinia fames, cum pulvinar erat.\",\"Ultrices mattis convallis nam quis, faucibus nascetur.\",\"Phasellus justo augue quam suscipit curae, parturient fusce commodo.\",\"Suscipit pulvinar ridiculus molestie est purus, pellentesque proin mattis laoreet.\",\"Class tellus ultricies litora vel, parturient feugiat.\",\"Tellus venenatis tempus massa curabitur feugiat, enim cursus arcu.\",\"Senectus nisl consequat enim, tortor bibendum.\",\"Suscipit curabitur maecenas senectus curae, gravida rutrum.\",\"Nascetur aenean venenatis orci duis, platea commodo.\",\"Consequat condimentum rutrum duis ad, donec cum turpis.\",\"Proin nullam fringilla malesuada vitae in, parturient montes nec.\",\"Posuere sodales facilisis leo tellus tempor commodo, sociosqu habitant feugiat erat.\",\"Quis habitant facilisi nisi hac turpis, magnis odio rhoncus rutrum.\",\"Quis est potenti suscipit pellentesque, non dis senectus.\",\"Gravida potenti sapien ullamcorper est luctus, commodo vehicula sem.\",\"Magna diam nibh congue ut, lacus feugiat.\",\"Ullamcorper nam tellus curabitur massa porta, ultrices quam vivamus.\",\"Phasellus fringilla auctor sociosqu cubilia ornare dapibus, himenaeos egestas vehicula metus.\",\"Purus facilisi torquent tristique mus, habitasse mollis libero.\",\"Aliquam eleifend dis ullamcorper tortor, eros placerat accumsan.\",\"Phasellus dapibus enim felis tortor inceptos, neque in ac nullam.\",\"Pharetra blandit et etiam lacinia nisi, nec felis vel vivamus.\",\"Elementum dis porttitor scelerisque phasellus lobortis, quis congue risus.\",\"Leo auctor eu odio ut, feugiat nulla.\",\"Eros eget cursus dignissim blandit, taciti velit.\",\"Penatibus montes quisque odio, habitant himenaeos.\",\"Rhoncus nisl egestas et curabitur, conubia interdum curae.\",\"Libero tortor fusce nec cubilia, tellus scelerisque condimentum.\"];\r\n\r\n$phr=[];\r\n$ent=\"\";\r\n$rep=\"\";\r\n$r=rand(4,14);\r\nfor($i=0;$i<$r;$i++){\r\n    $phr[]=$phrases[$i];\r\n    $ent=\"$ent$phr[$i]\\n\";\r\n}\r\nsort($phr);\r\nfor($i=0;$i<$r;$i++){\r\n    $rep=\"$rep$phr[$i]\\n\";\r\n}','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    char entree[200];\r\n    char entrees[15][200];\r\n    int n_entrees=0;\r\n\r\n\r\n    do{\r\n        cin.getline(entree, 200);\r\n        strcpy(entrees[n_entrees++], entree);\r\n    }while(strlen(entree)>0);\r\n\r\n\"','','\"\r\n    for(int i=0;i<n_entrees-1;i++){\r\n        cout << entrees[i] << endl;\r\n    }\r\n}\"','\"$rep\"','','\"$ent\\n\"'),(116,8,'$phrases=[\"Lorem ipsum dolor sit, amet consectetur adipiscing, elit vivamus.\",\"Cras erat ad pellentesque consequat, eleifend integer dapibus.\",\"Massa aliquet volutpat nisi congue, dictumst risus.\",\"Vestibulum arcu enim urna eu, elementum posuere phasellus.\",\"Mollis eu etiam curabitur tortor turpis, nascetur facilisi ornare.\",\"Penatibus magnis in nascetur, nibh aliquet.\",\"Semper orci pretium arcu morbi, convallis tempor.\",\"Pretium sem mi iaculis magnis, ullamcorper lacus.\",\"Suspendisse suscipit cum sociosqu purus, iaculis habitasse etiam.\",\"Ultrices dictum quisque urna diam, sem condimentum.\",\"Arcu sapien congue erat sagittis ultricies, aliquet etiam litora mi.\",\"Pulvinar quis arcu pharetra penatibus, at turpis aenean.\",\"Cubilia nunc egestas ultrices in, commodo porttitor feugiat.\",\"Cum turpis sapien id duis, metus at per, ligula leo dictumst.\",\"Duis vivamus mattis nisi metus, hac condimentum torquent.\",\"Auctor urna nunc lobortis varius vivamus, ac eros aptent.\",\"Varius potenti feugiat est auctor taciti mus, vehicula ornare libero ac.\",\"Tincidunt sed vestibulum habitasse sociosqu, litora massa.\",\"Et platea ante odio integer, magna torquent tellus.\",\"Venenatis arcu netus massa eu suscipit, non phasellus donec risus.\",\"Parturient varius lobortis vulputate ullamcorper, venenatis arcu dignissim.\",\"Tincidunt ante id ultricies sagittis eros, ullamcorper erat feugiat.\",\"Porttitor viverra rutrum fames nascetur, augue lectus.\",\"Inceptos vitae mi primis laoreet sapien, ultrices cubilia feugiat.\",\"In nulla facilisis duis per, penatibus ligula feugiat.\",\"Orci velit congue tempor augue, aenean praesent mauris.\",\"Inceptos tempus himenaeos nam est, rutrum augue.\",\"Tincidunt consequat natoque ullamcorper, porttitor ante nullam imperdiet, potenti ut.\",\"Morbi conubia praesent augue pellentesque, tincidunt condimentum.\",\"Himenaeos mattis consequat torquent urna, lobortis pretium.\",\"Quam quisque tempus hac facilisi est, ad habitant varius.\",\"Cras sapien nisi elementum nascetur mattis, egestas euismod porttitor.\",\"Sociosqu lectus quisque gravida vivamus, sed nec.\",\"Mi molestie dui quam penatibus commodo, magnis nibh sodales.\",\"Auctor nascetur magna rhoncus maecenas lacus, tincidunt orci sollicitudin.\",\"Non ridiculus taciti nulla blandit tempus, orci proin aenean penatibus.\",\"Diam dictum curae aliquet, ut blandit erat, vivamus eget.\",\"Libero torquent sollicitudin dictumst lacinia ullamcorper, tempus laoreet sapien.\",\"Mi nostra class fermentum urna ridiculus, sollicitudin euismod vel.\",\"Enim id sem leo inceptos volutpat, senectus mus hendrerit conubia.\",\"Rhoncus habitant inceptos taciti non augue, felis ultrices est.\",\"Mattis nam ornare viverra, nunc libero tristique enim, ac fames.\",\"Interdum etiam laoreet lacinia fames mollis, neque per nisl.\",\"Scelerisque metus porttitor fermentum platea, cras nulla duis.\",\"Dictumst lacinia velit maecenas viverra feugiat, ornare hac malesuada.\",\"Lacus potenti at lectus, ad odio.\",\"Dapibus quam mauris posuere, semper donec auctor, dis enim.\",\"Euismod in class, vehicula cubilia pellentesque, orci.\",\"Commodo habitant vel faucibus integer nascetur, vivamus praesent eget.\",\"Ullamcorper torquent purus cubilia aptent habitasse, fusce euismod mi.\",\"Viverra venenatis lacus fusce auctor, parturient suscipit vehicula.\",\"Nibh vivamus morbi natoque commodo vulputate, vehicula taciti magna.\",\"Rutrum faucibus habitasse pretium, sagittis conubia.\",\"Cursus ut dictumst placerat rhoncus, pellentesque nunc curabitur.\",\"Urna faucibus odio conubia eu, ut enim platea.\",\"Erat sem facilisis quisque malesuada quis, nunc egestas porttitor feugiat.\",\"Hendrerit penatibus aliquam morbi, nunc primis rutrum himenaeos, semper interdum.\",\"Sed penatibus fames augue auctor vitae, pretium magna ullamcorper molestie.\",\"Fusce euismod eu sem purus hac, lobortis metus quis.\",\"Congue nam magna risus, ornare senectus.\",\"Luctus inceptos proin turpis aenean sapien, rutrum fames accumsan.\",\"Vehicula vulputate ut tristique nec semper, gravida magna mus.\",\"Quam elementum vitae aenean sollicitudin, tristique arcu montes.\",\"Ridiculus convallis donec eros hendrerit, sed libero.\",\"Eleifend lectus laoreet bibendum in, fringilla inceptos.\",\"Habitasse scelerisque sagittis molestie magna neque, parturient commodo malesuada.\",\"Rutrum senectus nascetur faucibus integer, aptent aenean.\",\"Penatibus nam lobortis ac montes himenaeos, euismod sed habitasse.\",\"Sollicitudin fusce facilisi cras in condimentum, suscipit fames montes.\",\"Dictum litora ridiculus auctor dapibus mus, accumsan per augue.\",\"Imperdiet elementum primis fringilla orci posuere vel, nibh condimentum donec dignissim.\",\"Magna viverra neque malesuada lacinia fames, cum pulvinar erat.\",\"Ultrices mattis convallis nam quis, faucibus nascetur.\",\"Phasellus justo augue quam suscipit curae, parturient fusce commodo.\",\"Suscipit pulvinar ridiculus molestie est purus, pellentesque proin mattis laoreet.\",\"Class tellus ultricies litora vel, parturient feugiat.\",\"Tellus venenatis tempus massa curabitur feugiat, enim cursus arcu.\",\"Senectus nisl consequat enim, tortor bibendum.\",\"Suscipit curabitur maecenas senectus curae, gravida rutrum.\",\"Nascetur aenean venenatis orci duis, platea commodo.\",\"Consequat condimentum rutrum duis ad, donec cum turpis.\",\"Proin nullam fringilla malesuada vitae in, parturient montes nec.\",\"Posuere sodales facilisis leo tellus tempor commodo, sociosqu habitant feugiat erat.\",\"Quis habitant facilisi nisi hac turpis, magnis odio rhoncus rutrum.\",\"Quis est potenti suscipit pellentesque, non dis senectus.\",\"Gravida potenti sapien ullamcorper est luctus, commodo vehicula sem.\",\"Magna diam nibh congue ut, lacus feugiat.\",\"Ullamcorper nam tellus curabitur massa porta, ultrices quam vivamus.\",\"Phasellus fringilla auctor sociosqu cubilia ornare dapibus, himenaeos egestas vehicula metus.\",\"Purus facilisi torquent tristique mus, habitasse mollis libero.\",\"Aliquam eleifend dis ullamcorper tortor, eros placerat accumsan.\",\"Phasellus dapibus enim felis tortor inceptos, neque in ac nullam.\",\"Pharetra blandit et etiam lacinia nisi, nec felis vel vivamus.\",\"Elementum dis porttitor scelerisque phasellus lobortis, quis congue risus.\",\"Leo auctor eu odio ut, feugiat nulla.\",\"Eros eget cursus dignissim blandit, taciti velit.\",\"Penatibus montes quisque odio, habitant himenaeos.\",\"Rhoncus nisl egestas et curabitur, conubia interdum curae.\",\"Libero tortor fusce nec cubilia, tellus scelerisque condimentum.\"];\r\n\r\n$phr=[];\r\n$ent=\"\";\r\n$rep=\"\";\r\n$r=rand(4,14);\r\n\r\nfor($i=0;$i<$r;$i++){\r\n    $phr[]=$phrases[rand(0,98)];\r\n}\r\nsort($phr);\r\n\r\nfor($i=0;$i<$r;$i++){\r\n    $rep=\"$rep\" . sprintf(\"%03d-\",rand(0,999)) . \"$phr[$i]\\n\";\r\n}\r\n\r\n$ent=explode(\"\\n\", substr($rep,0,-1));\r\nshuffle($ent);\r\n$ent=implode(\"\\n\", $ent);','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    char entree[200];\r\n    char entrees[15][200];\r\n    int n_entrees=0;\r\n\r\n\r\n    do{\r\n        cin.getline(entree, 200);\r\n        strcpy(entrees[n_entrees++], entree);\r\n    }while(strlen(entree)>0);\r\n\r\n\"','','\"\r\n    for(int i=0;i<n_entrees-1;i++){\r\n        cout << entrees[i] << endl;\r\n    }\r\n}\"','\"$rep\"','','\"$ent\\n\"'),(117,8,'$r=rand(8,32);\r\n$b=\"\";\r\nfor($i=0;$i<$r;$i++){\r\n    $b=$b . (rand(0,1)?\"0\":\"1\");\r\n}\r\n$rep=bindec($b);','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n\"','int bin2int(const char* binaire){\r\n\r\n}','\"int main(){\r\n    char entree[33];\r\n\r\n    cin.getline(entree, 33);\r\n    cout << bin2int(entree) << endl;\r\n}\"','\"$rep\\n\"','','\"$b\\n\"'),(118,8,'$phrases=[\"Lorem ipsum dolor sit, amet consectetur adipiscing, elit vivamus.\",\"Cras erat ad pellentesque consequat, eleifend integer dapibus.\",\"Massa aliquet volutpat nisi congue, dictumst risus.\",\"Vestibulum arcu enim urna eu, elementum posuere phasellus.\",\"Mollis eu etiam curabitur tortor turpis, nascetur facilisi ornare.\",\"Penatibus magnis in nascetur, nibh aliquet.\",\"Semper orci pretium arcu morbi, convallis tempor.\",\"Pretium sem mi iaculis magnis, ullamcorper lacus.\",\"Suspendisse suscipit cum sociosqu purus, iaculis habitasse etiam.\",\"Ultrices dictum quisque urna diam, sem condimentum.\",\"Arcu sapien congue erat sagittis ultricies, aliquet etiam litora mi.\",\"Pulvinar quis arcu pharetra penatibus, at turpis aenean.\",\"Cubilia nunc egestas ultrices in, commodo porttitor feugiat.\",\"Cum turpis sapien id duis, metus at per, ligula leo dictumst.\",\"Duis vivamus mattis nisi metus, hac condimentum torquent.\",\"Auctor urna nunc lobortis varius vivamus, ac eros aptent.\",\"Varius potenti feugiat est auctor taciti mus, vehicula ornare libero ac.\",\"Tincidunt sed vestibulum habitasse sociosqu, litora massa.\",\"Et platea ante odio integer, magna torquent tellus.\",\"Venenatis arcu netus massa eu suscipit, non phasellus donec risus.\",\"Parturient varius lobortis vulputate ullamcorper, venenatis arcu dignissim.\",\"Tincidunt ante id ultricies sagittis eros, ullamcorper erat feugiat.\",\"Porttitor viverra rutrum fames nascetur, augue lectus.\",\"Inceptos vitae mi primis laoreet sapien, ultrices cubilia feugiat.\",\"In nulla facilisis duis per, penatibus ligula feugiat.\",\"Orci velit congue tempor augue, aenean praesent mauris.\",\"Inceptos tempus himenaeos nam est, rutrum augue.\",\"Tincidunt consequat natoque ullamcorper, porttitor ante nullam imperdiet, potenti ut.\",\"Morbi conubia praesent augue pellentesque, tincidunt condimentum.\",\"Himenaeos mattis consequat torquent urna, lobortis pretium.\",\"Quam quisque tempus hac facilisi est, ad habitant varius.\",\"Cras sapien nisi elementum nascetur mattis, egestas euismod porttitor.\",\"Sociosqu lectus quisque gravida vivamus, sed nec.\",\"Mi molestie dui quam penatibus commodo, magnis nibh sodales.\",\"Auctor nascetur magna rhoncus maecenas lacus, tincidunt orci sollicitudin.\",\"Non ridiculus taciti nulla blandit tempus, orci proin aenean penatibus.\",\"Diam dictum curae aliquet, ut blandit erat, vivamus eget.\",\"Libero torquent sollicitudin dictumst lacinia ullamcorper, tempus laoreet sapien.\",\"Mi nostra class fermentum urna ridiculus, sollicitudin euismod vel.\",\"Enim id sem leo inceptos volutpat, senectus mus hendrerit conubia.\",\"Rhoncus habitant inceptos taciti non augue, felis ultrices est.\",\"Mattis nam ornare viverra, nunc libero tristique enim, ac fames.\",\"Interdum etiam laoreet lacinia fames mollis, neque per nisl.\",\"Scelerisque metus porttitor fermentum platea, cras nulla duis.\",\"Dictumst lacinia velit maecenas viverra feugiat, ornare hac malesuada.\",\"Lacus potenti at lectus, ad odio.\",\"Dapibus quam mauris posuere, semper donec auctor, dis enim.\",\"Euismod in class, vehicula cubilia pellentesque, orci.\",\"Commodo habitant vel faucibus integer nascetur, vivamus praesent eget.\",\"Ullamcorper torquent purus cubilia aptent habitasse, fusce euismod mi.\",\"Viverra venenatis lacus fusce auctor, parturient suscipit vehicula.\",\"Nibh vivamus morbi natoque commodo vulputate, vehicula taciti magna.\",\"Rutrum faucibus habitasse pretium, sagittis conubia.\",\"Cursus ut dictumst placerat rhoncus, pellentesque nunc curabitur.\",\"Urna faucibus odio conubia eu, ut enim platea.\",\"Erat sem facilisis quisque malesuada quis, nunc egestas porttitor feugiat.\",\"Hendrerit penatibus aliquam morbi, nunc primis rutrum himenaeos, semper interdum.\",\"Sed penatibus fames augue auctor vitae, pretium magna ullamcorper molestie.\",\"Fusce euismod eu sem purus hac, lobortis metus quis.\",\"Congue nam magna risus, ornare senectus.\",\"Luctus inceptos proin turpis aenean sapien, rutrum fames accumsan.\",\"Vehicula vulputate ut tristique nec semper, gravida magna mus.\",\"Quam elementum vitae aenean sollicitudin, tristique arcu montes.\",\"Ridiculus convallis donec eros hendrerit, sed libero.\",\"Eleifend lectus laoreet bibendum in, fringilla inceptos.\",\"Habitasse scelerisque sagittis molestie magna neque, parturient commodo malesuada.\",\"Rutrum senectus nascetur faucibus integer, aptent aenean.\",\"Penatibus nam lobortis ac montes himenaeos, euismod sed habitasse.\",\"Sollicitudin fusce facilisi cras in condimentum, suscipit fames montes.\",\"Dictum litora ridiculus auctor dapibus mus, accumsan per augue.\",\"Imperdiet elementum primis fringilla orci posuere vel, nibh condimentum donec dignissim.\",\"Magna viverra neque malesuada lacinia fames, cum pulvinar erat.\",\"Ultrices mattis convallis nam quis, faucibus nascetur.\",\"Phasellus justo augue quam suscipit curae, parturient fusce commodo.\",\"Suscipit pulvinar ridiculus molestie est purus, pellentesque proin mattis laoreet.\",\"Class tellus ultricies litora vel, parturient feugiat.\",\"Tellus venenatis tempus massa curabitur feugiat, enim cursus arcu.\",\"Senectus nisl consequat enim, tortor bibendum.\",\"Suscipit curabitur maecenas senectus curae, gravida rutrum.\",\"Nascetur aenean venenatis orci duis, platea commodo.\",\"Consequat condimentum rutrum duis ad, donec cum turpis.\",\"Proin nullam fringilla malesuada vitae in, parturient montes nec.\",\"Posuere sodales facilisis leo tellus tempor commodo, sociosqu habitant feugiat erat.\",\"Quis habitant facilisi nisi hac turpis, magnis odio rhoncus rutrum.\",\"Quis est potenti suscipit pellentesque, non dis senectus.\",\"Gravida potenti sapien ullamcorper est luctus, commodo vehicula sem.\",\"Magna diam nibh congue ut, lacus feugiat.\",\"Ullamcorper nam tellus curabitur massa porta, ultrices quam vivamus.\",\"Phasellus fringilla auctor sociosqu cubilia ornare dapibus, himenaeos egestas vehicula metus.\",\"Purus facilisi torquent tristique mus, habitasse mollis libero.\",\"Aliquam eleifend dis ullamcorper tortor, eros placerat accumsan.\",\"Phasellus dapibus enim felis tortor inceptos, neque in ac nullam.\",\"Pharetra blandit et etiam lacinia nisi, nec felis vel vivamus.\",\"Elementum dis porttitor scelerisque phasellus lobortis, quis congue risus.\",\"Leo auctor eu odio ut, feugiat nulla.\",\"Eros eget cursus dignissim blandit, taciti velit.\",\"Penatibus montes quisque odio, habitant himenaeos.\",\"Rhoncus nisl egestas et curabitur, conubia interdum curae.\",\"Libero tortor fusce nec cubilia, tellus scelerisque condimentum.\"];\r\n\r\n$r=rand(0,98);\r\n$ent=$phrases[$r];\r\n$rep=strrev($ent);','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n\"','char* inverser(char* destination, const char* source){\r\n\r\n}','\"int main(){\r\n    char entree[200];\r\n    char sortie[200];\r\n\r\n    cin.getline(entree, 200);\r\n    cout << inverser(sortie, entree) << endl;\r\n}\"','\"$rep\\n\"','','\"$ent\\n\"'),(119,-1,'$ent=rand(0, PHP_INT_MAX);\r\n$rep=decbin($ent);','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n\"','','\"int main(){\r\n    int entree;\r\n    char sortie[33];\r\n\r\n    cin >> entree;\r\n    cout << int2bin(sortie, entree) << endl;\r\n}\"','\"$rep\\n\"','','\"$ent\\n\"'),(120,8,'$r=rand(10,50);\r\n\r\n$tab=\"\";\r\nfor($i=0;$i<$r;$i++){\r\n  $n=rand(-10000,10000)/100;\r\n  $tab=\"$tab, \". sprintf(\"%.3F\", $n);\r\n  $somme+=$n;\r\n}\r\n\r\n$tab=substr($tab,1);\r\n\r\n$rep=$somme/$r;','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n\"','','\"int main(){\r\n    float entrees[]={ $tab };\r\n    int n=$r;\r\n\r\n    cout.precision(3);\r\n    cout << fixed << moyenne(entrees,n) << endl;\r\n}\"','sprintf(\"%.3F\\n\", $rep)','',''),(121,8,'','\"#include<typeinfo>\r\n\"','\"#include<iostream>\r\n#include<string>\r\n\r\nusing namespace std;\r\n\r\nvoid affichage(string& chaine){\r\n    cout << chaine << endl;\r\n}\r\n\r\nint main(){\r\n\"','','\"\r\n    affichage(bonjour);\r\n}\"','\"Bonjour le monde!\r\n\"','',''),(122,8,'','','\"\r\n#include<iostream>\r\n#include<string>\r\n\r\nusing namespace std;\r\n\r\nvoid affichage(const string* chaine){\r\n    cout << *chaine << endl;\r\n}\r\n\r\nint main(){\r\n    string* bonjour;\"','','\"    affichage(bonjour);\r\n    delete bonjour;\r\n}\"','\"Bonjour le monde!\r\n\"','',''),(123,8,'','','\"\r\n#include<iostream>\r\n#include<string>\r\n\r\nusing namespace std;\r\n\r\nvoid affichage(const string& chaine){\r\n    cout << chaine << endl;\r\n}\r\n\r\nint main(){\r\n    string* bonjour;\"','','\"    delete bonjour;\r\n}\"','\"Rebonjour le monde!\r\n\"','',''),(124,8,'$p=str_pad(\"Bravo!\", rand(5,20), \">\", STR_PAD_BOTH);','','\"\r\n#include<iostream>\r\n#include<string>\r\n\r\nusing namespace std;\r\n\r\nint longueur(const string& chaine){\"','','\"}\r\n\r\nint main(){\r\n    string chaine(\\\"\". $p . \"\\\");\r\n\r\n    cout << \\\"Longueur = \\\" << longueur(chaine) << endl;\r\n}\"','\"Longueur = \" . strlen($p) .\"\r\n\"','',''),(125,8,'$characters = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\';\r\n$p1 = \'\';\r\n$p2=\'\';\r\n $max = strlen($characters) - 1;\r\n for ($i = 0; $i < rand(10,50); $i++) {\r\n      $p1 .= $characters[mt_rand(0, $max)];\r\n      $p2 .= $characters[mt_rand(0, $max)];\r\n }\r\n\r\nif($p1>=$p2){\r\n  $pr=\"001-\";\r\n}\r\nelse{\r\n  $pr=\"002-\";\r\n}\r\n','','\"\r\n#include<iostream>\r\n#include<string>\r\n\r\nusing namespace std;\r\n\r\nstring const &strmax(const string& chaine1, const string& chaine2){\"','','\"}\r\n\r\nint main(){\r\n    string chaine1(\\\"001-\". $p1 . \"\\\");\r\n    string chaine2(\\\"002-\". $p2 . \"\\\");\r\n\r\n    cout << strmax(chaine1, chaine2) << endl;\r\n}\"','\"$pr\". max($p1,$p2) . \"\r\n\";','',''),(126,8,'','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\n\"','//Déclarez votre classe ici','\"int main(){\r\n    Date demain;\r\n\r\n    demain.annee=\" . getdate(time()+86400)[\'year\'] . \";\r\n    demain.mois=\"  . getdate(time()+86400)[\'mon\'] . \";\r\n    demain.jour=\"  . getdate(time()+86400)[\'mday\'] . \";\r\n\r\n    cout << \\\"Demain sera \\\" << demain.annee << \\\"/\\\" << demain.mois << \\\"/\\\" << demain.jour << endl;\r\n\r\n}\r\n\"','\"Demain sera \" . date(\'Y/m/d\',time()+86400) . \"\r\n\"','',''),(127,8,'','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nclass Date{\r\n    public:\r\n    short _annee;\r\n    short _mois;\r\n    short _jour;\r\n\r\n    short get_annee();\r\n    short get_mois();\r\n    short get_jour();\r\n};\r\n\r\n\"','//Implémentez les méthodes ici','\"int main(){\r\n    Date demain;\r\n\r\n    demain._annee=\" . getdate(time()+86400)[\'year\'] . \";\r\n    demain._mois=\"  . getdate(time()+86400)[\'mon\'] . \";\r\n    demain._jour=\"  . getdate(time()+86400)[\'mday\'] . \";\r\n\r\n    cout << \\\"Demain sera \\\" << demain.get_annee() << \\\"/\\\" << demain.get_mois() << \\\"/\\\" << demain.get_jour() << endl;\r\n\r\n}\r\n\"','\"Demain sera \" . date(\'Y/m/d\',time()+86400) . \"\r\n\"','',''),(128,8,'','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nclass Date{\r\n    short _annee;\r\n    short _mois;\r\n    short _jour;\r\n\r\npublic:\r\n    short get_annee(){ return _annee; }\r\n    short get_mois(){ return _mois; }\r\n    short get_jour(){ return _jour; }\r\n\r\n\"','','\"\r\n\r\nint main(){\r\n    Date demain;\r\n\r\n    demain.set_annee(\" . getdate(time()+86400)[\'year\'] . \");\r\n    demain.set_mois(\"  . getdate(time()+86400)[\'mon\'] . \");\r\n    demain.set_jour(\"  . getdate(time()+86400)[\'mday\'] . \");\r\n\r\n    cout << \\\"Demain sera \\\" << demain.get_annee() << \\\"/\\\" << demain.get_mois() << \\\"/\\\" << demain.get_jour() << endl;\r\n\r\n}\r\n\"','\"Demain sera \" . date(\'Y/m/d\',time()+86400) . \"\r\n\"','',''),(129,8,'','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nclass Date{\r\n    short _annee;\r\n    short _mois;\r\n    short _jour;\r\n\r\npublic:\r\n    short get_annee(){ return _annee; }\r\n    short get_mois(){ return _mois; }\r\n    short get_jour(){ return _jour; }\r\n\r\n    short set_annee(short une_annee){\r\n        _annee=une_annee;\r\n    }\r\n    short set_mois(short un_mois){\r\n        _mois=un_mois;\r\n    }\r\n    short set_jour(short un_jour){\r\n        _jour=un_jour;\r\n    }\r\n\"','','\"\r\n\r\nint main(){\r\n    Date demain(\" . getdate(time()+86400)[\'year\'] . \",\"  . getdate(time()+86400)[\'mon\'] . \",\"  . getdate(time()+86400)[\'mday\'] . \");\r\n\r\n    cout << \\\"Demain sera \\\" << demain.get_annee() << \\\"/\\\" << demain.get_mois() << \\\"/\\\" << demain.get_jour() << endl;\r\n\r\n}\r\n\"','\"Demain sera \" . date(\'Y/m/d\',time()+86400) . \"\r\n\"','',''),(130,8,'','','\"#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nclass Date{\r\n    short _annee;\r\n    short _mois;\r\n    short _jour;\r\n\r\npublic:\r\n    short get_annee(){ return _annee; }\r\n    short get_mois(){ return _mois; }\r\n    short get_jour(){ return _jour; }\r\n\r\n    Date(short une_annee, short un_mois, short un_jour){\r\n        set_annee(une_annee);\r\n        set_mois(un_mois);\r\n        set_jour(un_jour);\r\n    }\r\n    short set_annee(short une_annee);\r\n    short set_mois(short un_mois);\r\n    short set_jour(short un_jour);\r\n};\r\n\"','','\"\r\n\r\nint main(){\r\n    Date test1(2017,10,32);\r\n    cout << \\\"test1 = \\\" << test1.get_annee() << \\\"/\\\" << test1.get_mois() << \\\"/\\\" << test1.get_jour() << endl;\r\n\r\n    Date test2(2017,10,62);\r\n    cout << \\\"test2 = \\\" << test2.get_annee() << \\\"/\\\" << test2.get_mois() << \\\"/\\\" << test2.get_jour() << endl;\r\n\r\n    Date test3(2017,12,32);\r\n    cout << \\\"test3 = \\\" << test3.get_annee() << \\\"/\\\" << test3.get_mois() << \\\"/\\\" << test3.get_jour() << endl;\r\n\r\n    Date test4(2017,10,93);\r\n    cout << \\\"test4 = \\\" << test4.get_annee() << \\\"/\\\" << test4.get_mois() << \\\"/\\\" << test4.get_jour() << endl;\r\n\r\n    Date test5(2017,2,30);\r\n    cout << \\\"test5 = \\\" << test5.get_annee() << \\\"/\\\" << test5.get_mois() << \\\"/\\\" << test5.get_jour() << endl;\r\n\r\n    Date test6(2016,2,30);\r\n    cout << \\\"test6 = \\\" << test6.get_annee() << \\\"/\\\" << test6.get_mois() << \\\"/\\\" << test6.get_jour() << endl;\r\n\r\n    Date test7(2000,2,30);\r\n    cout << \\\"test7 = \\\" << test7.get_annee() << \\\"/\\\" << test7.get_mois() << \\\"/\\\" << test7.get_jour() << endl;\r\n\r\n    Date test8(2100,2,30);\r\n    cout << \\\"test8 = \\\" << test7.get_annee() << \\\"/\\\" << test8.get_mois() << \\\"/\\\" << test8.get_jour() << endl;\r\n\r\n\r\n}\r\n\"','\"test1 = 2017/11/1\r\ntest2 = 2017/12/1\r\ntest3 = 2018/1/1\r\ntest4 = 2018/1/1\r\ntest5 = 2017/3/2\r\ntest6 = 2016/3/1\r\ntest7 = 2000/3/1\r\ntest8 = 2100/3/2\r\n\"','',''),(131,8,'','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n/*\r\nUn numéro de téléphone.\r\n\r\nAttributs :\r\n - _indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n - _numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n*/\r\nclass Telephone{\r\n    char _indicatif_regional[4];\r\n    char _numero[8];\r\npublic:\r\n\r\n    /*\r\n    Constructeur paramétré.\r\n\r\n    Parmètres :\r\n     - indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n     - numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n    */\r\n    Telephone(const char indicatif_regional[], const char numero[]){\r\n        bzero(_indicatif_regional, 4);\r\n        bzero(_numero, 8);\r\n        strncpy(_indicatif_regional, indicatif_regional, 3);\r\n        strncpy(_numero, numero, 7);\r\n    }\r\n\r\n    /*\r\n    Accesseur de l\'indicatif régional.\r\n\r\n    Retour (char[]) : un pointeur vers l\'indicatif régional.\r\n    */\r\n    char* get_indicatif_regional(){\r\n        return _indicatif_regional;\r\n    }\r\n\r\n    /*\r\n    Accesseur du numéro.\r\n\r\n    Retour (char[]) : un pointeur vers le numéro de téléphone.\r\n    */\r\n    char* get_numero(){\r\n        return _numero;\r\n    }\r\n    \r\n};\r\n\r\n/*\r\nUn contact téléphonique.\r\n\r\nAttributs :\r\n - _id (int) : identifiant numérique du contact.\r\n - _nom (string) : nom de famille du contact.\r\n - _premon (string) : prénom du contact.\r\n - _telephone (Telephone*) : numéro de téléphone du contact.\r\n*/\r\nclass Contact{\r\n    int _id;\r\n    string _nom, _prenom;\r\n    Telephone* _telephone;\r\n\r\npublic:\r\n    /*\r\n    Constructeur de Contact.\r\n\r\n    Paramètres :\r\n     - id (int) : identifiant numérique du contact.\r\n     - nom (string) : nom de famille du contact.\r\n     - premon (string) : prénom du contact.\r\n     - no_tel (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    Contact(int id, string nom, string prenom, const char no_tel[]){\r\n       _id=id;\r\n       _nom=nom;\r\n       _prenom=prenom;\r\n       _telephone=new Telephone(no_tel, no_tel+3);\r\n    }\r\n\r\n    /*\r\n    Accesseur de l\'identifiant.\r\n\r\n    Retour (int) : l\'identifiant numérique du contact.\r\n    */\r\n    int get_id(){\r\n        return _id;\r\n    }\r\n    /*\r\n    Accesseur du nom.\r\n\r\n    Retour (string) : le nom de famille du contact.\r\n    */\r\n    string get_nom(){\r\n        return _nom;\r\n    }\r\n    /*\r\n    Accesseur du prénom.\r\n\r\n    Retour (string) : le prénom de famille du contact.\r\n    */\r\n    string get_prenom(){\r\n        return _prenom;\r\n    }\r\n    /*\r\n    Accesseur du numéro de téléphone.\r\n\r\n    Retour (Telephone*) : le numéro de téléphone du contact.\r\n    */\r\n    Telephone* get_telephone(){\r\n        return _telephone;\r\n    }\r\n    /*\r\n    Mutateur du numéro de téléphone.\r\n\r\n    Paramètres :\r\n     un_no_telephone (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    char* set_telephone(const char un_no_telephone[]){\r\n        delete _telephone;\r\n        _telephone = new Telephone(un_no_telephone, un_no_telephone+3);\r\n    }\r\n};\r\n\r\nint main(){\r\n    Contact marie_domicile(1, \\\"Curie\\\", \\\"Marie\\\", \\\"5141234567\\\");\r\n\r\n\"\r\n','','\"\r\n    //Affiche le numéro de téléphone du domicile de Marie\r\n    cout << marie_domicile.get_prenom() << \\\" (domicile) : \\\";\r\n    cout << marie_domicile.get_telephone()->get_indicatif_regional() << marie_domicile.get_telephone()->get_numero() << endl;\r\n    //Affiche le numéro de téléphone du cellulaire de Marie\r\n    cout << marie_cel.get_prenom() << \\\" (cel) : \\\";\r\n    cout << marie_cel.get_telephone()->get_indicatif_regional() << marie_cel.get_telephone()->get_numero() << endl;\r\n}\r\n\"','\"Marie (domicile) : 5141234567\r\nMarie (cel) : 5141234567\r\n\"','',''),(132,8,'','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n/*\r\nUn numéro de téléphone.\r\n\r\nAttributs :\r\n - _indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n - _numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n*/\r\nclass Telephone{\r\n    char _indicatif_regional[4];\r\n    char _numero[8];\r\npublic:\r\n\r\n    /*\r\n    Constructeur paramétré.\r\n\r\n    Parmètres :\r\n     - indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n     - numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n    */\r\n    Telephone(const char indicatif_regional[], const char numero[]){\r\n        bzero(_indicatif_regional, 4);\r\n        bzero(_numero, 8);\r\n        strncpy(_indicatif_regional, indicatif_regional, 3);\r\n        strncpy(_numero, numero, 7);\r\n    }\r\n\r\n    /*\r\n    Accesseur de l\'indicatif régional.\r\n\r\n    Retour (char[]) : un pointeur vers l\'indicatif régional.\r\n    */\r\n    char* get_indicatif_regional(){\r\n        return _indicatif_regional;\r\n    }\r\n\r\n    /*\r\n    Accesseur du numéro.\r\n\r\n    Retour (char[]) : un pointeur vers le numéro de téléphone.\r\n    */\r\n    char* get_numero(){\r\n        return _numero;\r\n    }\r\n    \r\n};\r\n\r\n/*\r\nUn contact téléphonique.\r\n\r\nAttributs :\r\n - _id (int) : identifiant numérique du contact.\r\n - _nom (string) : nom de famille du contact.\r\n - _premon (string) : prénom du contact.\r\n - _telephone (Telephone*) : numéro de téléphone du contact.\r\n*/\r\nclass Contact{\r\n    int _id;\r\n    string _nom, _prenom;\r\n    Telephone* _telephone;\r\n\r\npublic:\r\n    /*\r\n    Constructeur de Contact.\r\n\r\n    Paramètres :\r\n     - id (int) : identifiant numérique du contact.\r\n     - nom (string) : nom de famille du contact.\r\n     - premon (string) : prénom du contact.\r\n     - no_tel (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    Contact(int id, string nom, string prenom, const char no_tel[]){\r\n       _id=id;\r\n       _nom=nom;\r\n       _prenom=prenom;\r\n       _telephone=new Telephone(no_tel, no_tel+3);\r\n    }\r\n\r\n    /*\r\n    Accesseur de l\'identifiant.\r\n\r\n    Retour (int) : l\'identifiant numérique du contact.\r\n    */\r\n    int get_id(){\r\n        return _id;\r\n    }\r\n    /*\r\n    Accesseur du nom.\r\n\r\n    Retour (string) : le nom de famille du contact.\r\n    */\r\n    string get_nom(){\r\n        return _nom;\r\n    }\r\n    /*\r\n    Accesseur du prénom.\r\n\r\n    Retour (string) : le prénom de famille du contact.\r\n    */\r\n    string get_prenom(){\r\n        return _prenom;\r\n    }\r\n    /*\r\n    Accesseur du numéro de téléphone.\r\n\r\n    Retour (Telephone*) : le numéro de téléphone du contact.\r\n    */\r\n    Telephone* get_telephone(){\r\n        return _telephone;\r\n    }\r\n    /*\r\n    Mutateur du numéro de téléphone.\r\n\r\n    Paramètres :\r\n     un_no_telephone (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    char* set_telephone(const char un_no_telephone[]){\r\n        delete _telephone;\r\n        _telephone = new Telephone(un_no_telephone, un_no_telephone+3);\r\n    }\r\n\"','','\"\r\n};\r\n\r\nint main(){\r\n    Contact marie_domicile(1, \\\"Curie\\\", \\\"Marie\\\", \\\"5141234567\\\");\r\n    Contact marie_cel(marie_domicile);\r\n \r\n    //Donne un numéro différent au contact copié\r\n    marie_cel.set_telephone(\\\"5144567890\\\");\r\n\r\n    //Affiche le numéro du domicile\r\n    cout << marie_domicile.get_prenom() << \\\" (domicile) : \\\";\r\n    cout << marie_domicile.get_telephone()->get_indicatif_regional() << marie_domicile.get_telephone()->get_numero() << endl;\r\n\r\n    //Affiche le numéro du cellulaire\r\n    cout << marie_cel.get_prenom() << \\\" (cel) : \\\";\r\n    cout << marie_cel.get_telephone()->get_indicatif_regional() << marie_cel.get_telephone()->get_numero() << endl;\r\n}\r\n\"','\"Marie (domicile) : 5141234567\r\nMarie (cel) : 5144567890\r\n\"','',''),(133,8,'','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n/*\r\nUn numéro de téléphone.\r\n\r\nAttributs :\r\n - _indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n - _numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n*/\r\nclass Telephone{\r\n    char _indicatif_regional[4];\r\n    char _numero[8];\r\npublic:\r\n\r\n    /*\r\n    Constructeur paramétré.\r\n\r\n    Parmètres :\r\n     - indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n     - numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n    */\r\n    Telephone(const char indicatif_regional[], const char numero[]){\r\n        bzero(_indicatif_regional, 4);\r\n        bzero(_numero, 8);\r\n        strncpy(_indicatif_regional, indicatif_regional, 3);\r\n        strncpy(_numero, numero, 7);\r\n    }\r\n\r\n    /*\r\n    Accesseur de l\'indicatif régional.\r\n\r\n    Retour (char[]) : un pointeur vers l\'indicatif régional.\r\n    */\r\n    char* get_indicatif_regional(){\r\n        return _indicatif_regional;\r\n    }\r\n\r\n    /*\r\n    Accesseur du numéro.\r\n\r\n    Retour (char[]) : un pointeur vers le numéro de téléphone.\r\n    */\r\n    char* get_numero(){\r\n        return _numero;\r\n    }\r\n    \r\n};\r\n\r\n/*\r\nUn contact téléphonique.\r\n\r\nAttributs :\r\n - _id (int) : identifiant numérique du contact.\r\n - _nom (string) : nom de famille du contact.\r\n - _premon (string) : prénom du contact.\r\n - _telephone (Telephone*) : numéro de téléphone du contact.\r\n*/\r\nclass Contact{\r\n    int _id;\r\n    string _nom, _prenom;\r\n    Telephone* _telephone;\r\n\r\npublic:\r\n    /*\r\n    Constructeur de Contact.\r\n\r\n    Paramètres :\r\n     - id (int) : identifiant numérique du contact.\r\n     - nom (string) : nom de famille du contact.\r\n     - premon (string) : prénom du contact.\r\n     - no_tel (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    Contact(int id, string nom, string prenom, const char no_tel[]){\r\n       _id=id;\r\n       _nom=nom;\r\n       _prenom=prenom;\r\n       _telephone=new Telephone(no_tel, no_tel+3);\r\n    }\r\n\r\n    /*\r\n    Destructeur du contact\r\n    */\r\n    ~Contact(){\r\n        delete _telephone;\r\n     }\r\n\r\n    /*\r\n    Accesseur de l\'identifiant.\r\n\r\n    Retour (int) : l\'identifiant numérique du contact.\r\n    */\r\n    int get_id(){\r\n        return _id;\r\n    }\r\n    /*\r\n    Accesseur du nom.\r\n\r\n    Retour (string) : le nom de famille du contact.\r\n    */\r\n    string get_nom(){\r\n        return _nom;\r\n    }\r\n    /*\r\n    Accesseur du prénom.\r\n\r\n    Retour (string) : le prénom de famille du contact.\r\n    */\r\n    string get_prenom(){\r\n        return _prenom;\r\n    }\r\n    /*\r\n    Accesseur du numéro de téléphone.\r\n\r\n    Retour (Telephone*) : le numéro de téléphone du contact.\r\n    */\r\n    Telephone* get_telephone(){\r\n        return _telephone;\r\n    }\r\n    /*\r\n    Mutateur du numéro de téléphone.\r\n\r\n    Paramètres :\r\n     un_no_telephone (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    char* set_telephone(const char un_no_telephone[]){\r\n        delete _telephone;\r\n        _telephone = new Telephone(un_no_telephone, un_no_telephone+3);\r\n    }\r\n\"','','\"};\r\n\r\nint main(){\r\n    const int NB_CONTACTS=1000;\r\n\r\n    //On cherche le contact dont l\'ID est le plus grand.\r\n    Contact numero_max(0,\\\"\\\",\\\"\\\",\\\"0123456789\\\");\r\n    for(int i=1; i<NB_CONTACTS; i++){\r\n	Contact numero_aleatoire(rand()%1000,\\\"\\\",\\\"\\\",to_string(rand()%8999999999+1000000000).c_str());\r\n        //Si on trouve un numéro d\'ID plus grand, on le copie pour le conserver\r\n        if(numero_aleatoire.get_id()>numero_max.get_id()){\r\n            numero_max=numero_aleatoire;\r\n        }\r\n    }\r\n    //Affiche le contact dont l\'ID est le plus grand.\r\n    cout << numero_max.get_prenom() << \\\"(id=\\\" << numero_max.get_id() << \\\") : \\\";\r\n    cout << numero_max.get_telephone()->get_indicatif_regional() << numero_max.get_telephone()->get_numero() << endl;\r\n}\"\r\n','\"(id=999) : 2623380595\r\n\"','',''),(141,8,'','','\"#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n/*\r\nUn numéro de téléphone.\r\n\r\nAttributs :\r\n - _indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n - _numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n*/\r\nclass Telephone{\r\n    char _indicatif_regional[4];\r\n    char _numero[8];\r\n\r\n    //Cette variable statique sert à compter le nombre d\'objets Telephone\r\n    // instanciés à un moment donné.\r\n    static int _nombre_instances;\r\n\r\npublic:\r\n\r\n    /*\r\n    Constructeur paramétré.\r\n\r\n    Parmètres :\r\n     - indicatif_regional (char[4]) : L\'indicatif régional à 3 chiffres du numéro de téléphone\r\n     - numero (char[8]) : Les 7 chiffres du numéro après l\'indicatif régional.\r\n    */\r\n    Telephone(const char indicatif_regional[], const char numero[]){\r\n	//Incrémente le compte des instances\r\n	++_nombre_instances;\r\n	\r\n        bzero(_indicatif_regional, 4);\r\n        bzero(_numero, 8);\r\n        strncpy(_indicatif_regional, indicatif_regional, 3);\r\n        strncpy(_numero, numero, 7);\r\n    }\r\n\r\n    /*\r\n      Constructeur par recopie\r\n    */\r\n    Telephone(const Telephone& original){\r\n	//Incrémente le compte des instances\r\n	++_nombre_instances;\r\n	\r\n        bzero(_indicatif_regional, 4);\r\n        bzero(_numero, 8);\r\n        strncpy(_indicatif_regional, original._indicatif_regional, 3);\r\n        strncpy(_numero, original._numero, 7);\r\n    }\r\n    \r\n    ~Telephone(){\r\n	//Décrémente le compte des instances\r\n	--_nombre_instances;\r\n    }\r\n\r\n    static int get_nombre_instances(){\r\n	return _nombre_instances;\r\n    }\r\n    \r\n    /*\r\n    Accesseur de l\'indicatif régional.\r\n\r\n    Retour (char[]) : un pointeur vers l\'indicatif régional.\r\n    */\r\n    char* get_indicatif_regional(){\r\n        return _indicatif_regional;\r\n    }\r\n\r\n    /*\r\n    Accesseur du numéro.\r\n\r\n    Retour (char[]) : un pointeur vers le numéro de téléphone.\r\n    */\r\n    char* get_numero(){\r\n        return _numero;\r\n    }\r\n    \r\n};\r\n\r\nint Telephone::_nombre_instances=0;\r\n\r\n/*\r\nUn contact téléphonique.\r\n\r\nAttributs :\r\n - _id (int) : identifiant numérique du contact.\r\n - _nom (string) : nom de famille du contact.\r\n - _premon (string) : prénom du contact.\r\n - _telephone (Telephone*) : numéro de téléphone du contact.\r\n*/\r\nclass Contact{\r\n    int _id;\r\n    string _nom, _prenom;\r\n    Telephone* _telephone;\r\npublic:\r\n    /*\r\n    Constructeur de Contact.\r\n\r\n    Paramètres :\r\n     - id (int) : identifiant numérique du contact.\r\n     - nom (string) : nom de famille du contact.\r\n     - premon (string) : prénom du contact.\r\n     - no_tel (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    Contact(int id, string nom, string prenom, const char no_tel[]){\r\n       _id=id;\r\n       _nom=nom;\r\n       _prenom=prenom;\r\n       _telephone=new Telephone(no_tel, no_tel+3);\r\n    }\r\n\r\n    /*\r\n    Constructeur par recopie\r\n    */\r\n    Contact(const Contact& original){\r\n        _id=original._id;\r\n         _nom=original._nom;\r\n        _prenom=original._prenom;\r\n        _telephone=new Telephone(*original.get_telephone());\r\n    }\r\n\r\n    \r\n    /*\r\n    Opérateur=\r\n    */\r\n    Contact& operator=(const Contact& original){\r\n        _id=original._id;\r\n	_nom=original._nom;\r\n        _prenom=original._prenom;\r\n\r\n	//Supprime l\'ancien Telephone et en crée un nouveau\r\n	delete _telephone;\r\n        _telephone=new Telephone(*original.get_telephone());\r\n    }\r\n\r\n    /*\r\n    Accesseur de l\'identifiant.\r\n\r\n    Retour (int) : l\'identifiant numérique du contact.\r\n    */\r\n    int get_id() const{\r\n        return _id;\r\n    }\r\n    /*\r\n    Accesseur du nom.\r\n\r\n    Retour (string) : le nom de famille du contact.\r\n    */\r\n    string get_nom() const{\r\n        return _nom;\r\n    }\r\n    /*\r\n    Accesseur du prénom.\r\n\r\n    Retour (string) : le prénom de famille du contact.\r\n    */\r\n    string get_prenom() const{\r\n        return _prenom;\r\n    }\r\n    /*\r\n    Accesseur du numéro de téléphone.\r\n\r\n    Retour (Telephone*) : le numéro de téléphone du contact.\r\n    */\r\n    Telephone* get_telephone() const{\r\n        return _telephone;\r\n    }\r\n    /*\r\n    Mutateur du numéro de téléphone.\r\n\r\n    Paramètres :\r\n     un_no_telephone (char[]) : numéro de téléphone complet à 10 chiffres du contact.\r\n    */\r\n    char* set_telephone(const char un_no_telephone[]){\r\n	//Supprime l\'ancien Telephone et en crée un nouveau\r\n        delete _telephone;\r\n        _telephone = new Telephone(un_no_telephone, un_no_telephone+3);\r\n    }\r\n\"','','\"};\r\n\r\nint affichage_contacts(){\r\n    Contact marie_domicile(1, \\\"Curie\\\", \\\"Marie\\\", \\\"5141234567\\\");\r\n    Contact marie_cel=marie_domicile;\r\n \r\n    //Donne un numéro différent au contact copié\r\n    marie_cel.set_telephone(\\\"5144567890\\\");\r\n\r\n    //Affiche le numéro du domicile\r\n    cout << marie_domicile.get_prenom() << \\\" (domicile) : \\\";\r\n    cout << marie_domicile.get_telephone()->get_indicatif_regional() << marie_domicile.get_telephone()->get_numero() << endl;\r\n\r\n    //Affiche le numéro du cellulaire\r\n    cout << marie_cel.get_prenom() << \\\" (cel) : \\\";\r\n    cout << marie_cel.get_telephone()->get_indicatif_regional() << marie_cel.get_telephone()->get_numero() << endl;\r\n}\r\n\r\nint main(){\r\n    affichage_contacts();\r\n\r\n    cout << \\\"Nombre d\'instances de Telephone : \\\" << Telephone::get_nombre_instances() << endl;\r\n}\r\n\"','\"Marie (domicile) : 5141234567\r\nMarie (cel) : 5144567890\r\nNombre d\'instances de Telephone : 0\r\n\"','',''),(142,8,'','','\"#include<iostream>\r\n#include<string>\r\n\r\nusing namespace std;\r\n\r\n/*\r\n  Un générateur de nombre aléatoire.\r\n\r\n  Le générateur effectue des tirages de nombres entiers pseudo-aléatoires\r\n  entre deux bornes inclusives.\r\n\r\n  Attributs:\r\n  - _borne_inferieure (int) : nombre aléatoire minimal possible\r\n  - _borne_superieure (int) : nombre aléatoire maximal possible\r\n*/\r\nclass GenerateurAleatoire{\r\n protected:\r\n    int _borne_inferieure;\r\n    int _borne_superieure;\r\n\r\n    /*\r\n      Effectue le tirage d\'un nombre pseudo-aléatoire.\r\n\r\n      Retour : (int) un nombre sélectionné pseudo-aléatoirement \r\n      dans l\'intervalle [_borne_inferieure, _borne_superieure].\r\n    */\r\n    int _tirage_numerique(){\r\n        return rand()%(_borne_superieure-_borne_inferieure+1)+_borne_inferieure;\r\n    }\r\n    \r\n public:\r\n\r\n    /*\r\n      Constructeur\r\n\r\n      Paramètres:\r\n      - min (int) : nombre aléatoire minimal possible. 0 si omis. \r\n      - max (int) : nombre aléatoire maximal possible. 1 si omis.\r\n    */\r\n    GenerateurAleatoire(int min=0, int max=1){\r\n        _borne_inferieure=min;\r\n        _borne_superieure=max;\r\n    }\r\n\r\n    virtual string tirage()=0;\r\n\r\n};\r\n\"\r\n','','\"\r\nint main(){\r\n    De de_6_faces=De(6);\r\n\r\n    for(int i=0; i<10; i++){\r\n	cout << de_6_faces.tirage() << \\\" \\\";\r\n    }\r\n}\r\n\"\r\n','\"2 5 4 2 6 2 5 1 4 2 \"','',''),(143,8,'','','\"#include<iostream>\r\n#include<string>\r\n\r\nusing namespace std;\r\n\r\n/*\r\nUn générateur de nombre aléatoire.\r\n\r\nLe générateur effectue des tirages de nombres entiers pseudo-aléatoires\r\nentre deux bornes inclusives.\r\n\r\nAttributs:\r\n - _borne_inferieure (int) : nombre aléatoire minimal possible\r\n - _borne_superieure (int) : nombre aléatoire maximal possible\r\n */\r\nclass GenerateurAleatoire{\r\nprotected:\r\n    int _borne_inferieure;\r\n    int _borne_superieure;\r\n\r\n    /*\r\n      Effectue le tirage d\'un nombre pseudo-aléatoire.\r\n\r\n      Retour : (int) un nombre sélectionné pseudo-aléatoirement \r\n      dans l\'intervalle [_borne_inferieure, _borne_superieure].\r\n     */\r\n    int _tirage_numerique(){\r\n	return rand()%(_borne_superieure-_borne_inferieure+1)+_borne_inferieure;\r\n    }\r\n    \r\npublic:\r\n\r\n    /*\r\n      Constructeur\r\n\r\n      Paramètres:\r\n      - min (int) : nombre aléatoire minimal possible. 0 si omis. \r\n      - max (int) : nombre aléatoire maximal possible. 1 si omis.\r\n     */\r\n    GenerateurAleatoire(int min=0, int max=1){\r\n	_borne_inferieure=min;\r\n	_borne_superieure=max;\r\n    }\r\n\r\n    virtual string tirage()=0;\r\n\r\n};\r\n\"\r\n','/*\r\nUn générateur de nombre pseudo-aléatoire simulant une pièce de monnaie.\r\n\r\nSeuls deux résultats sont possibles.\r\n\r\nAttributs:\r\n - _pile (string) : la chaîne de caractères représentant le résultat pile.\r\n - _face (string) : la chaîne de caractères représentant le résultat face.\r\n */\r\nclass Piece{\r\n};','\"int main(){\r\n    Piece orignal=Piece(\\\"Pile\\\", \\\"Face\\\");\r\n\r\n    for(int i=0; i<10; i++){\r\n	cout << orignal.tirage() << endl;\r\n    }\r\n}\r\n\"','\"Pile\r\nFace\r\nPile\r\nPile\r\nPile\r\nPile\r\nFace\r\nFace\r\nPile\r\nPile\r\n\"','',''),(184,8,'$n=[];\r\n$nbs=\"\";\r\nfor($i=0;$i<50;$i++){\r\n $x=rand(0,100);\r\n $n[]=$x;\r\n $nbs=$nbs.\"$x,\";\r\n if($i==25) $nbs=$nbs.\"\\n                  \";\r\n}\r\n$nbs=substr($nbs, 0, -1);\r\n\r\n\r\n$e=\"\";\r\n$r=\"\";\r\nfor($i=0;$i<rand(5,15);$i++){\r\n $x=rand(0,100);\r\n if(in_array($x, $n)){\r\n  $r=$r.\"oui\\n\";\r\n }\r\n else{\r\n  $r=$r.\"non\\n\";\r\n }\r\n $e=$e.\"$x\\n\";\r\n}\r\n\r\n','','\"#include<algorithm>\r\n#include<vector>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    vector<int> v{\" . $nbs . \"};\r\n\r\n    while(!cin.fail())\r\n    {\r\n        int entree;\r\n        cin >> entree;\r\n        if(cin.fail()) break;\r\n\"','','\"    }\r\n}\"','$r','','$e'),(185,8,'$n=[];\r\n$nbs=\"\";\r\n$r=0;\r\nfor($i=0;$i<149;$i++){\r\n if(rand(0,7)){\r\n  $x=rand(0,100);\r\n }\r\n else{\r\n  $x=42;\r\n  $r++;\r\n }\r\n $n[]=$x;\r\n $nbs=$nbs.\"$x,\";\r\n if(($i+1)%25==0) $nbs=$nbs.\"\\n                  \";\r\n}\r\n$nbs=substr($nbs,0,-1);\r\n','','\"#include<algorithm>\r\n#include<vector>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    vector<int> v{\" . $nbs . \"};\r\n\r\n\"','','\"}\"','\"$r\\n\"','',''),(186,8,'$n=[];\r\n$nbs=\"\";\r\n$r=0;\r\nfor($i=0;$i<149;$i++){\r\n if(rand(0,7)){\r\n  do{\r\n   $y=rand(0,100);\r\n  }\r\n  while($x==$y);\r\n  $x=$y;\r\n  \r\n }\r\n else{\r\n  $x=$x;\r\n  $r++;\r\n }\r\n $n[]=$x;\r\n $nbs=$nbs.\"$x,\";\r\n if(($i+1)%25==0) $nbs=$nbs.\"\\n                  \";\r\n}\r\n$nbs=substr($nbs,0,-1);\r\n','','\"#include<algorithm>\r\n#include<vector>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    vector<int> v{\" . $nbs . \"};\r\n\r\n\"','','\"}\"','\"$r\\n\"','',''),(187,8,'$n=[];\r\n$nbs=\"\";\r\n\r\n$x=0;\r\n$r=\"\";\r\n$max=rand(75,125);\r\nfor($i=0;$i<149;$i++){\r\n if(rand(0,12)!=0){\r\n   $x=rand(0,$max-1);\r\n   $r=$r.\"$x, \";\r\n }\r\n else{\r\n  $x=$max;\r\n }\r\n $n[]=$x;\r\n $nbs=$nbs.\"$x,\";\r\n if(($i+1)%25==0) $nbs=$nbs.\"\\n                  \";\r\n}\r\n$nbs=substr($nbs,0,-1);\r\n','','\"#include<algorithm>\r\n#include<vector>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    vector<int> v{\" . $nbs . \"};\r\n\r\n\"','','\"\r\n    for(vector<int>::iterator it=v.begin(); it!=v.end(); ++it){\r\n        cout << *it << \\\", \\\";\r\n    }\r\n    cout << endl;\r\n}\"','\"$r\\n\"','',''),(188,8,'$n=[];\r\n$nbs=\"\";\r\n\r\n$x=0;\r\n$r=\"\";\r\n$max=rand(80,150);\r\nfor($i=0;$i<149;$i++){\r\n  $x=rand(0,$max);\r\n $n[]=$x;\r\n $nbs=$nbs.\"$x,\";\r\n if(($i+1)%25==0) $nbs=$nbs.\"\\n                  \";\r\n}\r\n$nbs=substr($nbs,0,-1);\r\n','','\"#include<algorithm>\r\n#include<vector>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    vector<int> v{\" . $nbs . \"};\r\n\r\n\"','','\"}\"','max($n).\"\\n\"','',''),(189,8,'$n=[];\r\n$nbs=\"\";\r\n\r\n$x=0;\r\n\r\nfor($i=0;$i<149;$i++){\r\n  $x=rand(0,300);\r\n $n[]=$x;\r\n $nbs=$nbs.\"$x,\";\r\n if(($i+1)%25==0) $nbs=$nbs.\"\\n                  \";\r\n}\r\n$nbs=substr($nbs,0,-1);\r\n\r\nsort($n);','','\"#include<algorithm>\r\n#include<vector>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    vector<int> v{\" . $nbs . \"};\r\n\r\n\"','','\"}\"','$n[1];','','');
/*!40000 ALTER TABLE `question_prog` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `question_systeme` WRITE;
/*!40000 ALTER TABLE `question_systeme` DISABLE KEYS */;
INSERT INTO `question_systeme` VALUES (70,'system','krusty','test -d /home/krusty/burger',''),(71,'q1-2','krusty','test ! -d /home/krusty/documents_volés',''),(72,'q2-1','krusty','test ! -f /tmp/canari',''),(73,'q2-edit1','krusty','test $(grep \"complété = oui\" -c /home/krusty/réponse) == \"1\" -a $(ls -s /home/krusty/réponse|cut -d \" \" -f 1) == \"12\"',''),(134,'installation','krusty',NULL,'manpages'),(137,'q3-2','krusty','apt list --installed 2>/dev/null|grep manpages-fr >/dev/null && apt list --installed 2>/dev/null|grep man-db >/dev/null',''),(138,'q3-3','krusty','! apt list --installed 2>/dev/null|grep manpages-de >/dev/null',''),(139,'installation','krusty','! apt list --installed 2>/dev/null|egrep   \'groff-base|libgdbm3|libpipeline1|man-db|manpages-fr\' &>/dev/null',''),(140,'installation','krusty','[[ $(apt upgrade -s 2>/dev/null | grep -c \'0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded\') == 1 ]]',''),(144,'q1-2','krusty','test ! -d /home/krusty/documents_volés -a -d /home/krusty/mes_notes',''),(145,'q1-4','krusty','test -d /home/krusty/Documents/mes_notes -a ! -d /home/krusty/mes_notes',''),(146,'q4-1','krusty','[[ $(find /home/krusty/ -name \'*~\'|wc -l) == 0 ]]',''),(147,'q4-2','krusty','[[ -d /home/krusty/Images && $(find /home/krusty -maxdepth 1 -regex \'.*\\.\\(jpg\\|gif\\|png\\)\'|wc -l) == 0 && $(find /home/krusty/Images/ -regex \'.*\\.\\(jpg\\|gif\\|png\\)\'|wc -l) == 3 ]]',''),(148,'q4-3','krusty','[[ ! -f /home/krusty/Images/moi.png && -f /home/krusty/Images/moi-20120421.png ]]',''),(149,'q4-4','krusty','[[ -d /home/krusty/Images/Marge && $(find /home/krusty/Images/Marge -regex \'.*\\.\\(jpg\\|png\\|gif\\)\' | wc -l) == 3 ]]',''),(150,'q4-5','krusty','[[ $(find /home/krusty/Images -name \'*.txt\' | wc -l) == 0 && $(find /home/krusty/Documents  -maxdepth 1 -name \'*.txt\'|wc -l) == 2 ]]',''),(151,'','','true',''),(152,'q13-0','petitpoucet','test ! -f /home/petitpoucet/miettes',''),(153,'q13-1','petitpoucet','[[ ! -d /home/petitpoucet/forêt && -d /home/petitpoucet/maison ]]',''),(154,'q13-2','petitpoucet','','14'),(155,'q13-2','petitpoucet','[[ $(ls /home/petitpoucet/maison/miettes/|wc -l) == 0 && $(ls /tmp/miettes*|wc -l) == 14  ]]',''),(156,'q13-4','petitpoucet','test ! -f /tmp/miettes6 -a -f /home/petitpoucet/MyPrecious/précieuse_miette',''),(157,'q13-5','petitpoucet','true','LeP3t1tP0ucetPréfèreB4sh!'),(158,'q5-1','krusty','','Hatoul'),(159,'q5-1','krusty','','bozolesculottes'),(160,'q5-1','krusty','','1tchy&Scr4tcy'),(161,'q5-1','','[[ $(tr \"\\n\" \" \" < /home/krusty/Documents/à_faire.txt) == \"** Choses à faire : ** 1.  changer les piles de mon pacemaker 2.  faire mes rapports d\'impôt 1987 en montant 3.  trouver l\'origine de la fuite de gaz dans le studio 4.  acheter la nourriture pour Hatoul chez le vétérinaire 5.   1. repasser mes nœuds papillons 2. acheter un gallon de cirage à chaussure orange 3. fermer mes comptes aux îles Caïman \" && ! -f /home/krusty/Documents/à_faire2.txt ]]',''),(162,'system','krusty','','16.04.3 LTS (Xenial Xerus)'),(163,'system','krusty','','base-passwd:amd64'),(164,'q6-1','krusty','','/home/krusty/Images/playmarge.jpg'),(165,'q6-2','krusty','[ -L /home/krusty/usb -a \"$(readlink /home/krusty/usb)\" = \"/media/krusty/clé_usb/\" ]',''),(166,'q6-1','krusty','[[ $(readlink /var/backups/choses_à_faire) == \"/home/krusty/Documents/à_faire.txt\" ]]',''),(167,'q6-4','krusty','[[ -f /home/krusty/Documents/plans_étoile_noire.pdf && $(ls -i /home/krusty/Documents/plans_étoile_noire.pdf | cut -d \' \' -f 1) == $(ls -i /tmp/download.pdf.part|cut -d \' \' -f 1) ]]',''),(168,'q7-1','krusty','','1024'),(169,'q7-1','krusty','','1142'),(170,'q7-1','krusty','','1001'),(171,'q7-1','krusty','','maggie'),(172,'qq16-1','krusty','','1000'),(173,'qq16-1','krusty','','lisa'),(174,'q8-1','krusty','[[ $(tail -n 1 /etc/passwd) =~ sideshowbob:x:[0-9]{4}:[0-9]{4}:Robert\\ Underdunk\\ Terwilliger\\ Jr\\.,Cellule\\ 13,,:/home/sideshowbob:/bin/bash ]] && grep -q $(mkpasswd -mSHA-512 \"diebartdie\" $(tail -n 1 /etc/shadow|cut -c 16-23)) /etc/shadow',''),(175,'qq17-1','krusty','','beatles'),(176,'qq17-2','krusty','','H0nOn!J3su1sDém4sQuÉ!'),(177,'q9-1','krusty','','42'),(178,'q9-2','krusty','test $(stat --format=\"%a\" /home/krusty)==\"755\" -a $(stat --format=\"%a\" /home/krusty/privé) == \"750\"',''),(179,'q9-4','krusty','test $(stat --format=\"%G\" /home/krusty/collaborations) == \"sideshows\" -a  $(stat --format=\"%a\" /home/krusty/collaborations) == \"770\"',''),(180,'q9-3','krusty','test $(stat --format=\"%a\" /home/krusty)==\"755\" -a $(stat --format=\"%a\" /home/krusty/commentaires) == \"753\" -o $(stat --format=\"%a\" /home/krusty/commentaires) == \"773\"',''),(181,'q9-5','krusty','test $(stat --format=\'%a\' /home/krusty/Documents) == \"755\" -a $(find /home/krusty/Documents -exec bash -c \'test $(stat --format=\"%a\" {}) == \"644\"\' \\; -a -print|wc -l) == \"4\"',''),(182,'q2-2','krusty','','V1v3_V1M'),(183,'q2-3','krusty','','<G=FIN,gg=DÉBUT>'),(190,'qq19-1','krusty','diff /tmp/bottin.txt /home/krusty/chimie.txt &>/dev/null',''),(191,'qq19-1','krusty','','46'),(192,'tuyauterie','mario','','86'),(193,'tuyauterie','mario','','14'),(194,'tuyauterie','mario','','39'),(195,'tuyauterie','mario','','13'),(196,'q10-5','mario','test -f ~mario/utilisateurs && diff /tmp/réponse /home/mario/utilisateurs  &>/dev/null',''),(197,'q10-6','mario','test -f ~mario/utilisateurs && diff /tmp/réponse /home/mario/utilisateurs &>/dev/null',''),(198,'q10-7','mario','test -f ~mario/utilisateurs && diff /tmp/réponse /home/mario/utilisateurs &>/dev/null',''),(199,'q10-8','mario','test -f ~mario/utilisateurs && diff /tmp/réponse /home/mario/utilisateurs &>/dev/null',''),(200,'q10-9','mario','test -f ~mario/shells && diff /tmp/réponse /home/mario/shells &>/dev/null',''),(201,'q11-1','krusty','test ! -f /tmp/canari',''),(202,'q11-2','krusty','test ! -f /tmp/canari',''),(2789,'examena17-1','eliot','[ $(egrep -c \'export +LC_ALL=\"*fr_CA.utf8\"*\' /home/eliot/.bashrc) -ge 1 ] || [ $(egrep -c \'export +LC_ALL=\"*fr_CA.utf8\"*\' /home/eliot/.profile) -ge 1 ] && [ $(egrep -c \'export +LANGUAGE=\"*fr_CA.utf8\"*\' /home/eliot/.bashrc) -ge 1 ] || [ $(egrep -c \'export +LANGUAGE=\"*fr_CA.utf8\"*\' /home/eliot/.profile) -ge 1 ]',''),(2790,'examena17-2','eliot','[ $(ls /home/eliot | wc -l) == 3 ] && [ $(ls /home/eliot/Images|wc -l) == 118 ] && [ $(ls /home/eliot/Devoirs/devoir*|wc -l) == 71 ] && [ $(ls /home/eliot/Documents|wc -l) == 23 ]','');
/*!40000 ALTER TABLE `question_systeme` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `serie` WRITE;
/*!40000 ALTER TABLE `serie` DISABLE KEYS */;
INSERT INTO `serie` VALUES (1,1,1,'Les expressions et les entrées/sorties','Exercices de base sur les expressions et les opérations de saisie et d\'affichage'),(2,1,2,'Les structures itératives','Ces questions vous permettront de vérifier vos connaissances sur les structures itératives et l\'itération sur les tableaux.'),(3,1,3,'Les tableaux','Ces questions vous permettront de vérifier vos connaissances sur les tableaux, plus précisément le découpage en sous-tableaux, l\'ajout et l\'insertion d\'éléments.'),(4,1,4,'Les chaînes de caractères','Ces questions vous permettront de vérifier vos connaissances sur les chaînes de caractères.'),(5,1,5,'Les fonctions','Ces questions vous permettront de vérifier vos connaissances sur les fonctions, leur appel et leur déclaration.'),(6,1,6,'La validation des fonctions I','Ces questions vous permettront de vérifier vos connaissances sur les fonctions et leur validation par les doctests.'),(7,1,7,'La validation des fonctions II','Ces questions vous permettront de vérifier vos connaissances sur les fonctions et leur validation par les doctests. Pensez à utiliser les fonction existantes.'),(8,2,1,'Les attributs et les méthodes','Ces questions vous permettront de vérifier vos connaissances sur les classes, leurs attributs et leurs méthodes.'),(9,2,2,'La distributrice de billets','Cette section propose comme projet l\'implémentation d\'une classe simulant une distributrice de billet.'),(10,2,3,'Le coffre-fort','Ce quiz vous permettra, en quatre étapes, de réaliser une classe représentant un coffre-fort.'),(11,2,4,'La classe Dé','Implémentation de la classe Dé avec doctests'),(13,5,6,'Les exceptions','Réimplémentation de l\'utilitaire <em>ping<em> en python'),(14,3,2,'Manipulation de répertoires en bash','Exercices de manipulation de répertoires grâce à l\'interpréteur de commande bash.'),(15,3,10,'Introduction à VIM','Exercices d\'introduction à l\'éditeur de texte VIM.'),(16,4,1,'L\'affichage','Exercices de base sur l\'affichage à l\'écran du terminal'),(17,4,3,'Les expressions','Exercices sur les expressions simples'),(18,4,2,'Les types de variable','Exercices sur l\'utilisation des différents types de variable'),(19,4,4,'Les conditions','Exercices simples sur les opérations conditionnelles'),(20,4,5,'Les itérations','Exercices sur les opérations itératives'),(21,4,6,'Les tableaux','Exercices sur les tableaux statiques'),(22,4,7,'Les tableaux bidimensionnels','Exercices sur les tableaux bidimensionnels'),(23,4,8,'Les chaînes de caractères','Exercices sur la manipulation des chaînes de caractères.'),(24,4,9,'Les fonctions','Exercices sur les fonctions et le passage des paramètres.'),(25,5,1,'Introduction aux objets','Exercices de base d\'utilisation des objets'),(26,5,2,'Introduction aux classes','Exercices de base de déclaration des classes'),(27,5,3,'Les trois grands','Exercices sur les constructeurs par recopie, destructeur et opérateur d\'affectation'),(28,3,1,'Introduction à la gestion des paquets','Exercice de recherche, d\'installation, et de suppression de paquets avec APT'),(29,5,4,'L\'héritage','Exercices sur l\'héritage entre classes'),(30,3,3,'Manipulation de fichiers en bash','Exercices de manipulations de fichiers grâce à l\'interpréteur de commandes bash.'),(31,3,100,'Quiz 13 : La manipulation de fichiers','Questions quiz sur les commandes de manipulation de fichier en bash'),(32,3,4,'Recherche dans un fichier','Exercice de recherche dans le contenu de fichiers en bash'),(33,3,101,'Quiz 15 : les fichiers','Questions quiz sur les commandes de manipulation de fichier en bash'),(34,3,5,'Liens directs et symboliques','Exercices sur la création et l\'utilisation des liens symboliques'),(35,3,6,'Utilisateurs et groupes','Exercices de base sur la gestion des utilisateurs et des groupes'),(36,3,102,'Quiz 16 : les utilisateurs',''),(37,3,7,'Création d\'utilisateurs','Exercices de création de nouveaux utilisateurs'),(38,3,8,'Création de groupes','Exercices de création de nouveaux groupes'),(39,3,103,'Quiz 17 : les permissions','Questions quiz sur les permissions de fichier'),(40,3,9,'Permissions','Exercices de manipulation des permissions sur les fichiers'),(41,6,1,'Les algorithmes standards','Exercices sur l\'utilisation des algorithmes standards de la STL'),(42,3,104,'Quiz 18 : la tuyauterie','Quiz sur les redirections de flux standard'),(43,3,11,'La tuyauterie','Exercices sur la combinaison de commandes via le pipe'),(44,3,12,'Exécution des scripts','Exercices d\'exécution de scripts'),(2789,2789,1,'Examen final','Question d\'examen final A17');
/*!40000 ALTER TABLE `serie` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `theme` WRITE;
/*!40000 ALTER TABLE `theme` DISABLE KEYS */;
INSERT INTO `theme` VALUES (0,0,'Quiz',0,'Quiz'),(1,1,'Python 1 : Introduction',0,'Ces exercices portent sur les concepts de base de la programmation structurée, en utilisant le langage Python'),(2,1,'Python 2 : La programmation orientée-objet',1,'Ces exercices portent sur les concepts de la programmation orientée-objet, en utilisant le langage Python'),(3,0,'Système d\'exploitation (Linux)',5,'Ces exercices portent sur l\'utilisation du système d\'exploitation Linux'),(4,8,'C++ : Introduction',2,'Ces exercices portent sur les concepts de base du langage C++'),(5,8,'C++ : La programmation orientée-objet',3,'Ces exercices portent sur la programmation orientée-objet en C++'),(6,8,'C++ : La STL',4,'Ces exercices portent sur l\'utilisation des patrons de classe de la STL en C++');
/*!40000 ALTER TABLE `theme` ENABLE KEYS */;
UNLOCK TABLES;

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO users (userID, username, password) VALUES (99999, 'admin', '8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-01-15 23:09:59
