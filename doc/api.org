#+SETUPFILE: https://plafrance.pages.dti.crosemont.quebec/org-html-themes/org/theme-readtheorg.setup
#+TITLE: API Progression
#+PROPERTY: header-args:sh :results output :exports both

#+begin_warning
  Cette documentation est proposée à titre indicatif seulement et peut changer à tout moment.
#+end_warning



* Versions
Les versions de l'api sont accessibles à des URL distincts pour assurer la rétrocompatibilité.

| Version | URL        |
|       1 | ~/api/v1/~ |

* Points d'entrée
** Publics
| Méthode | URL               | Description                            | Paramètres                                   | Réponse             |
| GET     | ~/doc~            | Documentation                          |                                              | str (HTML)          |
| POST    | ~/auth~           | Authentification                       | username, password ou key_name et key_secret | token, un token JWT |
| POST    | ~/inscription~    | Inscription                            | username, password, rôle                     | token, un token JWT |
| GET     | ~/question/{uri}~ | Obtient la question disponible à <uri> | uri                                          | Question            |

** Privés
Les points d'entrée privés requièrent un token dans l'entête : «Authentification: Bearer <token>»

| Méthode | URL                | Description                       | Paramètres | Réponse |
| GET     | ~/user~            | Obtient l'utilisateur authentifié |            | User    |
| GET     | ~/user/{username}~ | Obtient l'utilisateur /username/  | username   | User    |

* Ressources

Les ressources échangées sont représentées en format [[https://jsonapi.org][JSON-API]]

** Utilisateur

Un utilisateur du système.

*** Identifiant :
username

*** Propriétés:

| Nom      | Type | Valeurs          |
|----------+------+------------------|
| username | str  |                  |
| rôle     | int  | 0=normal,1=admin |
|----------+------+------------------|

*** Relations :

| Nom         | Cardinalité | Type       | description         |
|-------------+-------------+------------+---------------------|
| avancements | 1-n         | Avancement | Liste d'avancements |

** Clé

Une clé donnant accès à un sous-ensemble des services ou ressources de l'API. Les clés peuvent être octroyées temporairement ou être révoquées. Une clé peut être utilisée en lieu et place d'un mot de passe au moment d'effectuer une authentification. Le token JWT retourné après une authentification réussie peut être utilisé pour accéder aux services et ressources donnés par la portée de la clé.

*** Identifiant :
username/nom

*** Propriétés : 

| Nom         | Type   | Valeurs            | Description                                               |
|-------------+--------+--------------------+-----------------------------------------------------------|
| secret      | string |                    | valeur secrète de la clé                                  |
| création    | int    |                    | Timestamp de création                                     |
| expriration | int    |                    | Timestamp d'expiration, 0=n'expire jamais                 |
| portée      | int    |                    | Service ou ressource accessible par la clé.               |
|             |        | 0=Révoquée         | La clé est révoquée pour tout service ou ressource        |
|             |        | 1=Authentification | La clé peut être utilisée pour authentifier l'utilisateur |
|-------------+--------+--------------------+-----------------------------------------------------------|

** Question

Une question générique

*** Identifiant :
URI

*** Hiérarchie

#+begin_src text
Question          
▲                 
├ QuestionProg    
├ QuestionProgEval
├ QuestionSys     
└ QuestionBD
#+end_src


*** Propriétés :

| Nom         | Type | Valeurs      |
|-------------+------+--------------|
| uri         | str  |              |
| titre       | str  |              |
| description | str  |              |
| énoncé      | str  |              |
| sous-type   | str  | questionProg |
|             |      | (obsolète)   |
|             |      | questionSys  |
|             |      | questionBD   |

** Question (sous-type QuestionProg)

Une question spécifiquement de programmation

*** Relations :
| Nom        | Cardinalité | Type       | description                   |
|------------+-------------+------------+-------------------------------|
| ebauches   | 1-n         | Ébauche    | liste d'ébauches de Solution  |
| tests      | 1-n         | Test       | liste de Tests de validation  |

** Avancement

L'avancement d'un utilisateur pour une question

*** Identifiant :
username/question_uri

*** Propriétés:

| Nom  | Type | Valeurs       |
|------+------+---------------|
| état | int  | 0=non débutée |
|      |      | 1=non réussie |
|      |      | 2=réussie     |

*** Relations :

| Nom        | Cardinalité | Type       | Description                    |
|------------+-------------+------------+--------------------------------|
| tentatives | 1-n         | Tentatives | liste de Tentatives effectuées |

*** Liens :

| Nom       | Description                      |
|-----------+----------------------------------|
| tentative | Soumettre une nouvelle tentative |

** Ébauche

Une ébauche de solution fournie comme point de départ à la résolution de l'exercice

*** Identifiant :
question_uri/langage

*** Propriétés:

| Nom     | Type | Valeurs |
|---------+------+---------|
| langage | str  |         |
| code    | str  |         |

** Tentative

Une tentative de réponse à une question.

*** Identifiant :
username/question_uri/date_soumission


*** Hiérarchie

#+begin_src text
Tentative 
▲ 
├ TentativeProg 
├ TentativeSys 
├ TentativeBD 
#+end_src

*** Propriétés :

| Nom             | Type | Valeurs                                                    |
|-----------------+------+------------------------------------------------------------|
| date_soumission | int  | timestamp                                                  |
| feedback        | str  |                                                            |
| sous-type       | str  | tentativeProg                                              |
|                 |      | tentativeSys                                               |
|                 |      | tentativeBD                                                |
| réussi          | bool | vrai ssi la tentative a correctement répondu à la question |

** Tentative (sous-type tentativeProg)

Une tentative de réponse à une question.

*** Propriétés:

| Nom           | Type | Valeurs             |
|---------------+------+---------------------|
| langage       | str  |                     |
| code          | str  |                     |
| tests_réussis | int  | nb de tests réussis |

*** Relations :

| Nom       | Cardinalité | Type     | Description           |
|-----------+-------------+----------+-----------------------|
| résultats | 1-n         | Résultat | les résultats de test |

** Test

Un test de validation d'une question auquel sont soumises les solutions proposées.

*** Identifiant :
question_uri/numéro

*** Propriétés :

| Nom             | Type | Valeurs |
|-----------------+------+---------|
| nom             | str  |         |
| entrée          | str  |         |
| sortie_attendue | str  |         |

** Résultat

Le résultat d'un test pour une solution proposée.

*** Identifiant :
username/question_uri/date_soumission/numéro

*** Propriétés:

| Nom             | Type | Valeurs   |
|-----------------+------+-----------|
| sortie_observée | str  |           |
| sortie_erreur   | str  |           |
| résultat        | bool |           |
| feedback        | str  |           |

** Sauvegarde automatique

La sauvegarde automatique du travail d'un utilisateur pour une question et dans un langage spécifique

*** Identifiant :
username/question_uri/langage

*** Propriétés:

| Nom             | Type | Valeurs   |
|-----------------+------+-----------|
| date_sauvegarde | int  | timestamp |
| code            | str  |           |


* Exemples

#+begin_warning
Les exemples reflètent les résultats réels sur la plus récente version de l'API disponible sur ~https://progression.dti.crosemont.quebec/dev/api/v1/~.
#+end_warning

#+name: get_token
#+BEGIN_SRC sh :eval yes :session s2 :exports none :results output
TOKEN=$(curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/auth" --data '{"username": "jdoe", "password": "Crosemont2021!"}' -H "Content-Type: application/json" | grep -Po '(?<=Token":").*(?=")')
#+END_SRC

#+NAME: json_pretty
#+begin_src python :eval yes :var json_str="{}" :results output :exports none
import json
import sys

print( json.dumps( json.loads(json_str), ensure_ascii=False, indent=4 ) )
#+end_src

** Authentification en tant qu'utilisateur ~jdoe~

#+BEGIN_SRC sh :eval yes
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/auth" --data '{"username": "jdoe", "password": "Crosemont2021!"}' -H "Content-Type: application/json"
#+END_SRC

** Obtenir le profil de l'utilisateur authentifié ~jdoe~

#+BEGIN_SRC sh :eval yes :session s2 :results output
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/user" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir la question «Les fonctions avec paramètres/Rectangle» et ses tests: 

Cette question est disponible à l'URL suivant : https://progression.pages.dti.crosemont.quebec/progression_contenu_demo/9bdf5f1a-489a-441f-9e6e-2c87bba58bf8/info.yml

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/question/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s?include=tests" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir la question «Les fonctions avec paramètres/Rectangle», ses tests et ses ébauches: 

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/question/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s?include=tests,ebauches" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Créer l'avancement de jdoe à la question «Les fonctions avec paramètres/Rectangle»

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
DATA=$(cat <<EOF
{
  "question_uri":"aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s"
}
EOF
)

curl -s --data "$DATA" https://progression.dti.crosemont.quebec/dev/api/v1/user/jdoe/avancements -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir l'avancement de ~jdoe~ pour la question «Les fonctions avec paramètres/Rectangle»

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/avancement/jdoe/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir l'ébauche de solution en Python pour la question «Les fonctions avec paramètres/Rectangle»

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/ebauche/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s/python" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Soumettre une tentative de solution à la question «Les fonctions avec paramètres/Rectangle» et récupérer les résultats

#+NAME: get_tentative
#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*) :results output :exports both :cache yes
DATA=$(cat <<EOF
{
  "langage":"python",
  "code": "# Fonction qui calcule et produit en sortie le périmètre du rectangle dont les côtés sont recus en paramètre\ndef périmètre( une_largeur, une_longueur ):\n# +TODO\n    print( 2 * (une_largeur + une_longueur ) )\n\n# -TODO\n# Fonction qui calcule et produit en sortie l'aire du rectangle dont les côtés sont recus en paramètre\n# +TODO\ndef aire( une_largeur, une_longueur ):\n    print(une_lageur * une_longueur)\n# -TODO\n# Programme principal\n# Entrées\nlargeur = int( input() )\nlongueur = int( input() )\n\n# Appel des fonctions, les côtés du rectangle sont transmis en paramètre\npérimètre( largeur, longueur )\n# +TODO\naire( largeur, longueur )\n"
}
EOF
)

curl -s --data "$DATA" https://progression.dti.crosemont.quebec/dev/api/v1/avancement/jdoe/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s/tentatives?include=resultats -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir une tentative de solution préalablement soumise pour la question «Les fonctions avec paramètres/Rectangle»

#+NAME: get_timestamp
#+BEGIN_SRC sh :eval yes :session s2 :var RES_TENTATIVE=get_tentative :results output :exports none :cache yes
TS=$(echo $RES_TENTATIVE | grep -Po '(?<="date_soumission": )\d*')

printf "%s" $TS
#+END_SRC

#+BEGIN_SRC sh :eval yes :session s2 :var TIMESTAMP=get_timestamp 
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/tentative/jdoe/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s/$TIMESTAMP" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir le test numéro 0 pour la question «Les fonctions avec paramètres/Rectangle»

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/test/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vOWJkZjVmMWEtNDg5YS00NDFmLTllNmUtMmM4N2JiYTU4YmY4L2luZm8ueW1s/0" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Créer ou mettre à jour la sauvegarde de ~jdoe~ pour la question «Les fonctions avec paramètres/Rectangle» et un code ~python~

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
DATA=$(cat <<EOF
{
  "langage":"python",
  "code": "#+TODO\nSystem.out.println('Hi !');\n#-TODO"
}
EOF
)

curl -s --data "$DATA" https://progression.dti.crosemont.quebec/dev/api/v1/avancement/jdoe/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vbGVzX2ZvbmN0aW9uc18wMS9hcHBlbGVyX3VuZV9mb25jdGlvbl9wYXJhbSVDMyVBOXRyJUMzJUE5ZQ/sauvegardes -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir la dernière sauvegarde de ~jdoe~ pour la question «Les fonctions avec paramètres/Rectangle» effectuée avec le langage ~python~: 

#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*)
curl -s "https://progression.dti.crosemont.quebec/dev/api/v1/sauvegarde/jdoe/aHR0cHM6Ly9wcm9ncmVzc2lvbi5wYWdlcy5kdGkuY3Jvc2Vtb250LnF1ZWJlYy9wcm9ncmVzc2lvbl9jb250ZW51X2RlbW8vbGVzX2ZvbmN0aW9uc18wMS9hcHBlbGVyX3VuZV9mb25jdGlvbl9wYXJhbSVDMyVBOXRyJUMzJUE5ZQ/python" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Créer une clé d'authentification pour ~jdoe~

#+NAME: get_clé
#+BEGIN_SRC sh :eval yes :session s2 :post json_pretty(*this*) :cache yes
DATA=$(cat <<EOF
{
  "nom":"cléAuth$(head -c 9 /dev/urandom|base64|tr '/+' '_-')",
  "portée":1
}
EOF
)

curl -s --data "$DATA" "https://progression.dti.crosemont.quebec/dev/api/v1/user/jdoe/cles" -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Authentification par clé d'authentification pour ~jdoe~

#+NAME: get_clé
#+BEGIN_SRC sh :eval yes :session s2 :var RES_CLE=get_clé :results output :exports none
NOM_CLE=$(echo $RES_CLE | grep -Po '(?<="id": "jdoe/)[^"]*')
SECRET=$(echo $RES_CLE | grep -Po '(?<="secret": ")\w*')
#+END_SRC

#+BEGIN_SRC sh :eval yes :session s2
echo $NOM_CLE
echo $SECRET
DATA=$(cat <<EOF
{
  "username":"jdoe",
  "key_name":"$NOM_CLE",
  "key_secret":"$SECRET"
}
EOF
)

curl -s --data "$DATA" "https://progression.dti.crosemont.quebec/dev/api/v1/auth" -H "Content-Type: application/json"
#+END_SRC
