#+SETUPFILE: https://plafrance.pages.dti.crosemont.quebec/org-html-themes/org/theme-readtheorg.setup
#+TITLE: API Progression
#+PROPERTY: header-args:sh :results output
#+PROPERTY: header-args:sh :exports both

#+begin_warning
  Cette documentation est proposée à titre indicatif seulement et peut changer à tout moment.
#+end_warning



* Versions
Les versions de l'api sont accessibles à des URL distincts pour assurer la rétrocompatibilité.

| Version | URL        |
|       1 | ~/api/v1/~ |

* Points d'entrée
** Publics
| Méthode | URL     | Description      | Paramètres         | Réponse             |
| GET     | ~/doc~  | Documentation    |                    | str (HTML)          |
| POST    | ~/auth~ | Authentification | username, password | token, un token JWT |

** Privés
Les points d'entrée privés requierent un token dans l'entête : «Authentification: Bearer <token>»

| Méthode | URL                | Description                       | Réponse |
| GET     | ~/user~            | Obtient l'utilisateur authentifié | User    |
| GET     | ~/user/{username}~ | Obtient l'utilisateur /username/  | User    |

* Ressources

Les ressources échangées sont représentée en format [[https://jsonapi.org][JSON-API]]

** Utilisateur

Un utilisateur du système.

| Identifiant | Propriétés | Type | Valeurs          |
|-------------+------------+------+------------------|
| username    | username   | str  |                  |
|             | rôle       | int  | 0=normal,1=admin |
|-------------+------------+------+------------------|

Relations :
| Nom         | Cardinalité | Type       | Description         |
|-------------+-------------+------------+---------------------|
| catégories  | 1-n         | Catégorie  | liste de Catégories |

** Catégorie

Une catégorie de questions

| Identifiant         | Propriétés  | Type | Valeurs |
|---------------------+-------------+------+---------|
| catǵorie parent/nom | titre       | str  |         |
|                     | description | str  |         |
|---------------------+-------------+------+---------|

Relations :
| Nom                    | Cardinalité | Type                        | Description                                            |
|------------------------+-------------+-----------------------------+--------------------------------------------------------|
| catégories             | 1-n         | Catégorie                   | liste de sous-catégories                               |
| questions              | 1-n         | Question                    | liste de Questions                                     |
| pourcentage_avancement | 1-1         | float(AvancementCatégorie?) | pourcentage d'avancement dans cette catégorie          |
| accessibilité          | 1-1         | bool(AvancementCatégorie?)  | Vrai si la catégorie est accessible pour l'utilisateur |

Liens :
| Nom                    | Description                                            |
|------------------------+--------------------------------------------------------|
| parent                 | Catégorie parent                                       |

** Question

Une question générique


| Hiérarchie         | Identifiant          | Propriétés  | Type | Valeurs      |
|--------------------+----------------------+-------------+------+--------------|
| Question           | catégorie parent/nom | titre       | str  |              |
| ▲                  |                      | description | str  |              |
| │                  |                      | énoncé      | str  |              |
| ├ QuestionProg     |                      | sous-type   | str  | questionProg |
| ├ QuestionProgEval |                      |             |      | (obsolète)   |
| ├ QuestionSys      |                      |             |      | questionSys  |
| └ QuestionBD       |                      |             |      | questionBD   |


Liens :
| Nom                                   | Description                                                   |
|---------------------------------------+---------------------------------------------------------------|
| avancement                            | avancement pour cette question pour l'utilisateur courant     |
| suivantes                             | liste de questions suivantes pour l'utilisateur courant       |
| catégorie                             | Catégorie parent                                              |
| accessibilité (relation? lien? meta?) | Vrai si la question est accessible pour l'utilisateur courant |

** Question (sous-type QuestionProg)

Une question spécifiquement de programmation

Relations :
| Nom      | Cardinalité | Type    | description                  |
|----------+-------------+---------+------------------------------|
| ebauches | 1-n         | Ébauche | liste d'ébauches de Solution |
| tests    | 1-n         | Test    | liste de Tests de validation |

** Avancement

L'avancement d'un utilisateur pour une question

| Identifiant       | Propriétés | Type | Valeurs                          |
|-------------------+------------+------+----------------------------------|
| username/question | état       | int  | DÉBUT(0),NON-RÉUSSI(1),RÉUSSI(2) |

Relations :
| Nom        | Cardinalité | Type       | Description                    |
|------------+-------------+------------+--------------------------------|
| tentatives | 1-n         | Tentatives | liste de Tentatives effectuées |

Liens :
| Nom       | Description                      |
|-----------+----------------------------------|
| tentative | Soumettre une nouvelle tentative |

** Ébauche

Une ébauche de solution fournie comme point de départ à la résolution de l'exercice

| Identifiant      | Propriétés | Type | Valeurs |
|------------------+------------+------+---------|
| question/langage | langage    | str  |         |
|                  | code       | str  |         |

Liens :

| Nom      | Description                                                   |
|----------+---------------------------------------------------------------|
| question | Question pour laquelle cette ébauche de solution est proposée |

** Tentative

Une tentative de réponse à une question.

| Hiérarchie      | Identifiant                | Propriétés      | Type | Valeurs       |
|-----------------+----------------------------+-----------------+------+---------------|
| Tentative       | avancement/date_soumission | date_soumission | int  | timestamp     |
| ▲               |                            | feedback        | str  |               |
| ├ TentativeProg |                            | sous-type       | str  | tentativeProg |
| ├ TentativeSys  |                            |                 |      | tentativeSys  |
| ├ TentativeBD   |                            |                 |      | tentativeBD   |
  

Liens :

| Nom      | Description                                                     |
|----------+-----------------------------------------------------------------|
| question | Question pour laquelle cette tentative de solution est proposée |

** Tentative (sous-type tentativeProg)

Une tentative de réponse à une question.

| Identifiant                | Propriétés      | Type | Valeurs             |
|----------------------------+-----------------+------+---------------------|
|                            | langage         | str  |                     |
|                            | code            | str  |                     |
|                            | tests_réussis   | int  | nb de tests réussis |

Relations :
| Nom       | Cardinalité | Type     | Description           |
|-----------+-------------+----------+-----------------------|
| résultats | 1-n         | Résultat | les résultats de test |

Liens :

| Nom      | Description                                                     |
|----------+-----------------------------------------------------------------|
| question | Question pour laquelle cette tentative de solution est proposée |

** Test

Un test de validation d'une question auquel sont soumises les solutions proposées.

| Identifiant     | Propriétés      | Type | Valeurs |
|-----------------+-----------------+------+---------|
| question/numéro | numéro          | int  |         |
|                 | nom             | str  |         |
|                 | entrée          | str  |         |
|                 | sortie_attendue | str  |         |

** Résultat

Le résultat d'un test pour une solution proposée.

| Identifiant     | Propriétés      | Type | Valeurs   |
|-----------------+-----------------+------+-----------|
| question/numéro | numéro          | int  | # du test |
|                 | sortie_observée | str  |           |
|                 | sortie_erreur   | str  |           |
|                 | résultat        | bool |           |
|                 | feedback        | str  |           |

* Exemples

#+begin_warning
Les exemples marqués ~LIVE~ reflètent les résultats réels sur la plus récente version de l'API disponible sur ~https://progression.dti.crosemont.quebec/api/v1/~.

Les exemples marqués ~PROTOTYPE~ sont générés manuellement à titre indicatif et ne reflètent nécessairement pas les résultats réels.
#+end_warning

#+NAME: get_token
#+BEGIN_SRC sh :eval yes :results output :exports none
RET=$(curl https://progression.dti.crosemont.quebec/api/v1/auth --data "username=jdoe&password=Crosemont2021!" | cut -d '"' -f 4)
printf "%s" $RET
#+END_SRC

#+NAME: json_pretty
#+begin_src python :eval yes :var json_str="{}" :results output :exports none
import json
import sys

print( json.dumps( json.loads(json_str), ensure_ascii=False, indent=4 ) )
#+end_src

** Authentification en tant qu'utilisateur ~jdoe~ : ~LIVE~


#+BEGIN_SRC sh :eval yes :results output
curl https://progression.dti.crosemont.quebec/api/v1/auth --data "username=jdoe&password=Crosemont2021!"
#+END_SRC

** Obtenir le profil de l'utilisateur authentifié ~jdoe~ : ~LIVE~

#+BEGIN_SRC sh :eval yes :var TOKEN=get_token :post json_pretty(*this*) :results output
curl https://progression.dti.crosemont.quebec/api/v1/user -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir la liste des catégories disponibles pour l'utilisateur ~jdoe~ : ~PROTOTYPE~

#+BEGIN_SRC sh :eval never :var TOKEN=get_token :results output
curl https://progression.dti.crosemont.quebec/api/v1/user/jdoe/catégories -H "Authorization: Bearer $TOKEN"
#+END_SRC

#+RESULTS:
: {
:   "links": {
:     "self": "https://progression.dti.crosemont.quebec/api/v1/user/jdoe/catégories"
:   },
:   "data": { [
:     "type": "Catégorie",
:     "id": "programmation_1",
:     "attributes": {
:       "nom": "programmation_1",
:       "titre": "Introduction à la programmation",
:       "description": "Exercices d'introduction à la programmation."
:     },
:     "relationships": {
:       "catégories": {
:         "self": "https://progression.dti.crosemont.quebec/api/v1/catégorie/programmation_1/relationships/catégories"
:         "related": "https://progression.dti.crosemont.quebec/api/v1/catégorie/programmation_1/catégories"
:       },
:       "questions": {
:         "self": "https://progression.dti.crosemont.quebec/api/v1/catégorie/programmation_1/relationships/questions"
:         "related": "https://progression.dti.crosemont.quebec/api/v1/catégorie/programmation_1/questions"
:       }
:     }],
:   }
: }

** Obtenir la catégorie «programmation_1» : ~PROTOTYPE~

#+BEGIN_SRC sh :eval never
curl https://progression.dti.crosemont.quebec/api/v1/catégorie/programmation_1?links=true -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir la sous-catégorie «les_fonctions» : ~PROTOTYPE~

#+BEGIN_SRC sh :eval never
curl https://progression.dti.crosemont.quebec/api/v1/catégorie/programmation_1/les_fonctions?links=true -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir la question «appeler_une_fonction_paramétrée» et ses tests: ~LIVE~

#+BEGIN_SRC sh :eval yes :var TOKEN=get_token :post json_pretty(*this*) :results output
curl https://progression.dti.crosemont.quebec/api/v1/question/cHJvZzEvbGVzX2ZvbmN0aW9uc18wMS9hcHBlbGVyX3VuZV9mb25jdGlvbl9wYXJhbcOpdHLDqWU=?include=tests -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir la question «appeler_une_fonction_paramétrée», ses tests et ses ébauches: ~LIVE~

#+BEGIN_SRC sh :eval yes :var TOKEN=get_token :post json_pretty(*this*) :results output
curl https://progression.dti.crosemont.quebec/api/v1/question/cHJvZzEvbGVzX2ZvbmN0aW9uc18wMS9hcHBlbGVyX3VuZV9mb25jdGlvbl9wYXJhbcOpdHLDqWU=?include=tests,ébauches -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir l'avancement de ~jdoe~ pour la question «appeler_une_fonction_paramétrée» : ~LIVE~

#+BEGIN_SRC sh :eval yes :var TOKEN=get_token :post json_pretty(*this*) :results output
curl https://progression.dti.crosemont.quebec/api/v1/avancement/1/Mg== -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Obtenir l'ébauche de solution en Python pour la question «appeler_une_fonction_paramétrée» : ~PROTOTYPE~

#+BEGIN_SRC sh :eval never
curl https://progression.dti.crosemont.quebec/api/v1/ébauche/cHJvZzEvbGVzX2ZvbmN0aW9uc18wMS9hcHBlbGVyX3VuZV9mb25jdGlvbl9wYXJhbcOpdHLDqWU=/python -H "Authorization: Bearer $TOKEN"
#+END_SRC

** Soumettre une tentative de solution à la question «appeler_une_fonction_paramétrée» : ~PROTOTYPE~

#+BEGIN_SRC sh :eval never
curl --data '{"langage":"python","code":"ma_fonction(\"Allo le monde\")"  }' https://progression.dti.crosemont.quebec/api/v1/tentative/jdoe/cHJvZzEvbGVzX2ZvbmN0aW9uc18wMS9hcHBlbGVyX3VuZV9mb25jdGlvbl9wYXJhbcOpdHLDqWU= -H "Authorization: Bearer $TOKEN"
#+END_SRC

#+RESULTS:
: {
:  "data": {
:    "type": "Tentative",
:    "id": ... ,
:    "attributes": {
:      "tests_réussis":"1",
:      "feedback":"Sers-toi d'un for pour itérer"
:    },
:  "included": [ {
:    "type": "Résultat",
:    "id": "0",
:    "attributes": {
:      "résultat":"true",
:      "sortie_erreur":"",
:      "sortie_observée":"itération 0\n",
:      "feedback":"Bravo!"
:     },
:    "type": "Résultat",
:    "id": "1",
:    "attributes": {
:      "résultat":"false",
:      "sortie_erreur":"x is not defined int the current context",
:      "sortie_observée":"",
:      "feedback":"Mmmm... il va falloir réessayer"
:      } ]
:   }
: }

** Obtenir une tentative de solution préalablement soumise pour la question «appeler_une_fonction_paramétrée» : ~PROTOTYPE~

#+BEGIN_SRC sh :eval never
curl https://progression.dti.crosemont.quebec/api/v1/user/jdoe/tentative/cHJvZzEvbGVzX2ZvbmN0aW9uc18wMS9hcHBlbGVyX3VuZV9mb25jdGlvbl9wYXJhbcOpdHLDqWU=/1612834148 -H "Authorization: Bearer $TOKEN"
#+END_SRC
